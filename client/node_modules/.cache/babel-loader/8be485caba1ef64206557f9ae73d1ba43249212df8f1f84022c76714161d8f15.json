{"ast":null,"code":"import * as o from \"react\";\nimport x from \"classnames\";\nimport { Slot as i } from \"radix-ui\";\nimport { extractProps as T } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as f } from \"../props/margin.props.js\";\nimport { textPropDefs as l } from \"./text.props.js\";\nconst p = o.forwardRef((t, r) => {\n  const {\n    children: e,\n    className: s,\n    asChild: m,\n    as: a = \"span\",\n    color: n,\n    ...P\n  } = T(t, l, f);\n  return o.createElement(i.Root, {\n    \"data-accent-color\": n,\n    ...P,\n    ref: r,\n    className: x(\"rt-Text\", s)\n  }, m ? e : o.createElement(a, null, e));\n});\np.displayName = \"Text\";\nexport { p as Text };","map":{"version":3,"names":["o","x","Slot","i","extractProps","T","marginPropDefs","f","textPropDefs","l","p","forwardRef","t","r","children","e","className","s","asChild","m","as","a","color","n","P","createElement","Root","ref","displayName","Text"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/themes/src/components/text.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { textPropDefs } from './text.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype TextElement = React.ElementRef<'span'>;\ntype TextOwnProps = GetPropDefTypes<typeof textPropDefs>;\ninterface CommonTextProps extends MarginProps, TextOwnProps {}\ntype TextSpanProps = { as?: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype TextDivProps = { as: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype TextLabelProps = { as: 'label' } & ComponentPropsWithout<'label', RemovedProps>;\ntype TextPProps = { as: 'p' } & ComponentPropsWithout<'p', RemovedProps>;\ntype TextProps = CommonTextProps & (TextSpanProps | TextDivProps | TextLabelProps | TextPProps);\n\nconst Text = React.forwardRef<TextElement, TextProps>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    asChild,\n    as: Tag = 'span',\n    color,\n    ...textProps\n  } = extractProps(props, textPropDefs, marginPropDefs);\n  return (\n    <Slot.Root\n      data-accent-color={color}\n      {...textProps}\n      ref={forwardedRef}\n      className={classNames('rt-Text', className)}\n    >\n      {asChild ? children : <Tag>{children}</Tag>}\n    </Slot.Root>\n  );\n});\nText.displayName = 'Text';\n\nexport { Text };\nexport type { TextProps };\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AACvB,SAASC,IAAA,IAAAC,CAAA,QAAY;AAErB,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAC/B,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAe7B,MAAMC,CAAA,GAAOV,CAAA,CAAMW,UAAA,CAAmC,CAACC,CAAA,EAAOC,CAAA,KAAiB;EAC7E,MAAM;IACJC,QAAA,EAAAC,CAAA;IACAC,SAAA,EAAAC,CAAA;IACAC,OAAA,EAAAC,CAAA;IACAC,EAAA,EAAIC,CAAA,GAAM;IACVC,KAAA,EAAAC,CAAA;IACA,GAAGC;EACL,IAAInB,CAAA,CAAaO,CAAA,EAAOH,CAAA,EAAcF,CAAc;EACpD,OACEP,CAAA,CAAAyB,aAAA,CAACtB,CAAA,CAAKuB,IAAA,EAAL;IACC,qBAAmBH,CAAA;IAClB,GAAGC,CAAA;IACJG,GAAA,EAAKd,CAAA;IACLG,SAAA,EAAWf,CAAA,CAAW,WAAWgB,CAAS;EAAA,GAEzCE,CAAA,GAAUJ,CAAA,GAAWf,CAAA,CAAAyB,aAAA,CAACJ,CAAA,QAAKN,CAAS,CACvC,CAEJ;AAAA,CAAC;AACDL,CAAA,CAAKkB,WAAA,GAAc;AAAA,SAAAlB,CAAA,IAAAmB,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}