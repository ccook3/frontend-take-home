{"ast":null,"code":"import * as o from \"react\";\nimport f from \"classnames\";\nimport { Slot as i } from \"radix-ui\";\nimport { badgePropDefs as P } from \"./badge.props.js\";\nimport { extractProps as g } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as c } from \"../props/margin.props.js\";\nconst e = o.forwardRef((r, p) => {\n  const {\n      asChild: t,\n      className: s,\n      color: a,\n      radius: m,\n      ...n\n    } = g(r, P, c),\n    d = t ? i.Root : \"span\";\n  return o.createElement(d, {\n    \"data-accent-color\": a,\n    \"data-radius\": m,\n    ...n,\n    ref: p,\n    className: f(\"rt-reset\", \"rt-Badge\", s)\n  });\n});\ne.displayName = \"Badge\";\nexport { e as Badge };","map":{"version":3,"names":["o","f","Slot","i","badgePropDefs","P","extractProps","g","marginPropDefs","c","e","forwardRef","r","p","asChild","t","className","s","color","a","radius","m","n","d","Root","createElement","ref","displayName","Badge"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/themes/src/components/badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { badgePropDefs } from './badge.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype BadgeElement = React.ElementRef<'span'>;\ntype BadgeOwnProps = GetPropDefTypes<typeof badgePropDefs>;\ninterface BadgeProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    BadgeOwnProps {}\nconst Badge = React.forwardRef<BadgeElement, BadgeProps>((props, forwardedRef) => {\n  const { asChild, className, color, radius, ...badgeProps } = extractProps(\n    props,\n    badgePropDefs,\n    marginPropDefs\n  );\n  const Comp = asChild ? Slot.Root : 'span';\n  return (\n    <Comp\n      data-accent-color={color}\n      data-radius={radius}\n      {...badgeProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-Badge', className)}\n    />\n  );\n});\nBadge.displayName = 'Badge';\n\nexport { Badge };\nexport type { BadgeProps };\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AACvB,SAASC,IAAA,IAAAC,CAAA,QAAY;AAErB,SAASC,aAAA,IAAAC,CAAA,QAAqB;AAC9B,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAY/B,MAAMC,CAAA,GAAQV,CAAA,CAAMW,UAAA,CAAqC,CAACC,CAAA,EAAOC,CAAA,KAAiB;EAChF,MAAM;MAAEC,OAAA,EAAAC,CAAA;MAASC,SAAA,EAAAC,CAAA;MAAWC,KAAA,EAAAC,CAAA;MAAOC,MAAA,EAAAC,CAAA;MAAQ,GAAGC;IAAW,IAAIf,CAAA,CAC3DK,CAAA,EACAP,CAAA,EACAI,CACF;IACMc,CAAA,GAAOR,CAAA,GAAUZ,CAAA,CAAKqB,IAAA,GAAO;EACnC,OACExB,CAAA,CAAAyB,aAAA,CAACF,CAAA;IACC,qBAAmBJ,CAAA;IACnB,eAAaE,CAAA;IACZ,GAAGC,CAAA;IACJI,GAAA,EAAKb,CAAA;IACLG,SAAA,EAAWf,CAAA,CAAW,YAAY,YAAYgB,CAAS;EAAA,CACzD,CAEJ;AAAA,CAAC;AACDP,CAAA,CAAMiB,WAAA,GAAc;AAAA,SAAAjB,CAAA,IAAAkB,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}