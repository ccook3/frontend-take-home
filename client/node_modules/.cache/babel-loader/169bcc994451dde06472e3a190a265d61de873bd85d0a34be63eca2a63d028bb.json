{"ast":null,"code":"import * as s from \"react\";\nimport a from \"classnames\";\nimport { Tabs as p } from \"radix-ui\";\nimport { tabsListPropDefs as g } from \"./tabs.props.js\";\nimport { extractProps as i } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as T } from \"../props/margin.props.js\";\nconst m = s.forwardRef((t, o) => {\n  const {\n    className: r,\n    ...e\n  } = i(t, T);\n  return s.createElement(p.Root, {\n    ...e,\n    ref: o,\n    className: a(\"rt-TabsRoot\", r)\n  });\n});\nm.displayName = \"Tabs.Root\";\nconst b = s.forwardRef((t, o) => {\n  const {\n    className: r,\n    color: e,\n    ...n\n  } = i(t, g, T);\n  return s.createElement(p.List, {\n    \"data-accent-color\": e,\n    ...n,\n    asChild: !1,\n    ref: o,\n    className: a(\"rt-BaseTabList\", \"rt-TabsList\", r)\n  });\n});\nb.displayName = \"Tabs.List\";\nconst P = s.forwardRef((t, o) => {\n  const {\n    className: r,\n    children: e,\n    ...n\n  } = t;\n  return s.createElement(p.Trigger, {\n    ...n,\n    asChild: !1,\n    ref: o,\n    className: a(\"rt-reset\", \"rt-BaseTabListTrigger\", \"rt-TabsTrigger\", r)\n  }, s.createElement(\"span\", {\n    className: \"rt-BaseTabListTriggerInner rt-TabsTriggerInner\"\n  }, e), s.createElement(\"span\", {\n    className: \"rt-BaseTabListTriggerInnerHidden rt-TabsTriggerInnerHidden\"\n  }, e));\n});\nP.displayName = \"Tabs.Trigger\";\nconst f = s.forwardRef((t, o) => {\n  const {\n    className: r,\n    ...e\n  } = i(t, T);\n  return s.createElement(p.Content, {\n    ...e,\n    ref: o,\n    className: a(\"rt-TabsContent\", r)\n  });\n});\nf.displayName = \"Tabs.Content\";\nexport { f as Content, b as List, m as Root, P as Trigger };","map":{"version":3,"names":["s","a","Tabs","p","tabsListPropDefs","g","extractProps","i","marginPropDefs","T","m","forwardRef","t","o","className","r","e","createElement","Root","ref","displayName","b","color","n","List","asChild","P","children","Trigger","f","Content"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/themes/src/components/tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Tabs as TabsPrimitive } from 'radix-ui';\n\nimport { tabsListPropDefs } from './tabs.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { tabsContentPropDefs, tabsRootPropDefs } from './tabs.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TabsRootElement = React.ElementRef<typeof TabsPrimitive.Root>;\ntype TabsRootOwnProps = GetPropDefTypes<typeof tabsRootPropDefs>;\ninterface TabsRootProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.Root, 'asChild' | 'color' | 'defaultChecked'>,\n    MarginProps,\n    TabsRootOwnProps {}\nconst TabsRoot = React.forwardRef<TabsRootElement, TabsRootProps>((props, forwardedRef) => {\n  const { className, ...rootProps } = extractProps(props, marginPropDefs);\n  return (\n    <TabsPrimitive.Root\n      {...rootProps}\n      ref={forwardedRef}\n      className={classNames('rt-TabsRoot', className)}\n    />\n  );\n});\nTabsRoot.displayName = 'Tabs.Root';\n\ntype TabsListElement = React.ElementRef<typeof TabsPrimitive.List>;\ntype TabsListOwnProps = GetPropDefTypes<typeof tabsListPropDefs>;\ninterface TabsListProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.List, RemovedProps>,\n    MarginProps,\n    TabsListOwnProps {}\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>((props, forwardedRef) => {\n  const { className, color, ...listProps } = extractProps(props, tabsListPropDefs, marginPropDefs);\n  return (\n    <TabsPrimitive.List\n      data-accent-color={color}\n      {...listProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseTabList', 'rt-TabsList', className)}\n    />\n  );\n});\nTabsList.displayName = 'Tabs.List';\n\ntype TabsTriggerElement = React.ElementRef<typeof TabsPrimitive.Trigger>;\ninterface TabsTriggerProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.Trigger, RemovedProps> {}\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props, forwardedRef) => {\n    const { className, children, ...triggerProps } = props;\n    return (\n      <TabsPrimitive.Trigger\n        {...triggerProps}\n        asChild={false}\n        ref={forwardedRef}\n        className={classNames('rt-reset', 'rt-BaseTabListTrigger', 'rt-TabsTrigger', className)}\n      >\n        <span className=\"rt-BaseTabListTriggerInner rt-TabsTriggerInner\">{children}</span>\n        <span className=\"rt-BaseTabListTriggerInnerHidden rt-TabsTriggerInnerHidden\">\n          {children}\n        </span>\n      </TabsPrimitive.Trigger>\n    );\n  }\n);\nTabsTrigger.displayName = 'Tabs.Trigger';\n\ntype TabsContentElement = React.ElementRef<typeof TabsPrimitive.Content>;\ntype TabsContentOwnProps = GetPropDefTypes<typeof tabsContentPropDefs>;\ninterface TabsContentProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.Content, RemovedProps>,\n    MarginProps,\n    TabsContentOwnProps {}\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props, forwardedRef) => {\n    const { className, ...contentProps } = extractProps(props, marginPropDefs);\n    return (\n      <TabsPrimitive.Content\n        {...contentProps}\n        ref={forwardedRef}\n        className={classNames('rt-TabsContent', className)}\n      />\n    );\n  }\n);\nTabsContent.displayName = 'Tabs.Content';\n\nexport { TabsRoot as Root, TabsList as List, TabsTrigger as Trigger, TabsContent as Content };\nexport type {\n  TabsRootProps as RootProps,\n  TabsListProps as ListProps,\n  TabsTriggerProps as TriggerProps,\n  TabsContentProps as ContentProps,\n};\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AACvB,SAASC,IAAA,IAAQC,CAAA,QAAqB;AAEtC,SAASC,gBAAA,IAAAC,CAAA,QAAwB;AACjC,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAa/B,MAAMC,CAAA,GAAWV,CAAA,CAAMW,UAAA,CAA2C,CAACC,CAAA,EAAOC,CAAA,KAAiB;EACzF,MAAM;IAAEC,SAAA,EAAAC,CAAA;IAAW,GAAGC;EAAU,IAAIT,CAAA,CAAaK,CAAA,EAAOH,CAAc;EACtE,OACET,CAAA,CAAAiB,aAAA,CAACd,CAAA,CAAce,IAAA,EAAd;IACE,GAAGF,CAAA;IACJG,GAAA,EAAKN,CAAA;IACLC,SAAA,EAAWb,CAAA,CAAW,eAAec,CAAS;EAAA,CAChD,CAEJ;AAAA,CAAC;AACDL,CAAA,CAASU,WAAA,GAAc;AAQvB,MAAMC,CAAA,GAAWrB,CAAA,CAAMW,UAAA,CAA2C,CAACC,CAAA,EAAOC,CAAA,KAAiB;EACzF,MAAM;IAAEC,SAAA,EAAAC,CAAA;IAAWO,KAAA,EAAAN,CAAA;IAAO,GAAGO;EAAU,IAAIhB,CAAA,CAAaK,CAAA,EAAOP,CAAA,EAAkBI,CAAc;EAC/F,OACET,CAAA,CAAAiB,aAAA,CAACd,CAAA,CAAcqB,IAAA,EAAd;IACC,qBAAmBR,CAAA;IAClB,GAAGO,CAAA;IACJE,OAAA,EAAS;IACTN,GAAA,EAAKN,CAAA;IACLC,SAAA,EAAWb,CAAA,CAAW,kBAAkB,eAAec,CAAS;EAAA,CAClE,CAEJ;AAAA,CAAC;AACDM,CAAA,CAASD,WAAA,GAAc;AAKvB,MAAMM,CAAA,GAAc1B,CAAA,CAAMW,UAAA,CACxB,CAACC,CAAA,EAAOC,CAAA,KAAiB;EACvB,MAAM;IAAEC,SAAA,EAAAC,CAAA;IAAWY,QAAA,EAAAX,CAAA;IAAU,GAAGO;EAAa,IAAIX,CAAA;EACjD,OACEZ,CAAA,CAAAiB,aAAA,CAACd,CAAA,CAAcyB,OAAA,EAAd;IACE,GAAGL,CAAA;IACJE,OAAA,EAAS;IACTN,GAAA,EAAKN,CAAA;IACLC,SAAA,EAAWb,CAAA,CAAW,YAAY,yBAAyB,kBAAkBc,CAAS;EAAA,GAEtFf,CAAA,CAAAiB,aAAA,CAAC;IAAKH,SAAA,EAAU;EAAA,GAAkDE,CAAS,GAC3EhB,CAAA,CAAAiB,aAAA,CAAC;IAAKH,SAAA,EAAU;EAAA,GACbE,CACH,CACF,CAEJ;AAAA,CACF;AACAU,CAAA,CAAYN,WAAA,GAAc;AAQ1B,MAAMS,CAAA,GAAc7B,CAAA,CAAMW,UAAA,CACxB,CAACC,CAAA,EAAOC,CAAA,KAAiB;EACvB,MAAM;IAAEC,SAAA,EAAAC,CAAA;IAAW,GAAGC;EAAa,IAAIT,CAAA,CAAaK,CAAA,EAAOH,CAAc;EACzE,OACET,CAAA,CAAAiB,aAAA,CAACd,CAAA,CAAc2B,OAAA,EAAd;IACE,GAAGd,CAAA;IACJG,GAAA,EAAKN,CAAA;IACLC,SAAA,EAAWb,CAAA,CAAW,kBAAkBc,CAAS;EAAA,CACnD,CAEJ;AAAA,CACF;AACAc,CAAA,CAAYT,WAAA,GAAc;AAAA,SAAAS,CAAA,IAAAC,OAAA,EAAAT,CAAA,IAAAG,IAAA,EAAAd,CAAA,IAAAQ,IAAA,EAAAQ,CAAA,IAAAE,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}