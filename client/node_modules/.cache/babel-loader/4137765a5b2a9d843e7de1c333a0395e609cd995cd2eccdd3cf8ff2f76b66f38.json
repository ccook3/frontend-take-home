{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/switch/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Root: () => Root,\n  Switch: () => Switch,\n  SwitchThumb: () => SwitchThumb,\n  Thumb: () => Thumb,\n  createSwitchScope: () => createSwitchScope\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/switch/src/switch.tsx\nvar React = __toESM(require(\"react\"));\nvar import_primitive = require(\"@radix-ui/primitive\");\nvar import_react_compose_refs = require(\"@radix-ui/react-compose-refs\");\nvar import_react_context = require(\"@radix-ui/react-context\");\nvar import_react_use_controllable_state = require(\"@radix-ui/react-use-controllable-state\");\nvar import_react_use_previous = require(\"@radix-ui/react-use-previous\");\nvar import_react_use_size = require(\"@radix-ui/react-use-size\");\nvar import_react_primitive = require(\"@radix-ui/react-primitive\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar SWITCH_NAME = \"Switch\";\nvar [createSwitchContext, createSwitchScope] = (0, import_react_context.createContextScope)(SWITCH_NAME);\nvar [SwitchProvider, useSwitchContext] = createSwitchContext(SWITCH_NAME);\nvar Switch = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSwitch,\n    name,\n    checked: checkedProp,\n    defaultChecked,\n    required,\n    disabled,\n    value = \"on\",\n    onCheckedChange,\n    form,\n    ...switchProps\n  } = props;\n  const [button, setButton] = React.useState(null);\n  const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, node => setButton(node));\n  const hasConsumerStoppedPropagationRef = React.useRef(false);\n  const isFormControl = button ? form || !!button.closest(\"form\") : true;\n  const [checked = false, setChecked] = (0, import_react_use_controllable_state.useControllableState)({\n    prop: checkedProp,\n    defaultProp: defaultChecked,\n    onChange: onCheckedChange\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(SwitchProvider, {\n    scope: __scopeSwitch,\n    checked,\n    disabled,\n    children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.button, {\n      type: \"button\",\n      role: \"switch\",\n      \"aria-checked\": checked,\n      \"aria-required\": required,\n      \"data-state\": getState(checked),\n      \"data-disabled\": disabled ? \"\" : void 0,\n      disabled,\n      value,\n      ...switchProps,\n      ref: composedRefs,\n      onClick: (0, import_primitive.composeEventHandlers)(props.onClick, event => {\n        setChecked(prevChecked => !prevChecked);\n        if (isFormControl) {\n          hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n          if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n        }\n      })\n    }), isFormControl && /* @__PURE__ */(0, import_jsx_runtime.jsx)(BubbleInput, {\n      control: button,\n      bubbles: !hasConsumerStoppedPropagationRef.current,\n      name,\n      value,\n      checked,\n      required,\n      disabled,\n      form,\n      style: {\n        transform: \"translateX(-100%)\"\n      }\n    })]\n  });\n});\nSwitch.displayName = SWITCH_NAME;\nvar THUMB_NAME = \"SwitchThumb\";\nvar SwitchThumb = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSwitch,\n    ...thumbProps\n  } = props;\n  const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.span, {\n    \"data-state\": getState(context.checked),\n    \"data-disabled\": context.disabled ? \"\" : void 0,\n    ...thumbProps,\n    ref: forwardedRef\n  });\n});\nSwitchThumb.displayName = THUMB_NAME;\nvar BubbleInput = props => {\n  const {\n    control,\n    checked,\n    bubbles = true,\n    ...inputProps\n  } = props;\n  const ref = React.useRef(null);\n  const prevChecked = (0, import_react_use_previous.usePrevious)(checked);\n  const controlSize = (0, import_react_use_size.useSize)(control);\n  React.useEffect(() => {\n    const input = ref.current;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, \"checked\");\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event(\"click\", {\n        bubbles\n      });\n      setChecked.call(input, checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"input\", {\n    type: \"checkbox\",\n    \"aria-hidden\": true,\n    defaultChecked: checked,\n    ...inputProps,\n    tabIndex: -1,\n    ref,\n    style: {\n      ...props.style,\n      ...controlSize,\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      opacity: 0,\n      margin: 0\n    }\n  });\n};\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Switch;\nvar Thumb = SwitchThumb;","map":{"version":3,"names":["src_exports","__export","Root","Switch","SwitchThumb","Thumb","createSwitchScope","module","exports","__toCommonJS","React","__toESM","require","import_primitive","import_react_compose_refs","import_react_context","import_react_use_controllable_state","import_react_use_previous","import_react_use_size","import_react_primitive","import_jsx_runtime","SWITCH_NAME","createSwitchContext","createContextScope","SwitchProvider","useSwitchContext","forwardRef","props","forwardedRef","__scopeSwitch","name","checked","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","form","switchProps","button","setButton","useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","useRef","isFormControl","closest","setChecked","useControllableState","prop","defaultProp","onChange","jsxs","scope","children","jsx","Primitive","type","role","getState","ref","onClick","composeEventHandlers","event","prevChecked","current","isPropagationStopped","stopPropagation","BubbleInput","control","bubbles","style","transform","displayName","THUMB_NAME","thumbProps","context","span","inputProps","usePrevious","controlSize","useSize","useEffect","input","inputProto","window","HTMLInputElement","prototype","descriptor","Object","getOwnPropertyDescriptor","set","Event","call","dispatchEvent","tabIndex","position","pointerEvents","opacity","margin"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-switch/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-switch/src/switch.tsx"],"sourcesContent":["'use client';\nexport {\n  createSwitchScope,\n  //\n  Switch,\n  SwitchThumb,\n  //\n  Root,\n  Thumb,\n} from './switch';\nexport type { SwitchProps, SwitchThumbProps } from './switch';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Switch\n * -----------------------------------------------------------------------------------------------*/\n\nconst SWITCH_NAME = 'Switch';\n\ntype ScopedProps<P> = P & { __scopeSwitch?: Scope };\nconst [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\n\ntype SwitchContextValue = { checked: boolean; disabled?: boolean };\nconst [SwitchProvider, useSwitchContext] = createSwitchContext<SwitchContextValue>(SWITCH_NAME);\n\ntype SwitchElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SwitchProps extends PrimitiveButtonProps {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  required?: boolean;\n  onCheckedChange?(checked: boolean): void;\n}\n\nconst Switch = React.forwardRef<SwitchElement, SwitchProps>(\n  (props: ScopedProps<SwitchProps>, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = 'on',\n      onCheckedChange,\n      form,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState<HTMLButtonElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? form || !!button.closest('form') : true;\n    const [checked = false, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked,\n      onChange: onCheckedChange,\n    });\n\n    return (\n      <SwitchProvider scope={__scopeSwitch} checked={checked} disabled={disabled}>\n        <Primitive.button\n          type=\"button\"\n          role=\"switch\"\n          aria-checked={checked}\n          aria-required={required}\n          data-state={getState(checked)}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          value={value}\n          {...switchProps}\n          ref={composedRefs}\n          onClick={composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              // if switch is in a form, stop propagation from the button so that we only propagate\n              // one click event (from the input). We propagate changes from an input so that native\n              // form validation works and form events reflect switch updates.\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })}\n        />\n        {isFormControl && (\n          <BubbleInput\n            control={button}\n            bubbles={!hasConsumerStoppedPropagationRef.current}\n            name={name}\n            value={value}\n            checked={checked}\n            required={required}\n            disabled={disabled}\n            form={form}\n            // We transform because the input is absolutely positioned but we have\n            // rendered it **after** the button. This pulls it back to sit on top\n            // of the button.\n            style={{ transform: 'translateX(-100%)' }}\n          />\n        )}\n      </SwitchProvider>\n    );\n  }\n);\n\nSwitch.displayName = SWITCH_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SwitchThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'SwitchThumb';\n\ntype SwitchThumbElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SwitchThumbProps extends PrimitiveSpanProps {}\n\nconst SwitchThumb = React.forwardRef<SwitchThumbElement, SwitchThumbProps>(\n  (props: ScopedProps<SwitchThumbProps>, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return (\n      <Primitive.span\n        data-state={getState(context.checked)}\n        data-disabled={context.disabled ? '' : undefined}\n        {...thumbProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nSwitchThumb.displayName = THUMB_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype InputProps = React.ComponentPropsWithoutRef<'input'>;\ninterface BubbleInputProps extends Omit<InputProps, 'checked'> {\n  checked: boolean;\n  control: HTMLElement | null;\n  bubbles: boolean;\n}\n\nconst BubbleInput = (props: BubbleInputProps) => {\n  const { control, checked, bubbles = true, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n\n  // Bubble checked change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked') as PropertyDescriptor;\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', { bubbles });\n      setChecked.call(input, checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n\n  return (\n    <input\n      type=\"checkbox\"\n      aria-hidden\n      defaultChecked={checked}\n      {...inputProps}\n      tabIndex={-1}\n      ref={ref}\n      style={{\n        ...props.style,\n        ...controlSize,\n        position: 'absolute',\n        pointerEvents: 'none',\n        opacity: 0,\n        margin: 0,\n      }}\n    />\n  );\n};\n\nfunction getState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nconst Root = Switch;\nconst Thumb = SwitchThumb;\n\nexport {\n  createSwitchScope,\n  //\n  Switch,\n  SwitchThumb,\n  //\n  Root,\n  Thumb,\n};\nexport type { SwitchProps, SwitchThumbProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}