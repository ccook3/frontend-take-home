{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/progress/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Indicator: () => Indicator,\n  Progress: () => Progress,\n  ProgressIndicator: () => ProgressIndicator,\n  Root: () => Root,\n  createProgressScope: () => createProgressScope\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/progress/src/progress.tsx\nvar React = __toESM(require(\"react\"));\nvar import_react_context = require(\"@radix-ui/react-context\");\nvar import_react_primitive = require(\"@radix-ui/react-primitive\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar PROGRESS_NAME = \"Progress\";\nvar DEFAULT_MAX = 100;\nvar [createProgressContext, createProgressScope] = (0, import_react_context.createContextScope)(PROGRESS_NAME);\nvar [ProgressProvider, useProgressContext] = createProgressContext(PROGRESS_NAME);\nvar Progress = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeProgress,\n    value: valueProp = null,\n    max: maxProp,\n    getValueLabel = defaultGetValueLabel,\n    ...progressProps\n  } = props;\n  if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n    console.error(getInvalidMaxError(`${maxProp}`, \"Progress\"));\n  }\n  const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n  if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n    console.error(getInvalidValueError(`${valueProp}`, \"Progress\"));\n  }\n  const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n  const valueLabel = isNumber(value) ? getValueLabel(value, max) : void 0;\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(ProgressProvider, {\n    scope: __scopeProgress,\n    value,\n    max,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, {\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": 0,\n      \"aria-valuenow\": isNumber(value) ? value : void 0,\n      \"aria-valuetext\": valueLabel,\n      role: \"progressbar\",\n      \"data-state\": getProgressState(value, max),\n      \"data-value\": value ?? void 0,\n      \"data-max\": max,\n      ...progressProps,\n      ref: forwardedRef\n    })\n  });\n});\nProgress.displayName = PROGRESS_NAME;\nvar INDICATOR_NAME = \"ProgressIndicator\";\nvar ProgressIndicator = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeProgress,\n    ...indicatorProps\n  } = props;\n  const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, {\n    \"data-state\": getProgressState(context.value, context.max),\n    \"data-value\": context.value ?? void 0,\n    \"data-max\": context.max,\n    ...indicatorProps,\n    ref: forwardedRef\n  });\n});\nProgressIndicator.displayName = INDICATOR_NAME;\nfunction defaultGetValueLabel(value, max) {\n  return `${Math.round(value / max * 100)}%`;\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isValidMaxNumber(max) {\n  return isNumber(max) && !isNaN(max) && max > 0;\n}\nfunction isValidValueNumber(value, max) {\n  return isNumber(value) && !isNaN(value) && value <= max && value >= 0;\n}\nfunction getInvalidMaxError(propValue, componentName) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\nfunction getInvalidValueError(propValue, componentName) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\nvar Root = Progress;\nvar Indicator = ProgressIndicator;","map":{"version":3,"names":["src_exports","__export","Indicator","Progress","ProgressIndicator","Root","createProgressScope","module","exports","__toCommonJS","React","__toESM","require","import_react_context","import_react_primitive","import_jsx_runtime","PROGRESS_NAME","DEFAULT_MAX","createProgressContext","createContextScope","ProgressProvider","useProgressContext","forwardRef","props","forwardedRef","__scopeProgress","value","valueProp","max","maxProp","getValueLabel","defaultGetValueLabel","progressProps","isValidMaxNumber","console","error","getInvalidMaxError","isValidValueNumber","getInvalidValueError","valueLabel","isNumber","jsx","scope","children","Primitive","div","role","getProgressState","ref","displayName","INDICATOR_NAME","indicatorProps","context","Math","round","maxValue","isNaN","propValue","componentName"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-progress/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-progress/src/progress.tsx"],"sourcesContent":["'use client';\nexport {\n  createProgressScope,\n  //\n  Progress,\n  ProgressIndicator,\n  //\n  Root,\n  Indicator,\n} from './progress';\nexport type { ProgressProps, ProgressIndicatorProps } from './progress';\n","import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Progress\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROGRESS_NAME = 'Progress';\nconst DEFAULT_MAX = 100;\n\ntype ScopedProps<P> = P & { __scopeProgress?: Scope };\nconst [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\n\ntype ProgressState = 'indeterminate' | 'complete' | 'loading';\ntype ProgressContextValue = { value: number | null; max: number };\nconst [ProgressProvider, useProgressContext] =\n  createProgressContext<ProgressContextValue>(PROGRESS_NAME);\n\ntype ProgressElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ProgressProps extends PrimitiveDivProps {\n  value?: number | null | undefined;\n  max?: number;\n  getValueLabel?(value: number, max: number): string;\n}\n\nconst Progress = React.forwardRef<ProgressElement, ProgressProps>(\n  (props: ScopedProps<ProgressProps>, forwardedRef) => {\n    const {\n      __scopeProgress,\n      value: valueProp = null,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      ...progressProps\n    } = props;\n\n    if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n      console.error(getInvalidMaxError(`${maxProp}`, 'Progress'));\n    }\n\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n\n    if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n      console.error(getInvalidValueError(`${valueProp}`, 'Progress'));\n    }\n\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : undefined;\n\n    return (\n      <ProgressProvider scope={__scopeProgress} value={value} max={max}>\n        <Primitive.div\n          aria-valuemax={max}\n          aria-valuemin={0}\n          aria-valuenow={isNumber(value) ? value : undefined}\n          aria-valuetext={valueLabel}\n          role=\"progressbar\"\n          data-state={getProgressState(value, max)}\n          data-value={value ?? undefined}\n          data-max={max}\n          {...progressProps}\n          ref={forwardedRef}\n        />\n      </ProgressProvider>\n    );\n  }\n);\n\nProgress.displayName = PROGRESS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ProgressIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'ProgressIndicator';\n\ntype ProgressIndicatorElement = React.ElementRef<typeof Primitive.div>;\ninterface ProgressIndicatorProps extends PrimitiveDivProps {}\n\nconst ProgressIndicator = React.forwardRef<ProgressIndicatorElement, ProgressIndicatorProps>(\n  (props: ScopedProps<ProgressIndicatorProps>, forwardedRef) => {\n    const { __scopeProgress, ...indicatorProps } = props;\n    const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n    return (\n      <Primitive.div\n        data-state={getProgressState(context.value, context.max)}\n        data-value={context.value ?? undefined}\n        data-max={context.max}\n        {...indicatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nProgressIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction defaultGetValueLabel(value: number, max: number) {\n  return `${Math.round((value / max) * 100)}%`;\n}\n\nfunction getProgressState(value: number | undefined | null, maxValue: number): ProgressState {\n  return value == null ? 'indeterminate' : value === maxValue ? 'complete' : 'loading';\n}\n\nfunction isNumber(value: any): value is number {\n  return typeof value === 'number';\n}\n\nfunction isValidMaxNumber(max: any): max is number {\n  // prettier-ignore\n  return (\n    isNumber(max) &&\n    !isNaN(max) &&\n    max > 0\n  );\n}\n\nfunction isValidValueNumber(value: any, max: number): value is number {\n  // prettier-ignore\n  return (\n    isNumber(value) &&\n    !isNaN(value) &&\n    value <= max &&\n    value >= 0\n  );\n}\n\n// Split this out for clearer readability of the error message.\nfunction getInvalidMaxError(propValue: string, componentName: string) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\n\nfunction getInvalidValueError(propValue: string, componentName: string) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\n\nconst Root = Progress;\nconst Indicator = ProgressIndicator;\n\nexport {\n  createProgressScope,\n  //\n  Progress,\n  ProgressIndicator,\n  //\n  Root,\n  Indicator,\n};\nexport type { ProgressProps, ProgressIndicatorProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}