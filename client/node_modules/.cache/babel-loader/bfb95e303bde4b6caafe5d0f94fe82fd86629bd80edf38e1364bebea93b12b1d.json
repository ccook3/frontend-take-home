{"ast":null,"code":"const API_BASE_URL = \"http://localhost:3002\";\nexport async function getUsers({\n  currentPage,\n  searchText = \"\"\n}) {\n  const response = await fetch(`${API_BASE_URL}/users?search=${searchText}&page=${currentPage}`);\n  if (!response.ok) {\n    throw new Error(\"Error with network response\");\n  }\n  const users = await response.json();\n  const roles = await getRoles();\n  users.data.map(user => {\n    const role = roles.data.find(role => role.id === user.roleId);\n    console.log(\"role\", role);\n    return {\n      ...user,\n      role\n    };\n  });\n  console.log(\" users.data\", users.data);\n  return {\n    ...users\n  };\n}\nexport async function getRoles() {\n  const response = await fetch(`${API_BASE_URL}/roles`);\n  if (!response.ok) {\n    throw new Error(\"Error with network response\");\n  }\n  const roles = await response.json();\n  return {\n    ...roles\n  };\n}\nexport async function getUserRole({\n  roleId\n}) {\n  const response = await fetch(`${API_BASE_URL}/roles?id=${roleId}`);\n  if (!response.ok) {\n    throw new Error(\"Error with network response\");\n  }\n  const data = await response.json();\n  return {\n    ...data\n  };\n}","map":{"version":3,"names":["API_BASE_URL","getUsers","currentPage","searchText","response","fetch","ok","Error","users","json","roles","getRoles","data","map","user","role","find","id","roleId","console","log","getUserRole"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/src/until/api.ts"],"sourcesContent":["const API_BASE_URL = \"http://localhost:3002\";\n\n\ninterface User {\n    createdAt: Date;\n    first: string;\n    last: string;\n    id: string;\n    photo: string;\n    updatedAt: Date;\n    roleId: string;\n}\n\ninterface Role {\n    createdAt: Date;\n    name: string;\n    id: string;\n    isDefault: string;\n    updatedAt: Date;\n    description: string;\n}\n\nexport async function getUsers({\n    currentPage,\n    searchText = \"\",\n  }: {\n    currentPage: number;\n    searchText: string;\n  }) {\n    const response = await fetch(\n      `${API_BASE_URL}/users?search=${searchText}&page=${currentPage}`,\n    );\n    if (!response.ok) {\n      throw new Error(\"Error with network response\");\n    }\n  \n    const users = await response.json()\n    const roles = await getRoles();\n\n    users.data.map((user: User) => {\n      const role = roles.data.find((role: Role) => role.id === user.roleId);\n      console.log(\"role\", role)\n      return { ...user, role };\n    })\n\n    console.log(\" users.data\",  users.data)\n    return { ...users };\n}\n\nexport async function getRoles() {\n    const response = await fetch(\n      `${API_BASE_URL}/roles`,\n    );\n    if (!response.ok) {\n      throw new Error(\"Error with network response\");\n    }\n  \n    const roles = await response.json()\n  \n    return { ...roles };\n}\n\nexport async function getUserRole({\n    roleId,\n  }: {\n    roleId: string;\n  }) {\n    const response = await fetch(\n      `${API_BASE_URL}/roles?id=${roleId}`,\n    );\n    if (!response.ok) {\n      throw new Error(\"Error with network response\");\n    }\n  \n    const data = await response.json()\n  \n    return { ...data };\n}"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAsB5C,OAAO,eAAeC,QAAQA,CAAC;EAC3BC,WAAW;EACXC,UAAU,GAAG;AAIf,CAAC,EAAE;EACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGL,YAAY,iBAAiBG,UAAU,SAASD,WAAW,EAChE,CAAC;EACD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACnC,MAAMC,KAAK,GAAG,MAAMC,QAAQ,CAAC,CAAC;EAE9BH,KAAK,CAACI,IAAI,CAACC,GAAG,CAAEC,IAAU,IAAK;IAC7B,MAAMC,IAAI,GAAGL,KAAK,CAACE,IAAI,CAACI,IAAI,CAAED,IAAU,IAAKA,IAAI,CAACE,EAAE,KAAKH,IAAI,CAACI,MAAM,CAAC;IACrEC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEL,IAAI,CAAC;IACzB,OAAO;MAAE,GAAGD,IAAI;MAAEC;IAAK,CAAC;EAC1B,CAAC,CAAC;EAEFI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAGZ,KAAK,CAACI,IAAI,CAAC;EACvC,OAAO;IAAE,GAAGJ;EAAM,CAAC;AACvB;AAEA,OAAO,eAAeG,QAAQA,CAAA,EAAG;EAC7B,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGL,YAAY,QACjB,CAAC;EACD,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,MAAMG,KAAK,GAAG,MAAMN,QAAQ,CAACK,IAAI,CAAC,CAAC;EAEnC,OAAO;IAAE,GAAGC;EAAM,CAAC;AACvB;AAEA,OAAO,eAAeW,WAAWA,CAAC;EAC9BH;AAGF,CAAC,EAAE;EACD,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGL,YAAY,aAAakB,MAAM,EACpC,CAAC;EACD,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,MAAMK,IAAI,GAAG,MAAMR,QAAQ,CAACK,IAAI,CAAC,CAAC;EAElC,OAAO;IAAE,GAAGG;EAAK,CAAC;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}