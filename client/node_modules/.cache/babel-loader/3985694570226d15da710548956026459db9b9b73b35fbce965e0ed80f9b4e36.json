{"ast":null,"code":"var _jsxFileName = \"/Users/catiecook/Documents/workos/frontend-take-home/client/src/modals/Role/EditRoleModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button, Dialog, Flex, Text, TextField, TextArea } from '@radix-ui/themes';\nimport { formatDate } from '../../util/formatDate';\nimport { API_BASE_URL } from '../../hooks/api';\nimport { mutate } from 'swr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditRoleModal = ({\n  role,\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    defaultValues: {\n      name: (role === null || role === void 0 ? void 0 : role.name) || '',\n      description: (role === null || role === void 0 ? void 0 : role.description) || ''\n    }\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const onSubmit = async data => {\n    setIsSubmitting(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/roles/${role.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update role');\n      }\n      mutate(key => typeof key === 'string' && key.startsWith(`${API_BASE_URL}/roles`));\n      mutate(`${API_BASE_URL}/roles`);\n      onClose();\n    } catch (err) {\n      // This seems overkill but the type checking is being very specific \n      // here so I've set the error messages accordingly\n      const errorMessage = err instanceof Error ? err.message : 'An error occurred while updating the role';\n      setError(errorMessage);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog.Root, {\n    open: isOpen,\n    onOpenChange: onClose,\n    children: /*#__PURE__*/_jsxDEV(Dialog.Content, {\n      maxWidth: \"450px\",\n      children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Text, {\n        color: \"red\",\n        size: \"2\",\n        mb: \"3\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          direction: \"column\",\n          gap: \"3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              as: \"div\",\n              size: \"2\",\n              mb: \"1\",\n              weight: \"bold\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField.Root, {\n              ...register('name'),\n              placeholder: \"Role name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              as: \"div\",\n              size: \"2\",\n              mb: \"1\",\n              weight: \"bold\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n              ...register('description'),\n              placeholder: \"Role desctiption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              as: \"div\",\n              size: \"2\",\n              mb: \"1\",\n              weight: \"bold\",\n              children: \"Created\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField.Root, {\n              value: formatDate(role === null || role === void 0 ? void 0 : role.createdAt),\n              readOnly: true,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          gap: \"3\",\n          mt: \"4\",\n          justify: \"end\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            variant: \"soft\",\n            color: \"gray\",\n            onClick: onClose,\n            disabled: isSubmitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: isSubmitting ? 'Saving...' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(EditRoleModal, \"lj1JNf1sBmdXnxM10FsnniuupCk=\", false, function () {\n  return [useForm];\n});\n_c = EditRoleModal;\nexport default EditRoleModal;\nvar _c;\n$RefreshReg$(_c, \"EditRoleModal\");","map":{"version":3,"names":["React","useState","useForm","Button","Dialog","Flex","Text","TextField","TextArea","formatDate","API_BASE_URL","mutate","jsxDEV","_jsxDEV","EditRoleModal","role","isOpen","onClose","_s","register","handleSubmit","defaultValues","name","description","isSubmitting","setIsSubmitting","error","setError","onSubmit","data","response","fetch","id","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","key","startsWith","err","errorMessage","Root","open","onOpenChange","children","Content","maxWidth","Title","fileName","_jsxFileName","lineNumber","columnNumber","color","size","mb","direction","gap","as","weight","placeholder","value","createdAt","readOnly","disabled","mt","justify","type","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/src/modals/Role/EditRoleModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ErrorOption, useForm } from 'react-hook-form';\nimport { Button, Dialog, Flex, Text, TextField, Select, TextArea } from '@radix-ui/themes';\nimport { User } from '../../types/User';\nimport { formatDate } from '../../util/formatDate';\nimport { API_BASE_URL, useRoles } from '../../hooks/api';\nimport { mutate } from 'swr';\nimport { Role } from '../../types/Role';\n\nconst EditRoleModal = ({ role, isOpen, onClose } : {\n  role: Role,\n  isOpen: boolean,\n  onClose: () => void\n}) => {\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      name: role?.name || '',\n     description: role?.description || '',\n    }\n  });\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  \n  const onSubmit = async (data: Partial<Role>) => {\n    setIsSubmitting(true);\n    setError('');\n    \n    try {\n      const response = await fetch(`${API_BASE_URL}/roles/${role.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update role');\n      }\n           \n      mutate((key) => typeof key === 'string' && key.startsWith(`${API_BASE_URL}/roles`));\n      mutate(`${API_BASE_URL}/roles`);\n\n      onClose();\n    }  catch (err: unknown) {\n      // This seems overkill but the type checking is being very specific \n      // here so I've set the error messages accordingly\n      const errorMessage = err instanceof Error \n        ? err.message \n        : 'An error occurred while updating the role';\n      \n      setError(errorMessage);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <Dialog.Root open={isOpen} onOpenChange={onClose}>\n      <Dialog.Content maxWidth=\"450px\">\n        <Dialog.Title>Edit User</Dialog.Title>\n        \n        {error && (\n          <Text color=\"red\" size=\"2\" mb=\"3\">\n            {error}\n          </Text>\n        )}\n        \n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Flex direction=\"column\" gap=\"3\">\n            <label>\n              <Text as=\"div\" size=\"2\" mb=\"1\" weight=\"bold\">\n                Role\n              </Text>\n              <TextField.Root \n                {...register('name')}\n                placeholder=\"Role name\"\n              />\n            </label>\n            \n            <label>\n              <Text as=\"div\" size=\"2\" mb=\"1\" weight=\"bold\">\n                Description\n              </Text>\n              <TextArea\n                {...register('description')}\n                placeholder=\"Role desctiption\"\n              />\n            </label>\n            \n            <label>\n              <Text as=\"div\" size=\"2\" mb=\"1\" weight=\"bold\">\n                Created\n              </Text>\n              <TextField.Root\n                value={formatDate(role?.createdAt)}\n                readOnly\n                disabled\n              />\n            </label>\n          </Flex>\n          \n          <Flex gap=\"3\" mt=\"4\" justify=\"end\">\n            <Button \n              type=\"button\" \n              variant=\"soft\" \n              color=\"gray\" \n              onClick={onClose}\n              disabled={isSubmitting}\n            >\n              Cancel\n            </Button>\n            \n            <Button \n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {isSubmitting ? 'Saving...' : 'Save'}\n            </Button>\n          </Flex>\n        </form>\n      </Dialog.Content>\n    </Dialog.Root>\n  );\n};\n\nexport default EditRoleModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}