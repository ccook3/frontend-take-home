{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/portal/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Portal: () => Portal,\n  Root: () => Root\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/portal/src/portal.tsx\nvar React = __toESM(require(\"react\"));\nvar import_react_dom = __toESM(require(\"react-dom\"));\nvar import_react_primitive = require(\"@radix-ui/react-primitive\");\nvar import_react_use_layout_effect = require(\"@radix-ui/react-use-layout-effect\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar PORTAL_NAME = \"Portal\";\nvar Portal = React.forwardRef((props, forwardedRef) => {\n  const {\n    container: containerProp,\n    ...portalProps\n  } = props;\n  const [mounted, setMounted] = React.useState(false);\n  (0, import_react_use_layout_effect.useLayoutEffect)(() => setMounted(true), []);\n  const container = containerProp || mounted && globalThis?.document?.body;\n  return container ? import_react_dom.default.createPortal(/* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, {\n    ...portalProps,\n    ref: forwardedRef\n  }), container) : null;\n});\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;","map":{"version":3,"names":["src_exports","__export","Portal","Root","module","exports","__toCommonJS","React","__toESM","require","import_react_dom","import_react_primitive","import_react_use_layout_effect","import_jsx_runtime","PORTAL_NAME","forwardRef","props","forwardedRef","container","containerProp","portalProps","mounted","setMounted","useState","useLayoutEffect","globalThis","document","body","default","createPortal","jsx","Primitive","div","ref","displayName"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-portal/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-portal/src/portal.tsx"],"sourcesContent":["'use client';\nexport {\n  Portal,\n  //\n  Root,\n} from './portal';\nexport type { PortalProps } from './portal';\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  /**\n   * An optional container where the portaled content should be appended.\n   */\n  container?: Element | DocumentFragment | null;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || (mounted && globalThis?.document?.body);\n  return container\n    ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n    : null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalProps };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,MAAA,EAAAA,CAAA,KAAAA,MAAA;EAAAC,IAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAN,WAAA;;;ACAA,IAAAO,KAAA,GAAuBC,OAAA,CAAAC,OAAA;AACvB,IAAAC,gBAAA,GAAqBF,OAAA,CAAAC,OAAA;AACrB,IAAAE,sBAAA,GAA0BF,OAAA;AAC1B,IAAAG,8BAAA,GAAgCH,OAAA;AAuBJ,IAAAI,kBAAA,GAAAJ,OAAA;AAjB5B,IAAMK,WAAA,GAAc;AAWpB,IAAMZ,MAAA,GAAeK,KAAA,CAAAQ,UAAA,CAAuC,CAACC,KAAA,EAAOC,YAAA,KAAiB;EACnF,MAAM;IAAEC,SAAA,EAAWC,aAAA;IAAe,GAAGC;EAAY,IAAIJ,KAAA;EACrD,MAAM,CAACK,OAAA,EAASC,UAAU,IAAUf,KAAA,CAAAgB,QAAA,CAAS,KAAK;EAClD,IAAAX,8BAAA,CAAAY,eAAA,EAAgB,MAAMF,UAAA,CAAW,IAAI,GAAG,EAAE;EAC1C,MAAMJ,SAAA,GAAYC,aAAA,IAAkBE,OAAA,IAAWI,UAAA,EAAYC,QAAA,EAAUC,IAAA;EACrE,OAAOT,SAAA,GACHR,gBAAA,CAAAkB,OAAA,CAASC,YAAA,CAAa,mBAAAhB,kBAAA,CAAAiB,GAAA,EAACnB,sBAAA,CAAAoB,SAAA,CAAUC,GAAA,EAAV;IAAe,GAAGZ,WAAA;IAAaa,GAAA,EAAKhB;EAAA,CAAc,GAAIC,SAAS,IACtF;AACN,CAAC;AAEDhB,MAAA,CAAOgC,WAAA,GAAcpB,WAAA;AAIrB,IAAMX,IAAA,GAAOD,MAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}