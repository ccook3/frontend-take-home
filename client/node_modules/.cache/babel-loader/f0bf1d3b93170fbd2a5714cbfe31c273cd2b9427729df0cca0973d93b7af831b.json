{"ast":null,"code":"import * as o from \"react\";\nimport i from \"classnames\";\nimport { Slot as f } from \"radix-ui\";\nimport { insetPropDefs as a } from \"./inset.props.js\";\nimport { extractProps as P } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as c } from \"../props/margin.props.js\";\nconst e = o.forwardRef((r, t) => {\n  const {\n      asChild: p,\n      className: s,\n      ...n\n    } = P(r, a, c),\n    m = p ? f.Root : \"div\";\n  return o.createElement(m, {\n    ...n,\n    ref: t,\n    className: i(\"rt-Inset\", s)\n  });\n});\ne.displayName = \"Inset\";\nexport { e as Inset };","map":{"version":3,"names":["o","i","Slot","f","insetPropDefs","a","extractProps","P","marginPropDefs","c","e","forwardRef","r","t","asChild","p","className","s","n","m","Root","createElement","ref","displayName","Inset"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/themes/src/components/inset.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { insetPropDefs } from './inset.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype InsetElement = React.ElementRef<'div'>;\ntype InsetOwnProps = GetPropDefTypes<typeof insetPropDefs>;\ninterface InsetProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    InsetOwnProps {}\n\nconst Inset = React.forwardRef<InsetElement, InsetProps>((props, forwardedRef) => {\n  const { asChild, className, ...insetProps } = extractProps(props, insetPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot.Root : 'div';\n  return <Comp {...insetProps} ref={forwardedRef} className={classNames('rt-Inset', className)} />;\n});\nInset.displayName = 'Inset';\n\nexport { Inset };\nexport type { InsetProps };\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AACvB,SAASC,IAAA,IAAAC,CAAA,QAAY;AAErB,SAASC,aAAA,IAAAC,CAAA,QAAqB;AAC9B,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAa/B,MAAMC,CAAA,GAAQV,CAAA,CAAMW,UAAA,CAAqC,CAACC,CAAA,EAAOC,CAAA,KAAiB;EAChF,MAAM;MAAEC,OAAA,EAAAC,CAAA;MAASC,SAAA,EAAAC,CAAA;MAAW,GAAGC;IAAW,IAAIX,CAAA,CAAaK,CAAA,EAAOP,CAAA,EAAeI,CAAc;IACzFU,CAAA,GAAOJ,CAAA,GAAUZ,CAAA,CAAKiB,IAAA,GAAO;EACnC,OAAOpB,CAAA,CAAAqB,aAAA,CAACF,CAAA;IAAM,GAAGD,CAAA;IAAYI,GAAA,EAAKT,CAAA;IAAcG,SAAA,EAAWf,CAAA,CAAW,YAAYgB,CAAS;EAAA,CAAG,CAChG;AAAA,CAAC;AACDP,CAAA,CAAMa,WAAA,GAAc;AAAA,SAAAb,CAAA,IAAAc,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}