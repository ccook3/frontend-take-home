{"ast":null,"code":"\"use strict\";\n\nvar c = Object.defineProperty;\nvar b = Object.getOwnPropertyDescriptor;\nvar C = Object.getOwnPropertyNames;\nvar $ = Object.prototype.hasOwnProperty;\nvar O = (s, n) => {\n    for (var i in n) c(s, i, {\n      get: n[i],\n      enumerable: !0\n    });\n  },\n  P = (s, n, i, p) => {\n    if (n && typeof n == \"object\" || typeof n == \"function\") for (let e of C(n)) !$.call(s, e) && e !== i && c(s, e, {\n      get: () => n[e],\n      enumerable: !(p = b(n, e)) || p.enumerable\n    });\n    return s;\n  };\nvar N = s => P(c({}, \"__esModule\", {\n  value: !0\n}), s);\nvar j = {};\nO(j, {\n  getResponsiveClassNames: () => l,\n  getResponsiveCustomProperties: () => m,\n  getResponsiveStyles: () => R\n});\nmodule.exports = N(j);\nvar a = require(\"../props/prop-def.js\"),\n  d = require(\"./has-own-property.js\"),\n  g = require(\"./is-responsive-object.js\");\nfunction R({\n  className: s,\n  customProperties: n,\n  ...i\n}) {\n  const p = l({\n      allowArbitraryValues: !0,\n      className: s,\n      ...i\n    }),\n    e = m({\n      customProperties: n,\n      ...i\n    });\n  return [p, e];\n}\nfunction l({\n  allowArbitraryValues: s,\n  value: n,\n  className: i,\n  propValues: p,\n  parseValue: e = t => t\n}) {\n  const t = [];\n  if (n) {\n    if (typeof n == \"string\" && p.includes(n)) return v(i, n, e);\n    if ((0, g.isResponsiveObject)(n)) {\n      const o = n;\n      for (const r in o) {\n        if (!(0, d.hasOwnProperty)(o, r) || !a.breakpoints.includes(r)) continue;\n        const u = o[r];\n        if (u !== void 0) {\n          if (p.includes(u)) {\n            const f = v(i, u, e),\n              y = r === \"initial\" ? f : `${r}:${f}`;\n            t.push(y);\n          } else if (s) {\n            const f = r === \"initial\" ? i : `${r}:${i}`;\n            t.push(f);\n          }\n        }\n      }\n      return t.join(\" \");\n    }\n    if (s) return i;\n  }\n}\nfunction v(s, n, i) {\n  const p = s ? \"-\" : \"\",\n    e = i(n),\n    t = e?.startsWith(\"-\"),\n    o = t ? \"-\" : \"\",\n    r = t ? e?.substring(1) : e;\n  return `${o}${s}${p}${r}`;\n}\nfunction m({\n  customProperties: s,\n  value: n,\n  propValues: i,\n  parseValue: p = e => e\n}) {\n  let e = {};\n  if (!(!n || typeof n == \"string\" && i.includes(n))) {\n    if (typeof n == \"string\" && (e = Object.fromEntries(s.map(t => [t, n]))), (0, g.isResponsiveObject)(n)) {\n      const t = n;\n      for (const o in t) {\n        if (!(0, d.hasOwnProperty)(t, o) || !a.breakpoints.includes(o)) continue;\n        const r = t[o];\n        if (!i.includes(r)) for (const u of s) e = {\n          [o === \"initial\" ? u : `${u}-${o}`]: r,\n          ...e\n        };\n      }\n    }\n    for (const t in e) {\n      const o = e[t];\n      o !== void 0 && (e[t] = p(o));\n    }\n    return e;\n  }\n}","map":{"version":3,"names":["j","O","getResponsiveClassNames","l","getResponsiveCustomProperties","m","getResponsiveStyles","R","module","exports","N","a","require","d","g","className","s","customProperties","n","i","p","allowArbitraryValues","e","value","propValues","parseValue","t","includes","v","isResponsiveObject","o","r","hasOwnProperty","breakpoints","u","f","y","push","join","startsWith","substring","Object","fromEntries","map"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/themes/src/helpers/get-responsive-styles.ts"],"sourcesContent":["import { breakpoints } from '../props/prop-def.js';\nimport { hasOwnProperty } from './has-own-property.js';\nimport { isResponsiveObject } from './is-responsive-object.js';\n\nimport type { Responsive, Union } from '../props/prop-def.js';\n\ninterface GetResponsiveStylesOptions {\n  className: string;\n  customProperties: `--${string}`[];\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveStyles({ className, customProperties, ...args }: GetResponsiveStylesOptions) {\n  const responsiveClassNames = getResponsiveClassNames({\n    allowArbitraryValues: true,\n    className,\n    ...args,\n  });\n\n  const responsiveCustomProperties = getResponsiveCustomProperties({ customProperties, ...args });\n  return [responsiveClassNames, responsiveCustomProperties] as const;\n}\n\ninterface GetResponsiveClassNamesOptions {\n  allowArbitraryValues?: boolean;\n  className: string;\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveClassNames({\n  allowArbitraryValues,\n  value,\n  className,\n  propValues,\n  parseValue = (value) => value,\n}: GetResponsiveClassNamesOptions): string | undefined {\n  const classNames: string[] = [];\n\n  if (!value) {\n    return undefined;\n  }\n\n  if (typeof value === 'string' && propValues.includes(value)) {\n    return getBaseClassName(className, value, parseValue);\n  }\n\n  if (isResponsiveObject(value)) {\n    const object = value;\n\n    for (const bp in object) {\n      // Make sure we are not iterating over keys that aren't breakpoints\n      if (!hasOwnProperty(object, bp) || !breakpoints.includes(bp)) {\n        continue;\n      }\n\n      const value = object[bp];\n\n      if (value !== undefined) {\n        if (propValues.includes(value)) {\n          const baseClassName = getBaseClassName(className, value, parseValue);\n          const bpClassName = bp === 'initial' ? baseClassName : `${bp}:${baseClassName}`;\n          classNames.push(bpClassName);\n        } else if (allowArbitraryValues) {\n          const bpClassName = bp === 'initial' ? className : `${bp}:${className}`;\n          classNames.push(bpClassName);\n        }\n      }\n    }\n\n    return classNames.join(' ');\n  }\n\n  if (allowArbitraryValues) {\n    return className;\n  }\n}\n\nfunction getBaseClassName(\n  className: string,\n  value: string,\n  parseValue: (value: string) => string | undefined\n): string {\n  const delimiter = className ? '-' : '';\n  const matchedValue = parseValue(value);\n  const isNegative = matchedValue?.startsWith('-');\n  const minus = isNegative ? '-' : '';\n  const absoluteValue = isNegative ? matchedValue?.substring(1) : matchedValue;\n  return `${minus}${className}${delimiter}${absoluteValue}`;\n}\n\ninterface GetResponsiveCustomPropertiesOptions {\n  customProperties: `--${string}`[];\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveCustomProperties({\n  customProperties,\n  value,\n  propValues,\n  parseValue = (value) => value,\n}: GetResponsiveCustomPropertiesOptions) {\n  let styles: Record<string, string | undefined> = {};\n\n  // Don't generate custom properties if the value is not arbitrary\n  if (!value || (typeof value === 'string' && propValues.includes(value))) {\n    return undefined;\n  }\n\n  if (typeof value === 'string') {\n    styles = Object.fromEntries(customProperties.map((prop) => [prop, value]));\n  }\n\n  if (isResponsiveObject(value)) {\n    const object = value;\n\n    for (const bp in object) {\n      // Make sure we are not iterating over keys that aren't breakpoints\n      if (!hasOwnProperty(object, bp) || !breakpoints.includes(bp)) {\n        continue;\n      }\n\n      const value = object[bp];\n\n      // Don't generate a custom property if the value is not arbitrary\n      if (propValues.includes(value)) {\n        continue;\n      }\n\n      for (const customProperty of customProperties) {\n        const bpProperty = bp === 'initial' ? customProperty : `${customProperty}-${bp}`;\n\n        styles = {\n          [bpProperty]: value,\n          ...styles,\n        };\n      }\n    }\n  }\n\n  for (const key in styles) {\n    const value = styles[key];\n    if (value !== undefined) {\n      styles[key] = parseValue(value);\n    }\n  }\n\n  return styles;\n}\n\nexport { getResponsiveStyles, getResponsiveCustomProperties, getResponsiveClassNames };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}