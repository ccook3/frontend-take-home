{"ast":null,"code":"\"use client\";\n\nimport * as e from \"react\";\nimport { Checkbox as C, Direction as q } from \"radix-ui\";\nimport { Context as N, Primitive as D, useComposedRefs as W, RovingFocus as d, useControllableState as U } from \"radix-ui/internal\";\nconst {\n    useDirection: A\n  } = q,\n  P = \"CheckboxGroup\",\n  [M, O] = N.createContextScope(P, [d.createRovingFocusGroupScope, C.createCheckboxScope]),\n  I = d.createRovingFocusGroupScope(),\n  g = C.createCheckboxScope(),\n  [w, T] = M(P),\n  v = e.forwardRef((r, n) => {\n    const {\n        __scopeCheckboxGroup: o,\n        name: i,\n        defaultValue: c,\n        value: t,\n        required: p = !1,\n        disabled: s = !1,\n        orientation: h,\n        dir: l,\n        loop: b = !0,\n        onValueChange: u,\n        ...k\n      } = r,\n      S = I(o),\n      R = A(l),\n      [E = [], a] = U({\n        prop: t,\n        defaultProp: c,\n        onChange: u\n      }),\n      F = e.useCallback(x => a((m = []) => [...m, x]), [a]),\n      _ = e.useCallback(x => a((m = []) => m.filter(V => V !== x)), [a]);\n    return e.createElement(w, {\n      scope: o,\n      name: i,\n      required: p,\n      disabled: s,\n      value: E,\n      onItemCheck: F,\n      onItemUncheck: _\n    }, e.createElement(d.Root, {\n      asChild: !0,\n      ...S,\n      orientation: h,\n      dir: R,\n      loop: b\n    }, e.createElement(D.div, {\n      role: \"group\",\n      \"data-disabled\": s ? \"\" : void 0,\n      dir: R,\n      ...k,\n      ref: n\n    })));\n  });\nv.displayName = P;\nconst y = \"CheckboxGroupItem\",\n  f = e.forwardRef((r, n) => {\n    const {\n        __scopeCheckboxGroup: o,\n        disabled: i,\n        ...c\n      } = r,\n      t = T(y, o),\n      p = t.disabled || i,\n      s = I(o),\n      h = g(o),\n      l = e.useRef(null),\n      b = W(n, l),\n      u = t.value?.includes(c.value);\n    return e.createElement(d.Item, {\n      asChild: !0,\n      ...s,\n      focusable: !p,\n      active: u\n    }, e.createElement(C.Root, {\n      name: t.name,\n      disabled: p,\n      required: t.required,\n      checked: u,\n      ...h,\n      ...c,\n      ref: b,\n      onCheckedChange: k => {\n        k ? t.onItemCheck(r.value) : t.onItemUncheck(r.value);\n      }\n    }));\n  });\nf.displayName = y;\nconst B = \"CheckboxGroupIndicator\",\n  G = e.forwardRef((r, n) => {\n    const {\n        __scopeCheckboxGroup: o,\n        ...i\n      } = r,\n      c = g(o);\n    return e.createElement(C.Indicator, {\n      ...c,\n      ...i,\n      ref: n\n    });\n  });\nG.displayName = B;\nconst H = v,\n  K = f,\n  X = G;\nexport { v as CheckboxGroup, G as CheckboxGroupIndicator, f as CheckboxGroupItem, X as Indicator, K as Item, H as Root, O as createCheckboxGroupScope };","map":{"version":3,"names":["e","Checkbox","C","Direction","q","Context","N","Primitive","D","useComposedRefs","W","RovingFocus","d","useControllableState","U","useDirection","A","P","M","O","createContextScope","createRovingFocusGroupScope","createCheckboxScope","I","g","w","T","v","forwardRef","r","n","__scopeCheckboxGroup","o","name","i","defaultValue","c","value","t","required","p","disabled","s","orientation","h","dir","l","loop","b","onValueChange","u","k","S","R","E","a","prop","defaultProp","onChange","F","useCallback","x","m","_","filter","V","createElement","scope","onItemCheck","onItemUncheck","Root","asChild","div","role","ref","displayName","y","f","useRef","includes","Item","focusable","active","checked","onCheckedChange","B","G","Indicator","H","K","X","CheckboxGroup","CheckboxGroupIndicator","CheckboxGroupItem","createCheckboxGroupScope"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/themes/src/components/checkbox-group.primitive.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { Checkbox as CheckboxPrimitive, Direction } from 'radix-ui';\nimport {\n  Context,\n  Primitive,\n  useComposedRefs,\n  RovingFocus,\n  useControllableState,\n} from 'radix-ui/internal';\n\nconst { useDirection } = Direction;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxGroup\n * -----------------------------------------------------------------------------------------------*/\nconst CHECKBOX_GROUP_NAME = 'CheckboxGroup';\n\ntype ScopedProps<P> = P & { __scopeCheckboxGroup?: Context.Scope };\nconst [createCheckboxGroupContext, createCheckboxGroupScope] = Context.createContextScope(\n  CHECKBOX_GROUP_NAME,\n  [RovingFocus.createRovingFocusGroupScope, CheckboxPrimitive.createCheckboxScope]\n);\nconst useRovingFocusGroupScope = RovingFocus.createRovingFocusGroupScope();\nconst useCheckboxScope = CheckboxPrimitive.createCheckboxScope();\n\ntype CheckboxGroupContextValue = {\n  name?: string;\n  required: boolean;\n  disabled: boolean;\n  value?: string[];\n  onItemCheck(value: string): void;\n  onItemUncheck(value: string): void;\n};\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createCheckboxGroupContext<CheckboxGroupContextValue>(CHECKBOX_GROUP_NAME);\n\ntype CheckboxGroupElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocus.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface CheckboxGroupProps extends PrimitiveDivProps {\n  name?: CheckboxGroupContextValue['name'];\n  required?: React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>['required'];\n  disabled?: React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>['disabled'];\n  dir?: RovingFocusGroupProps['dir'];\n  orientation?: RovingFocusGroupProps['orientation'];\n  loop?: RovingFocusGroupProps['loop'];\n  defaultValue?: string[];\n  value?: CheckboxGroupContextValue['value'];\n  onValueChange?: (value: string[]) => void;\n}\n\nconst CheckboxGroup = React.forwardRef<CheckboxGroupElement, CheckboxGroupProps>(\n  (props: ScopedProps<CheckboxGroupProps>, forwardedRef) => {\n    const {\n      __scopeCheckboxGroup,\n      name,\n      defaultValue,\n      value: valueProp,\n      required = false,\n      disabled = false,\n      orientation,\n      dir,\n      loop = true,\n      onValueChange,\n      ...groupProps\n    } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeCheckboxGroup);\n    const direction = useDirection(dir);\n    const [value = [], setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue,\n      onChange: onValueChange,\n    });\n\n    const handleItemCheck = React.useCallback(\n      (itemValue: string) => setValue((prevValue = []) => [...prevValue, itemValue]),\n      [setValue]\n    );\n\n    const handleItemUncheck = React.useCallback(\n      (itemValue: string) =>\n        setValue((prevValue = []) => prevValue.filter((value) => value !== itemValue)),\n      [setValue]\n    );\n\n    return (\n      <CheckboxGroupProvider\n        scope={__scopeCheckboxGroup}\n        name={name}\n        required={required}\n        disabled={disabled}\n        value={value}\n        onItemCheck={handleItemCheck}\n        onItemUncheck={handleItemUncheck}\n      >\n        <RovingFocus.Root\n          asChild\n          {...rovingFocusGroupScope}\n          orientation={orientation}\n          dir={direction}\n          loop={loop}\n        >\n          <Primitive.div\n            role=\"group\"\n            data-disabled={disabled ? '' : undefined}\n            dir={direction}\n            {...groupProps}\n            ref={forwardedRef}\n          />\n        </RovingFocus.Root>\n      </CheckboxGroupProvider>\n    );\n  }\n);\n\nCheckboxGroup.displayName = CHECKBOX_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'CheckboxGroupItem';\n\ntype CheckboxGroupItemElement = React.ElementRef<typeof CheckboxPrimitive.Root>;\ntype CheckboxProps = React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>;\ninterface CheckboxGroupItemProps\n  extends Omit<CheckboxProps, 'checked' | 'defaultChecked' | 'onCheckedChange' | 'name'> {\n  value: string;\n}\n\nconst CheckboxGroupItem = React.forwardRef<CheckboxGroupItemElement, CheckboxGroupItemProps>(\n  (props: ScopedProps<CheckboxGroupItemProps>, forwardedRef) => {\n    const { __scopeCheckboxGroup, disabled, ...itemProps } = props;\n    const context = useCheckboxGroupContext(ITEM_NAME, __scopeCheckboxGroup);\n    const isDisabled = context.disabled || disabled;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeCheckboxGroup);\n    const checkboxScope = useCheckboxScope(__scopeCheckboxGroup);\n    const ref = React.useRef<React.ElementRef<typeof CheckboxPrimitive.Root>>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const checked = context.value?.includes(itemProps.value);\n\n    return (\n      <RovingFocus.Item asChild {...rovingFocusGroupScope} focusable={!isDisabled} active={checked}>\n        <CheckboxPrimitive.Root\n          name={context.name}\n          disabled={isDisabled}\n          required={context.required}\n          checked={checked}\n          {...checkboxScope}\n          {...itemProps}\n          ref={composedRefs}\n          onCheckedChange={(checked) => {\n            if (checked) {\n              context.onItemCheck(props.value);\n            } else {\n              context.onItemUncheck(props.value);\n            }\n          }}\n        />\n      </RovingFocus.Item>\n    );\n  }\n);\n\nCheckboxGroupItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxGroupIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'CheckboxGroupIndicator';\n\ntype CheckboxGroupIndicatorElement = React.ElementRef<typeof CheckboxPrimitive.Indicator>;\ntype CheckboxIndicatorProps = React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Indicator>;\ninterface CheckboxGroupIndicatorProps extends CheckboxIndicatorProps {}\n\nconst CheckboxGroupIndicator = React.forwardRef<\n  CheckboxGroupIndicatorElement,\n  CheckboxGroupIndicatorProps\n>((props: ScopedProps<CheckboxGroupIndicatorProps>, forwardedRef) => {\n  const { __scopeCheckboxGroup, ...indicatorProps } = props;\n  const checkboxScope = useCheckboxScope(__scopeCheckboxGroup);\n  return <CheckboxPrimitive.Indicator {...checkboxScope} {...indicatorProps} ref={forwardedRef} />;\n});\n\nCheckboxGroupIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst Root = CheckboxGroup;\nconst Item = CheckboxGroupItem;\nconst Indicator = CheckboxGroupIndicator;\n\nexport {\n  createCheckboxGroupScope,\n  //\n  CheckboxGroup,\n  CheckboxGroupItem,\n  CheckboxGroupIndicator,\n  //\n  Root,\n  Item,\n  Indicator,\n};\nexport type { CheckboxGroupProps, CheckboxGroupItemProps, CheckboxGroupIndicatorProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}