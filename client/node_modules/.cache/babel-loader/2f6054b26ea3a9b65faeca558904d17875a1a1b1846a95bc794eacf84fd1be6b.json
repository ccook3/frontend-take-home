{"ast":null,"code":"\"use client\";\n\nimport * as o from \"react\";\nimport C from \"classnames\";\nimport { Context as y } from \"radix-ui/internal\";\nimport * as u from \"./checkbox-group.primitive.js\";\nimport { createCheckboxGroupScope as n } from \"./checkbox-group.primitive.js\";\nimport { checkboxGroupRootPropDefs as x } from \"./checkbox-group.props.js\";\nimport { ThickCheckIcon as R } from \"./icons.js\";\nimport { Text as v } from \"./text.js\";\nimport { extractProps as k } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as a } from \"../props/margin.props.js\";\nconst b = \"CheckboxGroup\",\n  [N] = y.createContextScope(b, [n]),\n  G = n(),\n  [E, P] = N(b),\n  f = o.forwardRef(({\n    color: s = x.color.default,\n    highContrast: e = x.highContrast.default,\n    size: r = x.size.default,\n    variant: t = x.variant.default,\n    ...p\n  }, m) => {\n    const {\n        __scopeCheckboxGroup: c,\n        className: h,\n        ...I\n      } = k(p, a),\n      d = G(c);\n    return o.createElement(E, {\n      scope: c,\n      color: s,\n      size: r,\n      highContrast: e,\n      variant: t\n    }, o.createElement(u.Root, {\n      ...d,\n      ...I,\n      ref: m,\n      className: C(\"rt-CheckboxGroupRoot\", h)\n    }));\n  });\nf.displayName = \"CheckboxGroup.Root\";\nconst l = o.forwardRef((s, e) => {\n  const {\n      __scopeCheckboxGroup: r,\n      children: t,\n      className: p,\n      style: m,\n      ...c\n    } = s,\n    {\n      size: h\n    } = P(\"CheckboxGroupItem\", r);\n  return t ? o.createElement(v, {\n    as: \"label\",\n    size: h,\n    className: C(\"rt-CheckboxGroupItem\", p),\n    style: m\n  }, o.createElement(i, {\n    __scopeCheckboxGroup: r,\n    ...c,\n    ref: e\n  }), t && o.createElement(\"span\", {\n    className: \"rt-CheckboxGroupItemInner\"\n  }, t)) : o.createElement(i, {\n    __scopeCheckboxGroup: r,\n    ...c,\n    ref: e,\n    className: p,\n    style: m\n  });\n});\nl.displayName = \"CheckboxGroup.Item\";\nconst i = o.forwardRef(({\n  __scopeCheckboxGroup: s,\n  ...e\n}, r) => {\n  const t = P(\"CheckboxGroupItemCheckbox\", s),\n    p = G(s),\n    {\n      color: m,\n      className: c\n    } = k({\n      ...e,\n      ...t\n    }, x, a);\n  return o.createElement(u.Item, {\n    ...p,\n    \"data-accent-color\": m,\n    ...e,\n    ref: r,\n    className: C(\"rt-reset\", \"rt-BaseCheckboxRoot\", \"rt-CheckboxGroupItemCheckbox\", c)\n  }, o.createElement(u.Indicator, {\n    ...p,\n    asChild: !0,\n    className: \"rt-BaseCheckboxIndicator\"\n  }, o.createElement(R, null)));\n});\ni.displayName = \"CheckboxGroup.ItemCheckbox\";\nexport { l as Item, f as Root };","map":{"version":3,"names":["o","C","Context","y","u","createCheckboxGroupScope","n","checkboxGroupRootPropDefs","x","ThickCheckIcon","R","Text","v","extractProps","k","marginPropDefs","a","b","N","createContextScope","G","E","P","f","forwardRef","color","s","default","highContrast","e","size","r","variant","t","p","m","__scopeCheckboxGroup","c","className","h","I","d","createElement","scope","Root","ref","displayName","l","children","style","as","i","Item","Indicator","asChild"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/themes/src/components/checkbox-group.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Context } from 'radix-ui/internal';\n\nimport * as CheckboxGroupPrimitive from './checkbox-group.primitive.js';\nimport { createCheckboxGroupScope } from './checkbox-group.primitive.js';\nimport { checkboxGroupRootPropDefs } from './checkbox-group.props.js';\nimport { ThickCheckIcon } from './icons.js';\nimport { Text } from './text.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\nconst CHECKBOX_GROUP_NAME = 'CheckboxGroup';\n\ntype ScopedProps<P> = P & { __scopeCheckboxGroup?: Context.Scope };\nconst [createCheckboxGroupContext] = Context.createContextScope(CHECKBOX_GROUP_NAME, [\n  createCheckboxGroupScope,\n]);\nconst useCheckboxGroupScope = createCheckboxGroupScope();\n\ntype CheckboxGroupRootOwnProps = GetPropDefTypes<typeof checkboxGroupRootPropDefs>;\ntype CheckboxGroupContextValue = CheckboxGroupRootOwnProps;\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createCheckboxGroupContext<CheckboxGroupContextValue>(CHECKBOX_GROUP_NAME);\n\ntype CheckboxGroupRootElement = React.ElementRef<typeof CheckboxGroupPrimitive.Root>;\ninterface CheckboxGroupRootProps\n  extends ComponentPropsWithout<\n      typeof CheckboxGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    CheckboxGroupRootOwnProps {}\nconst CheckboxGroupRoot = React.forwardRef<CheckboxGroupRootElement, CheckboxGroupRootProps>(\n  (\n    {\n      color = checkboxGroupRootPropDefs.color.default,\n      highContrast = checkboxGroupRootPropDefs.highContrast.default,\n      size = checkboxGroupRootPropDefs.size.default,\n      variant = checkboxGroupRootPropDefs.variant.default,\n      ...props\n    }: ScopedProps<CheckboxGroupRootProps>,\n    forwardedRef\n  ) => {\n    const { __scopeCheckboxGroup, className, ...rootProps } = extractProps(props, marginPropDefs);\n    const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxGroup);\n    return (\n      <CheckboxGroupProvider\n        scope={__scopeCheckboxGroup}\n        color={color}\n        size={size}\n        highContrast={highContrast}\n        variant={variant}\n      >\n        <CheckboxGroupPrimitive.Root\n          {...checkboxGroupScope}\n          {...rootProps}\n          ref={forwardedRef}\n          className={classNames('rt-CheckboxGroupRoot', className)}\n        />\n      </CheckboxGroupProvider>\n    );\n  }\n);\nCheckboxGroupRoot.displayName = 'CheckboxGroup.Root';\n\ntype CheckboxGroupItemElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxGroupItemProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps>,\n    MarginProps {}\nconst CheckboxGroupItem = React.forwardRef<CheckboxGroupItemElement, CheckboxGroupItemProps>(\n  (_props: ScopedProps<CheckboxGroupItemProps>, forwardedRef) => {\n    const { __scopeCheckboxGroup, children, className, style, ...props } = _props;\n    const { size } = useCheckboxGroupContext('CheckboxGroupItem', __scopeCheckboxGroup);\n\n    // Render `<Text as=\"label\">` if childrenÂ are provided, otherwise render\n    // the solo checkbox to allow building out your custom layouts with it.\n    if (children) {\n      return (\n        <Text\n          as=\"label\"\n          size={size}\n          className={classNames('rt-CheckboxGroupItem', className)}\n          style={style}\n        >\n          <CheckboxGroupItemCheckbox\n            __scopeCheckboxGroup={__scopeCheckboxGroup}\n            {...props}\n            ref={forwardedRef}\n          />\n          {children && <span className=\"rt-CheckboxGroupItemInner\">{children}</span>}\n        </Text>\n      );\n    }\n\n    return (\n      <CheckboxGroupItemCheckbox\n        __scopeCheckboxGroup={__scopeCheckboxGroup}\n        {...props}\n        ref={forwardedRef}\n        className={className}\n        style={style}\n      />\n    );\n  }\n);\nCheckboxGroupItem.displayName = 'CheckboxGroup.Item';\n\ntype CheckboxGroupItemCheckboxElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxGroupItemCheckboxProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps> {}\nconst CheckboxGroupItemCheckbox = React.forwardRef<\n  CheckboxGroupItemCheckboxElement,\n  ScopedProps<CheckboxGroupItemCheckboxProps>\n>(({ __scopeCheckboxGroup, ...props }, forwardedRef) => {\n  const context = useCheckboxGroupContext('CheckboxGroupItemCheckbox', __scopeCheckboxGroup);\n  const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxGroup);\n  const { color, className } = extractProps(\n    { ...props, ...context },\n    checkboxGroupRootPropDefs,\n    marginPropDefs\n  );\n  return (\n    <CheckboxGroupPrimitive.Item\n      {...checkboxGroupScope}\n      data-accent-color={color}\n      {...props}\n      ref={forwardedRef}\n      className={classNames(\n        'rt-reset',\n        'rt-BaseCheckboxRoot',\n        'rt-CheckboxGroupItemCheckbox',\n        className\n      )}\n    >\n      <CheckboxGroupPrimitive.Indicator\n        {...checkboxGroupScope}\n        asChild\n        className=\"rt-BaseCheckboxIndicator\"\n      >\n        <ThickCheckIcon />\n      </CheckboxGroupPrimitive.Indicator>\n    </CheckboxGroupPrimitive.Item>\n  );\n});\nCheckboxGroupItemCheckbox.displayName = 'CheckboxGroup.ItemCheckbox';\n\nexport { CheckboxGroupRoot as Root, CheckboxGroupItem as Item };\nexport type { CheckboxGroupRootProps as RootProps, CheckboxGroupItemProps as ItemProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}