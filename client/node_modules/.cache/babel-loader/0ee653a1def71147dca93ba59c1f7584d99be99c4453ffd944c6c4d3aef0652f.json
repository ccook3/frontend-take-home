{"ast":null,"code":"var _jsxFileName = \"/Users/catiecook/Documents/workos/frontend-take-home/client/src/components/Role/DropdownMenu.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '@radix-ui/themes/styles.css';\nimport { IconButton, DropdownMenu } from '@radix-ui/themes';\nimport { DotsHorizontalIcon } from '@radix-ui/react-icons';\nimport EditRoleModal from '../../modals/Role/EditRoleModal';\nimport DeleteRoleModal from '../../modals/Role/DeleteRoleModal';\n\n// Catie - Type checking isn't working properly on this parameter intake\n// - it allowed me to pass in a role id, not the whole role\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DropDownMenu = ({\n  role\n}) => {\n  _s();\n  const [openEditRoleModal, setOpenEditRoleModal] = useState(false);\n  const [openDeleteRoleModal, setOpenDeleteRoleModal] = useState(false);\n  const onCloseEditRole = () => setOpenEditRoleModal(false);\n  const onCloseDeleteRole = () => setOpenDeleteRoleModal(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropdownMenu.Root, {\n      children: [/*#__PURE__*/_jsxDEV(DropdownMenu.Trigger, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          radius: \"full\",\n          variant: \"ghost\",\n          children: /*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n            width: \"18\",\n            height: \"18\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu.Content, {\n        children: [/*#__PURE__*/_jsxDEV(DropdownMenu.Item, {\n          shortcut: \"\\u2318 E\",\n          onClick: () => setOpenEditRoleModal(true),\n          children: \"Edit role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenu.Item, {\n          shortcut: \"\\u2318 D\",\n          onClick: () => setOpenDeleteRoleModal(true),\n          \"area-label\": \"Delete user\",\n          children: \"Delete role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditRoleModal, {\n      role: role,\n      isOpen: openEditRoleModal,\n      onClose: onCloseEditRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteRoleModal, {\n      role: role,\n      isOpen: openDeleteRoleModal,\n      onClose: onCloseDeleteRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DropDownMenu, \"xfbtGnWKD42NQ+abvWigX6ux0w8=\");\n_c = DropDownMenu;\nexport default DropDownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropDownMenu\");","map":{"version":3,"names":["React","useState","IconButton","DropdownMenu","DotsHorizontalIcon","EditRoleModal","DeleteRoleModal","jsxDEV","_jsxDEV","Fragment","_Fragment","DropDownMenu","role","_s","openEditRoleModal","setOpenEditRoleModal","openDeleteRoleModal","setOpenDeleteRoleModal","onCloseEditRole","onCloseDeleteRole","children","Root","Trigger","radius","variant","width","height","fileName","_jsxFileName","lineNumber","columnNumber","Content","Item","shortcut","onClick","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/src/components/Role/DropdownMenu.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '@radix-ui/themes/styles.css';\nimport { IconButton, DropdownMenu } from '@radix-ui/themes';\nimport { DotsHorizontalIcon } from '@radix-ui/react-icons';\nimport { Role } from '../../types/Role';\nimport EditRoleModal from '../../modals/Role/EditRoleModal';\nimport DeleteRoleModal from '../../modals/Role/DeleteRoleModal';\n\n// Catie - Type checking isn't working properly on this parameter intake\n// - it allowed me to pass in a role id, not the whole role\nconst DropDownMenu: React.FC<any> = ({ role }: { role: Role }) => {\n  const [openEditRoleModal, setOpenEditRoleModal] = useState(false);\n  const [openDeleteRoleModal, setOpenDeleteRoleModal] = useState(false);\n\n  const onCloseEditRole = () => setOpenEditRoleModal(false);\n  const onCloseDeleteRole = () => setOpenDeleteRoleModal(false);\n\n  return (\n    <>\n      <DropdownMenu.Root>\n        <DropdownMenu.Trigger>\n          <IconButton radius=\"full\" variant=\"ghost\">\n            <DotsHorizontalIcon width=\"18\" height=\"18\" />\n          </IconButton>\n        </DropdownMenu.Trigger>\n\n        <DropdownMenu.Content>\n          <DropdownMenu.Item\n            shortcut=\"⌘ E\"\n            onClick={() => setOpenEditRoleModal(true)}\n          >\n            Edit role\n          </DropdownMenu.Item>\n          <DropdownMenu.Item\n            shortcut=\"⌘ D\"\n            onClick={() => setOpenDeleteRoleModal(true)}\n            area-label=\"Delete user\"\n          >\n            Delete role\n          </DropdownMenu.Item>\n        </DropdownMenu.Content>\n      </DropdownMenu.Root>\n\n      <EditRoleModal\n        role={role}\n        isOpen={openEditRoleModal}\n        onClose={onCloseEditRole}\n      />\n      <DeleteRoleModal\n        role={role}\n        isOpen={openDeleteRoleModal}\n        onClose={onCloseDeleteRole}\n      />\n    </>\n  );\n};\n\nexport default DropDownMenu;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}