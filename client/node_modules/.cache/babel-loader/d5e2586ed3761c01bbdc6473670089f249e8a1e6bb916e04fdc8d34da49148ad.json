{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/popover/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Anchor: () => Anchor2,\n  Arrow: () => Arrow2,\n  Close: () => Close,\n  Content: () => Content2,\n  Popover: () => Popover,\n  PopoverAnchor: () => PopoverAnchor,\n  PopoverArrow: () => PopoverArrow,\n  PopoverClose: () => PopoverClose,\n  PopoverContent: () => PopoverContent,\n  PopoverPortal: () => PopoverPortal,\n  PopoverTrigger: () => PopoverTrigger,\n  Portal: () => Portal,\n  Root: () => Root2,\n  Trigger: () => Trigger,\n  createPopoverScope: () => createPopoverScope\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/popover/src/popover.tsx\nvar React = __toESM(require(\"react\"));\nvar import_primitive = require(\"@radix-ui/primitive\");\nvar import_react_compose_refs = require(\"@radix-ui/react-compose-refs\");\nvar import_react_context = require(\"@radix-ui/react-context\");\nvar import_react_dismissable_layer = require(\"@radix-ui/react-dismissable-layer\");\nvar import_react_focus_guards = require(\"@radix-ui/react-focus-guards\");\nvar import_react_focus_scope = require(\"@radix-ui/react-focus-scope\");\nvar import_react_id = require(\"@radix-ui/react-id\");\nvar PopperPrimitive = __toESM(require(\"@radix-ui/react-popper\"));\nvar import_react_popper = require(\"@radix-ui/react-popper\");\nvar import_react_portal = require(\"@radix-ui/react-portal\");\nvar import_react_presence = require(\"@radix-ui/react-presence\");\nvar import_react_primitive = require(\"@radix-ui/react-primitive\");\nvar import_react_slot = require(\"@radix-ui/react-slot\");\nvar import_react_use_controllable_state = require(\"@radix-ui/react-use-controllable-state\");\nvar import_aria_hidden = require(\"aria-hidden\");\nvar import_react_remove_scroll = require(\"react-remove-scroll\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar POPOVER_NAME = \"Popover\";\nvar [createPopoverContext, createPopoverScope] = (0, import_react_context.createContextScope)(POPOVER_NAME, [import_react_popper.createPopperScope]);\nvar usePopperScope = (0, import_react_popper.createPopperScope)();\nvar [PopoverProvider, usePopoverContext] = createPopoverContext(POPOVER_NAME);\nvar Popover = props => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open = false, setOpen] = (0, import_react_use_controllable_state.useControllableState)({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopperPrimitive.Root, {\n    ...popperScope,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopoverProvider, {\n      scope: __scopePopover,\n      contentId: (0, import_react_id.useId)(),\n      triggerRef,\n      open,\n      onOpenChange: setOpen,\n      onOpenToggle: React.useCallback(() => setOpen(prevOpen => !prevOpen), [setOpen]),\n      hasCustomAnchor,\n      onCustomAnchorAdd: React.useCallback(() => setHasCustomAnchor(true), []),\n      onCustomAnchorRemove: React.useCallback(() => setHasCustomAnchor(false), []),\n      modal,\n      children\n    })\n  });\n};\nPopover.displayName = POPOVER_NAME;\nvar ANCHOR_NAME = \"PopoverAnchor\";\nvar PopoverAnchor = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopePopover,\n    ...anchorProps\n  } = props;\n  const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n  const popperScope = usePopperScope(__scopePopover);\n  const {\n    onCustomAnchorAdd,\n    onCustomAnchorRemove\n  } = context;\n  React.useEffect(() => {\n    onCustomAnchorAdd();\n    return () => onCustomAnchorRemove();\n  }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopperPrimitive.Anchor, {\n    ...popperScope,\n    ...anchorProps,\n    ref: forwardedRef\n  });\n});\nPopoverAnchor.displayName = ANCHOR_NAME;\nvar TRIGGER_NAME = \"PopoverTrigger\";\nvar PopoverTrigger = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopePopover,\n    ...triggerProps\n  } = props;\n  const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n  const popperScope = usePopperScope(__scopePopover);\n  const composedTriggerRef = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, context.triggerRef);\n  const trigger = /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.button, {\n    type: \"button\",\n    \"aria-haspopup\": \"dialog\",\n    \"aria-expanded\": context.open,\n    \"aria-controls\": context.contentId,\n    \"data-state\": getState(context.open),\n    ...triggerProps,\n    ref: composedTriggerRef,\n    onClick: (0, import_primitive.composeEventHandlers)(props.onClick, context.onOpenToggle)\n  });\n  return context.hasCustomAnchor ? trigger : /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopperPrimitive.Anchor, {\n    asChild: true,\n    ...popperScope,\n    children: trigger\n  });\n});\nPopoverTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"PopoverPortal\";\nvar [PortalProvider, usePortalContext] = createPopoverContext(PORTAL_NAME, {\n  forceMount: void 0\n});\nvar PopoverPortal = props => {\n  const {\n    __scopePopover,\n    forceMount,\n    children,\n    container\n  } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(PortalProvider, {\n    scope: __scopePopover,\n    forceMount,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_presence.Presence, {\n      present: forceMount || context.open,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_portal.Portal, {\n        asChild: true,\n        container,\n        children\n      })\n    })\n  });\n};\nPopoverPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"PopoverContent\";\nvar PopoverContent = React.forwardRef((props, forwardedRef) => {\n  const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n  const {\n    forceMount = portalContext.forceMount,\n    ...contentProps\n  } = props;\n  const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_presence.Presence, {\n    present: forceMount || context.open,\n    children: context.modal ? /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopoverContentModal, {\n      ...contentProps,\n      ref: forwardedRef\n    }) : /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopoverContentNonModal, {\n      ...contentProps,\n      ref: forwardedRef\n    })\n  });\n});\nPopoverContent.displayName = CONTENT_NAME;\nvar PopoverContentModal = React.forwardRef((props, forwardedRef) => {\n  const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n  const contentRef = React.useRef(null);\n  const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, contentRef);\n  const isRightClickOutsideRef = React.useRef(false);\n  React.useEffect(() => {\n    const content = contentRef.current;\n    if (content) return (0, import_aria_hidden.hideOthers)(content);\n  }, []);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_remove_scroll.RemoveScroll, {\n    as: import_react_slot.Slot,\n    allowPinchZoom: true,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopoverContentImpl, {\n      ...props,\n      ref: composedRefs,\n      trapFocus: context.open,\n      disableOutsidePointerEvents: true,\n      onCloseAutoFocus: (0, import_primitive.composeEventHandlers)(props.onCloseAutoFocus, event => {\n        event.preventDefault();\n        if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n      }),\n      onPointerDownOutside: (0, import_primitive.composeEventHandlers)(props.onPointerDownOutside, event => {\n        const originalEvent = event.detail.originalEvent;\n        const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n        const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n        isRightClickOutsideRef.current = isRightClick;\n      }, {\n        checkForDefaultPrevented: false\n      }),\n      onFocusOutside: (0, import_primitive.composeEventHandlers)(props.onFocusOutside, event => event.preventDefault(), {\n        checkForDefaultPrevented: false\n      })\n    })\n  });\n});\nvar PopoverContentNonModal = React.forwardRef((props, forwardedRef) => {\n  const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n  const hasInteractedOutsideRef = React.useRef(false);\n  const hasPointerDownOutsideRef = React.useRef(false);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopoverContentImpl, {\n    ...props,\n    ref: forwardedRef,\n    trapFocus: false,\n    disableOutsidePointerEvents: false,\n    onCloseAutoFocus: event => {\n      props.onCloseAutoFocus?.(event);\n      if (!event.defaultPrevented) {\n        if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n        event.preventDefault();\n      }\n      hasInteractedOutsideRef.current = false;\n      hasPointerDownOutsideRef.current = false;\n    },\n    onInteractOutside: event => {\n      props.onInteractOutside?.(event);\n      if (!event.defaultPrevented) {\n        hasInteractedOutsideRef.current = true;\n        if (event.detail.originalEvent.type === \"pointerdown\") {\n          hasPointerDownOutsideRef.current = true;\n        }\n      }\n      const target = event.target;\n      const targetIsTrigger = context.triggerRef.current?.contains(target);\n      if (targetIsTrigger) event.preventDefault();\n      if (event.detail.originalEvent.type === \"focusin\" && hasPointerDownOutsideRef.current) {\n        event.preventDefault();\n      }\n    }\n  });\n});\nvar PopoverContentImpl = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopePopover,\n    trapFocus,\n    onOpenAutoFocus,\n    onCloseAutoFocus,\n    disableOutsidePointerEvents,\n    onEscapeKeyDown,\n    onPointerDownOutside,\n    onFocusOutside,\n    onInteractOutside,\n    ...contentProps\n  } = props;\n  const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n  const popperScope = usePopperScope(__scopePopover);\n  (0, import_react_focus_guards.useFocusGuards)();\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_focus_scope.FocusScope, {\n    asChild: true,\n    loop: true,\n    trapped: trapFocus,\n    onMountAutoFocus: onOpenAutoFocus,\n    onUnmountAutoFocus: onCloseAutoFocus,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_dismissable_layer.DismissableLayer, {\n      asChild: true,\n      disableOutsidePointerEvents,\n      onInteractOutside,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onDismiss: () => context.onOpenChange(false),\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopperPrimitive.Content, {\n        \"data-state\": getState(context.open),\n        role: \"dialog\",\n        id: context.contentId,\n        ...popperScope,\n        ...contentProps,\n        ref: forwardedRef,\n        style: {\n          ...contentProps.style,\n          // re-namespace exposed content custom properties\n          ...{\n            \"--radix-popover-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n            \"--radix-popover-content-available-width\": \"var(--radix-popper-available-width)\",\n            \"--radix-popover-content-available-height\": \"var(--radix-popper-available-height)\",\n            \"--radix-popover-trigger-width\": \"var(--radix-popper-anchor-width)\",\n            \"--radix-popover-trigger-height\": \"var(--radix-popper-anchor-height)\"\n          }\n        }\n      })\n    })\n  });\n});\nvar CLOSE_NAME = \"PopoverClose\";\nvar PopoverClose = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopePopover,\n    ...closeProps\n  } = props;\n  const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.button, {\n    type: \"button\",\n    ...closeProps,\n    ref: forwardedRef,\n    onClick: (0, import_primitive.composeEventHandlers)(props.onClick, () => context.onOpenChange(false))\n  });\n});\nPopoverClose.displayName = CLOSE_NAME;\nvar ARROW_NAME = \"PopoverArrow\";\nvar PopoverArrow = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopePopover,\n    ...arrowProps\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopperPrimitive.Arrow, {\n    ...popperScope,\n    ...arrowProps,\n    ref: forwardedRef\n  });\n});\nPopoverArrow.displayName = ARROW_NAME;\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root2 = Popover;\nvar Anchor2 = PopoverAnchor;\nvar Trigger = PopoverTrigger;\nvar Portal = PopoverPortal;\nvar Content2 = PopoverContent;\nvar Close = PopoverClose;\nvar Arrow2 = PopoverArrow;","map":{"version":3,"names":["src_exports","__export","Anchor","Anchor2","Arrow","Arrow2","Close","Content","Content2","Popover","PopoverAnchor","PopoverArrow","PopoverClose","PopoverContent","PopoverPortal","PopoverTrigger","Portal","Root","Root2","Trigger","createPopoverScope","module","exports","__toCommonJS","React","__toESM","require","import_primitive","import_react_compose_refs","import_react_context","import_react_dismissable_layer","import_react_focus_guards","import_react_focus_scope","import_react_id","PopperPrimitive","import_react_popper","import_react_portal","import_react_presence","import_react_primitive","import_react_slot","import_react_use_controllable_state","import_aria_hidden","import_react_remove_scroll","import_jsx_runtime","POPOVER_NAME","createPopoverContext","createContextScope","createPopperScope","usePopperScope","PopoverProvider","usePopoverContext","props","__scopePopover","children","open","openProp","defaultOpen","onOpenChange","modal","popperScope","triggerRef","useRef","hasCustomAnchor","setHasCustomAnchor","useState","setOpen","useControllableState","prop","defaultProp","onChange","jsx","scope","contentId","useId","onOpenToggle","useCallback","prevOpen","onCustomAnchorAdd","onCustomAnchorRemove","displayName","ANCHOR_NAME","forwardRef","forwardedRef","anchorProps","context","useEffect","ref","TRIGGER_NAME","triggerProps","composedTriggerRef","useComposedRefs","trigger","Primitive","button","type","getState","onClick","composeEventHandlers","asChild","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","container","Presence","present","CONTENT_NAME","portalContext","contentProps","PopoverContentModal","PopoverContentNonModal","contentRef","composedRefs","isRightClickOutsideRef","content","current","hideOthers","RemoveScroll","as","Slot","allowPinchZoom","PopoverContentImpl","trapFocus","disableOutsidePointerEvents","onCloseAutoFocus","event","preventDefault","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","ctrlKey","isRightClick","checkForDefaultPrevented","onFocusOutside","hasInteractedOutsideRef","hasPointerDownOutsideRef","defaultPrevented","onInteractOutside","target","targetIsTrigger","contains","onOpenAutoFocus","onEscapeKeyDown","useFocusGuards","FocusScope","loop","trapped","onMountAutoFocus","onUnmountAutoFocus","DismissableLayer","onDismiss","role","id","style","CLOSE_NAME","closeProps","ARROW_NAME","arrowProps"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-popover/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-popover/src/popover.tsx"],"sourcesContent":["'use client';\nexport {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Portal,\n  Content,\n  Close,\n  Arrow,\n} from './popover';\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverPortalProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n} from './popover';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Popover\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPOVER_NAME = 'Popover';\n\ntype ScopedProps<P> = P & { __scopePopover?: Scope };\nconst [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype PopoverContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  hasCustomAnchor: boolean;\n  onCustomAnchorAdd(): void;\n  onCustomAnchorRemove(): void;\n  modal: boolean;\n};\n\nconst [PopoverProvider, usePopoverContext] =\n  createPopoverContext<PopoverContextValue>(POPOVER_NAME);\n\ninterface PopoverProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  modal?: boolean;\n}\n\nconst Popover: React.FC<PopoverProps> = (props: ScopedProps<PopoverProps>) => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false,\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <PopoverProvider\n        scope={__scopePopover}\n        contentId={useId()}\n        triggerRef={triggerRef}\n        open={open}\n        onOpenChange={setOpen}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n        hasCustomAnchor={hasCustomAnchor}\n        onCustomAnchorAdd={React.useCallback(() => setHasCustomAnchor(true), [])}\n        onCustomAnchorRemove={React.useCallback(() => setHasCustomAnchor(false), [])}\n        modal={modal}\n      >\n        {children}\n      </PopoverProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nPopover.displayName = POPOVER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopoverAnchor';\n\ntype PopoverAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface PopoverAnchorProps extends PopperAnchorProps {}\n\nconst PopoverAnchor = React.forwardRef<PopoverAnchorElement, PopoverAnchorProps>(\n  (props: ScopedProps<PopoverAnchorProps>, forwardedRef) => {\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n\n    React.useEffect(() => {\n      onCustomAnchorAdd();\n      return () => onCustomAnchorRemove();\n    }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'PopoverTrigger';\n\ntype PopoverTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface PopoverTriggerProps extends PrimitiveButtonProps {}\n\nconst PopoverTrigger = React.forwardRef<PopoverTriggerElement, PopoverTriggerProps>(\n  (props: ScopedProps<PopoverTriggerProps>, forwardedRef) => {\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n\n    const trigger = (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n\n    return context.hasCustomAnchor ? (\n      trigger\n    ) : (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        {trigger}\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nPopoverTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'PopoverPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createPopoverContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface PopoverPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverPortal: React.FC<PopoverPortalProps> = (props: ScopedProps<PopoverPortalProps>) => {\n  const { __scopePopover, forceMount, children, container } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return (\n    <PortalProvider scope={__scopePopover} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nPopoverPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopoverContent';\n\ninterface PopoverContentProps extends PopoverContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverContent = React.forwardRef<PopoverContentTypeElement, PopoverContentProps>(\n  (props: ScopedProps<PopoverContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <PopoverContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <PopoverContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nPopoverContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentTypeElement = PopoverContentImplElement;\ninterface PopoverContentTypeProps\n  extends Omit<PopoverContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst PopoverContentModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const isRightClickOutsideRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <RemoveScroll as={Slot} allowPinchZoom>\n        <PopoverContentImpl\n          {...props}\n          ref={composedRefs}\n          // we make sure we're not trapping once it's been closed\n          // (closed !== unmounted when animating out)\n          trapFocus={context.open}\n          disableOutsidePointerEvents\n          onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n            event.preventDefault();\n            if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n          })}\n          onPointerDownOutside={composeEventHandlers(\n            props.onPointerDownOutside,\n            (event) => {\n              const originalEvent = event.detail.originalEvent;\n              const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n              const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n              isRightClickOutsideRef.current = isRightClick;\n            },\n            { checkForDefaultPrevented: false }\n          )}\n          // When focus is trapped, a `focusout` event may still happen.\n          // We make sure we don't trigger our `onDismiss` in such case.\n          onFocusOutside={composeEventHandlers(\n            props.onFocusOutside,\n            (event) => event.preventDefault(),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\nconst PopoverContentNonModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <PopoverContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface PopoverContentImplProps\n  extends Omit<PopperContentProps, 'onPlaced'>,\n    Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * Whether focus should be trapped within the `Popover`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst PopoverContentImpl = React.forwardRef<PopoverContentImplElement, PopoverContentImplProps>(\n  (props: ScopedProps<PopoverContentImplProps>, forwardedRef) => {\n    const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      ...contentProps\n    } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n\n    // Make sure the whole tree has focus guards as our `Popover` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <FocusScope\n        asChild\n        loop\n        trapped={trapFocus}\n        onMountAutoFocus={onOpenAutoFocus}\n        onUnmountAutoFocus={onCloseAutoFocus}\n      >\n        <DismissableLayer\n          asChild\n          disableOutsidePointerEvents={disableOutsidePointerEvents}\n          onInteractOutside={onInteractOutside}\n          onEscapeKeyDown={onEscapeKeyDown}\n          onPointerDownOutside={onPointerDownOutside}\n          onFocusOutside={onFocusOutside}\n          onDismiss={() => context.onOpenChange(false)}\n        >\n          <PopperPrimitive.Content\n            data-state={getState(context.open)}\n            role=\"dialog\"\n            id={context.contentId}\n            {...popperScope}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...contentProps.style,\n              // re-namespace exposed content custom properties\n              ...{\n                '--radix-popover-content-transform-origin': 'var(--radix-popper-transform-origin)',\n                '--radix-popover-content-available-width': 'var(--radix-popper-available-width)',\n                '--radix-popover-content-available-height': 'var(--radix-popper-available-height)',\n                '--radix-popover-trigger-width': 'var(--radix-popper-anchor-width)',\n                '--radix-popover-trigger-height': 'var(--radix-popper-anchor-height)',\n              },\n            }}\n          />\n        </DismissableLayer>\n      </FocusScope>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'PopoverClose';\n\ntype PopoverCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface PopoverCloseProps extends PrimitiveButtonProps {}\n\nconst PopoverClose = React.forwardRef<PopoverCloseElement, PopoverCloseProps>(\n  (props: ScopedProps<PopoverCloseProps>, forwardedRef) => {\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nPopoverClose.displayName = CLOSE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopoverArrow';\n\ntype PopoverArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface PopoverArrowProps extends PopperArrowProps {}\n\nconst PopoverArrow = React.forwardRef<PopoverArrowElement, PopoverArrowProps>(\n  (props: ScopedProps<PopoverArrowProps>, forwardedRef) => {\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Popover;\nconst Anchor = PopoverAnchor;\nconst Trigger = PopoverTrigger;\nconst Portal = PopoverPortal;\nconst Content = PopoverContent;\nconst Close = PopoverClose;\nconst Arrow = PopoverArrow;\n\nexport {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Portal,\n  Content,\n  Close,\n  Arrow,\n};\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverPortalProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,MAAA,EAAAA,CAAA,KAAAC,OAAA;EAAAC,KAAA,EAAAA,CAAA,KAAAC,MAAA;EAAAC,KAAA,EAAAA,CAAA,KAAAA,KAAA;EAAAC,OAAA,EAAAA,CAAA,KAAAC,QAAA;EAAAC,OAAA,EAAAA,CAAA,KAAAA,OAAA;EAAAC,aAAA,EAAAA,CAAA,KAAAA,aAAA;EAAAC,YAAA,EAAAA,CAAA,KAAAA,YAAA;EAAAC,YAAA,EAAAA,CAAA,KAAAA,YAAA;EAAAC,cAAA,EAAAA,CAAA,KAAAA,cAAA;EAAAC,aAAA,EAAAA,CAAA,KAAAA,aAAA;EAAAC,cAAA,EAAAA,CAAA,KAAAA,cAAA;EAAAC,MAAA,EAAAA,CAAA,KAAAA,MAAA;EAAAC,IAAA,EAAAA,CAAA,KAAAC,KAAA;EAAAC,OAAA,EAAAA,CAAA,KAAAA,OAAA;EAAAC,kBAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAvB,WAAA;;;ACAA,IAAAwB,KAAA,GAAuBC,OAAA,CAAAC,OAAA;AACvB,IAAAC,gBAAA,GAAqCD,OAAA;AACrC,IAAAE,yBAAA,GAAgCF,OAAA;AAChC,IAAAG,oBAAA,GAAmCH,OAAA;AACnC,IAAAI,8BAAA,GAAiCJ,OAAA;AACjC,IAAAK,yBAAA,GAA+BL,OAAA;AAC/B,IAAAM,wBAAA,GAA2BN,OAAA;AAC3B,IAAAO,eAAA,GAAsBP,OAAA;AACtB,IAAAQ,eAAA,GAAiCT,OAAA,CAAAC,OAAA;AACjC,IAAAS,mBAAA,GAAkCT,OAAA;AAClC,IAAAU,mBAAA,GAA0CV,OAAA;AAC1C,IAAAW,qBAAA,GAAyBX,OAAA;AACzB,IAAAY,sBAAA,GAA0BZ,OAAA;AAC1B,IAAAa,iBAAA,GAAqBb,OAAA;AACrB,IAAAc,mCAAA,GAAqCd,OAAA;AACrC,IAAAe,kBAAA,GAA2Bf,OAAA;AAC3B,IAAAgB,0BAAA,GAA6BhB,OAAA;AA2DvB,IAAAiB,kBAAA,GAAAjB,OAAA;AAnDN,IAAMkB,YAAA,GAAe;AAGrB,IAAM,CAACC,oBAAA,EAAsBzB,kBAAkB,QAAIS,oBAAA,CAAAiB,kBAAA,EAAmBF,YAAA,EAAc,CAClFT,mBAAA,CAAAY,iBAAA,CACD;AACD,IAAMC,cAAA,OAAiBb,mBAAA,CAAAY,iBAAA,EAAkB;AAczC,IAAM,CAACE,eAAA,EAAiBC,iBAAiB,IACvCL,oBAAA,CAA0CD,YAAY;AAUxD,IAAMnC,OAAA,GAAmC0C,KAAA,IAAqC;EAC5E,MAAM;IACJC,cAAA;IACAC,QAAA;IACAC,IAAA,EAAMC,QAAA;IACNC,WAAA;IACAC,YAAA;IACAC,KAAA,GAAQ;EACV,IAAIP,KAAA;EACJ,MAAMQ,WAAA,GAAcX,cAAA,CAAeI,cAAc;EACjD,MAAMQ,UAAA,GAAmBpC,KAAA,CAAAqC,MAAA,CAA0B,IAAI;EACvD,MAAM,CAACC,eAAA,EAAiBC,kBAAkB,IAAUvC,KAAA,CAAAwC,QAAA,CAAS,KAAK;EAClE,MAAM,CAACV,IAAA,GAAO,OAAOW,OAAO,QAAIzB,mCAAA,CAAA0B,oBAAA,EAAqB;IACnDC,IAAA,EAAMZ,QAAA;IACNa,WAAA,EAAaZ,WAAA;IACba,QAAA,EAAUZ;EACZ,CAAC;EAED,OACE,mBAAAd,kBAAA,CAAA2B,GAAA,EAAiBpC,eAAA,CAAAjB,IAAA,EAAhB;IAAsB,GAAG0C,WAAA;IACxBN,QAAA,qBAAAV,kBAAA,CAAA2B,GAAA,EAACrB,eAAA;MACCsB,KAAA,EAAOnB,cAAA;MACPoB,SAAA,MAAWvC,eAAA,CAAAwC,KAAA,EAAM;MACjBb,UAAA;MACAN,IAAA;MACAG,YAAA,EAAcQ,OAAA;MACdS,YAAA,EAAoBlD,KAAA,CAAAmD,WAAA,CAAY,MAAMV,OAAA,CAASW,QAAA,IAAa,CAACA,QAAQ,GAAG,CAACX,OAAO,CAAC;MACjFH,eAAA;MACAe,iBAAA,EAAyBrD,KAAA,CAAAmD,WAAA,CAAY,MAAMZ,kBAAA,CAAmB,IAAI,GAAG,EAAE;MACvEe,oBAAA,EAA4BtD,KAAA,CAAAmD,WAAA,CAAY,MAAMZ,kBAAA,CAAmB,KAAK,GAAG,EAAE;MAC3EL,KAAA;MAECL;IAAA,CACH;EAAA,CACF;AAEJ;AAEA5C,OAAA,CAAQsE,WAAA,GAAcnC,YAAA;AAMtB,IAAMoC,WAAA,GAAc;AAMpB,IAAMtE,aAAA,GAAsBc,KAAA,CAAAyD,UAAA,CAC1B,CAAC9B,KAAA,EAAwC+B,YAAA,KAAiB;EACxD,MAAM;IAAE9B,cAAA;IAAgB,GAAG+B;EAAY,IAAIhC,KAAA;EAC3C,MAAMiC,OAAA,GAAUlC,iBAAA,CAAkB8B,WAAA,EAAa5B,cAAc;EAC7D,MAAMO,WAAA,GAAcX,cAAA,CAAeI,cAAc;EACjD,MAAM;IAAEyB,iBAAA;IAAmBC;EAAqB,IAAIM,OAAA;EAE9C5D,KAAA,CAAA6D,SAAA,CAAU,MAAM;IACpBR,iBAAA,CAAkB;IAClB,OAAO,MAAMC,oBAAA,CAAqB;EACpC,GAAG,CAACD,iBAAA,EAAmBC,oBAAoB,CAAC;EAE5C,OAAO,mBAAAnC,kBAAA,CAAA2B,GAAA,EAAiBpC,eAAA,CAAAhC,MAAA,EAAhB;IAAwB,GAAGyD,WAAA;IAAc,GAAGwB,WAAA;IAAaG,GAAA,EAAKJ;EAAA,CAAc;AACtF,CACF;AAEAxE,aAAA,CAAcqE,WAAA,GAAcC,WAAA;AAM5B,IAAMO,YAAA,GAAe;AAMrB,IAAMxE,cAAA,GAAuBS,KAAA,CAAAyD,UAAA,CAC3B,CAAC9B,KAAA,EAAyC+B,YAAA,KAAiB;EACzD,MAAM;IAAE9B,cAAA;IAAgB,GAAGoC;EAAa,IAAIrC,KAAA;EAC5C,MAAMiC,OAAA,GAAUlC,iBAAA,CAAkBqC,YAAA,EAAcnC,cAAc;EAC9D,MAAMO,WAAA,GAAcX,cAAA,CAAeI,cAAc;EACjD,MAAMqC,kBAAA,OAAqB7D,yBAAA,CAAA8D,eAAA,EAAgBR,YAAA,EAAcE,OAAA,CAAQxB,UAAU;EAE3E,MAAM+B,OAAA,GACJ,mBAAAhD,kBAAA,CAAA2B,GAAA,EAAChC,sBAAA,CAAAsD,SAAA,CAAUC,MAAA,EAAV;IACCC,IAAA,EAAK;IACL,iBAAc;IACd,iBAAeV,OAAA,CAAQ9B,IAAA;IACvB,iBAAe8B,OAAA,CAAQZ,SAAA;IACvB,cAAYuB,QAAA,CAASX,OAAA,CAAQ9B,IAAI;IAChC,GAAGkC,YAAA;IACJF,GAAA,EAAKG,kBAAA;IACLO,OAAA,MAASrE,gBAAA,CAAAsE,oBAAA,EAAqB9C,KAAA,CAAM6C,OAAA,EAASZ,OAAA,CAAQV,YAAY;EAAA,CACnE;EAGF,OAAOU,OAAA,CAAQtB,eAAA,GACb6B,OAAA,GAEA,mBAAAhD,kBAAA,CAAA2B,GAAA,EAAiBpC,eAAA,CAAAhC,MAAA,EAAhB;IAAuBgG,OAAA,EAAO;IAAE,GAAGvC,WAAA;IACjCN,QAAA,EAAAsC;EAAA,CACH;AAEJ,CACF;AAEA5E,cAAA,CAAegE,WAAA,GAAcQ,YAAA;AAM7B,IAAMY,WAAA,GAAc;AAGpB,IAAM,CAACC,cAAA,EAAgBC,gBAAgB,IAAIxD,oBAAA,CAAyCsD,WAAA,EAAa;EAC/FG,UAAA,EAAY;AACd,CAAC;AAgBD,IAAMxF,aAAA,GAA+CqC,KAAA,IAA2C;EAC9F,MAAM;IAAEC,cAAA;IAAgBkD,UAAA;IAAYjD,QAAA;IAAUkD;EAAU,IAAIpD,KAAA;EAC5D,MAAMiC,OAAA,GAAUlC,iBAAA,CAAkBiD,WAAA,EAAa/C,cAAc;EAC7D,OACE,mBAAAT,kBAAA,CAAA2B,GAAA,EAAC8B,cAAA;IAAe7B,KAAA,EAAOnB,cAAA;IAAgBkD,UAAA;IACrCjD,QAAA,qBAAAV,kBAAA,CAAA2B,GAAA,EAACjC,qBAAA,CAAAmE,QAAA;MAASC,OAAA,EAASH,UAAA,IAAclB,OAAA,CAAQ9B,IAAA;MACvCD,QAAA,qBAAAV,kBAAA,CAAA2B,GAAA,EAAClC,mBAAA,CAAApB,MAAA;QAAgBkF,OAAA,EAAO;QAACK,SAAA;QACtBlD;MAAA,CACH;IAAA,CACF;EAAA,CACF;AAEJ;AAEAvC,aAAA,CAAciE,WAAA,GAAcoB,WAAA;AAM5B,IAAMO,YAAA,GAAe;AAUrB,IAAM7F,cAAA,GAAuBW,KAAA,CAAAyD,UAAA,CAC3B,CAAC9B,KAAA,EAAyC+B,YAAA,KAAiB;EACzD,MAAMyB,aAAA,GAAgBN,gBAAA,CAAiBK,YAAA,EAAcvD,KAAA,CAAMC,cAAc;EACzE,MAAM;IAAEkD,UAAA,GAAaK,aAAA,CAAcL,UAAA;IAAY,GAAGM;EAAa,IAAIzD,KAAA;EACnE,MAAMiC,OAAA,GAAUlC,iBAAA,CAAkBwD,YAAA,EAAcvD,KAAA,CAAMC,cAAc;EACpE,OACE,mBAAAT,kBAAA,CAAA2B,GAAA,EAACjC,qBAAA,CAAAmE,QAAA;IAASC,OAAA,EAASH,UAAA,IAAclB,OAAA,CAAQ9B,IAAA;IACtCD,QAAA,EAAA+B,OAAA,CAAQ1B,KAAA,GACP,mBAAAf,kBAAA,CAAA2B,GAAA,EAACuC,mBAAA;MAAqB,GAAGD,YAAA;MAActB,GAAA,EAAKJ;IAAA,CAAc,IAE1D,mBAAAvC,kBAAA,CAAA2B,GAAA,EAACwC,sBAAA;MAAwB,GAAGF,YAAA;MAActB,GAAA,EAAKJ;IAAA,CAAc;EAAA,CAEjE;AAEJ,CACF;AAEArE,cAAA,CAAekE,WAAA,GAAc2B,YAAA;AAQ7B,IAAMG,mBAAA,GAA4BrF,KAAA,CAAAyD,UAAA,CAChC,CAAC9B,KAAA,EAA6C+B,YAAA,KAAiB;EAC7D,MAAME,OAAA,GAAUlC,iBAAA,CAAkBwD,YAAA,EAAcvD,KAAA,CAAMC,cAAc;EACpE,MAAM2D,UAAA,GAAmBvF,KAAA,CAAAqC,MAAA,CAAuB,IAAI;EACpD,MAAMmD,YAAA,OAAepF,yBAAA,CAAA8D,eAAA,EAAgBR,YAAA,EAAc6B,UAAU;EAC7D,MAAME,sBAAA,GAA+BzF,KAAA,CAAAqC,MAAA,CAAO,KAAK;EAG3CrC,KAAA,CAAA6D,SAAA,CAAU,MAAM;IACpB,MAAM6B,OAAA,GAAUH,UAAA,CAAWI,OAAA;IAC3B,IAAID,OAAA,EAAS,WAAOzE,kBAAA,CAAA2E,UAAA,EAAWF,OAAO;EACxC,GAAG,EAAE;EAEL,OACE,mBAAAvE,kBAAA,CAAA2B,GAAA,EAAC5B,0BAAA,CAAA2E,YAAA;IAAaC,EAAA,EAAI/E,iBAAA,CAAAgF,IAAA;IAAMC,cAAA,EAAc;IACpCnE,QAAA,qBAAAV,kBAAA,CAAA2B,GAAA,EAACmD,kBAAA;MACE,GAAGtE,KAAA;MACJmC,GAAA,EAAK0B,YAAA;MAGLU,SAAA,EAAWtC,OAAA,CAAQ9B,IAAA;MACnBqE,2BAAA,EAA2B;MAC3BC,gBAAA,MAAkBjG,gBAAA,CAAAsE,oBAAA,EAAqB9C,KAAA,CAAMyE,gBAAA,EAAmBC,KAAA,IAAU;QACxEA,KAAA,CAAMC,cAAA,CAAe;QACrB,IAAI,CAACb,sBAAA,CAAuBE,OAAA,EAAS/B,OAAA,CAAQxB,UAAA,CAAWuD,OAAA,EAASY,KAAA,CAAM;MACzE,CAAC;MACDC,oBAAA,MAAsBrG,gBAAA,CAAAsE,oBAAA,EACpB9C,KAAA,CAAM6E,oBAAA,EACLH,KAAA,IAAU;QACT,MAAMI,aAAA,GAAgBJ,KAAA,CAAMK,MAAA,CAAOD,aAAA;QACnC,MAAME,aAAA,GAAgBF,aAAA,CAAcpC,MAAA,KAAW,KAAKoC,aAAA,CAAcG,OAAA,KAAY;QAC9E,MAAMC,YAAA,GAAeJ,aAAA,CAAcpC,MAAA,KAAW,KAAKsC,aAAA;QAEnDlB,sBAAA,CAAuBE,OAAA,GAAUkB,YAAA;MACnC,GACA;QAAEC,wBAAA,EAA0B;MAAM,CACpC;MAGAC,cAAA,MAAgB5G,gBAAA,CAAAsE,oBAAA,EACd9C,KAAA,CAAMoF,cAAA,EACLV,KAAA,IAAUA,KAAA,CAAMC,cAAA,CAAe,GAChC;QAAEQ,wBAAA,EAA0B;MAAM,CACpC;IAAA,CACF;EAAA,CACF;AAEJ,CACF;AAEA,IAAMxB,sBAAA,GAA+BtF,KAAA,CAAAyD,UAAA,CACnC,CAAC9B,KAAA,EAA6C+B,YAAA,KAAiB;EAC7D,MAAME,OAAA,GAAUlC,iBAAA,CAAkBwD,YAAA,EAAcvD,KAAA,CAAMC,cAAc;EACpE,MAAMoF,uBAAA,GAAgChH,KAAA,CAAAqC,MAAA,CAAO,KAAK;EAClD,MAAM4E,wBAAA,GAAiCjH,KAAA,CAAAqC,MAAA,CAAO,KAAK;EAEnD,OACE,mBAAAlB,kBAAA,CAAA2B,GAAA,EAACmD,kBAAA;IACE,GAAGtE,KAAA;IACJmC,GAAA,EAAKJ,YAAA;IACLwC,SAAA,EAAW;IACXC,2BAAA,EAA6B;IAC7BC,gBAAA,EAAmBC,KAAA,IAAU;MAC3B1E,KAAA,CAAMyE,gBAAA,GAAmBC,KAAK;MAE9B,IAAI,CAACA,KAAA,CAAMa,gBAAA,EAAkB;QAC3B,IAAI,CAACF,uBAAA,CAAwBrB,OAAA,EAAS/B,OAAA,CAAQxB,UAAA,CAAWuD,OAAA,EAASY,KAAA,CAAM;QAExEF,KAAA,CAAMC,cAAA,CAAe;MACvB;MAEAU,uBAAA,CAAwBrB,OAAA,GAAU;MAClCsB,wBAAA,CAAyBtB,OAAA,GAAU;IACrC;IACAwB,iBAAA,EAAoBd,KAAA,IAAU;MAC5B1E,KAAA,CAAMwF,iBAAA,GAAoBd,KAAK;MAE/B,IAAI,CAACA,KAAA,CAAMa,gBAAA,EAAkB;QAC3BF,uBAAA,CAAwBrB,OAAA,GAAU;QAClC,IAAIU,KAAA,CAAMK,MAAA,CAAOD,aAAA,CAAcnC,IAAA,KAAS,eAAe;UACrD2C,wBAAA,CAAyBtB,OAAA,GAAU;QACrC;MACF;MAKA,MAAMyB,MAAA,GAASf,KAAA,CAAMe,MAAA;MACrB,MAAMC,eAAA,GAAkBzD,OAAA,CAAQxB,UAAA,CAAWuD,OAAA,EAAS2B,QAAA,CAASF,MAAM;MACnE,IAAIC,eAAA,EAAiBhB,KAAA,CAAMC,cAAA,CAAe;MAM1C,IAAID,KAAA,CAAMK,MAAA,CAAOD,aAAA,CAAcnC,IAAA,KAAS,aAAa2C,wBAAA,CAAyBtB,OAAA,EAAS;QACrFU,KAAA,CAAMC,cAAA,CAAe;MACvB;IACF;EAAA,CACF;AAEJ,CACF;AA8BA,IAAML,kBAAA,GAA2BjG,KAAA,CAAAyD,UAAA,CAC/B,CAAC9B,KAAA,EAA6C+B,YAAA,KAAiB;EAC7D,MAAM;IACJ9B,cAAA;IACAsE,SAAA;IACAqB,eAAA;IACAnB,gBAAA;IACAD,2BAAA;IACAqB,eAAA;IACAhB,oBAAA;IACAO,cAAA;IACAI,iBAAA;IACA,GAAG/B;EACL,IAAIzD,KAAA;EACJ,MAAMiC,OAAA,GAAUlC,iBAAA,CAAkBwD,YAAA,EAActD,cAAc;EAC9D,MAAMO,WAAA,GAAcX,cAAA,CAAeI,cAAc;EAIjD,IAAArB,yBAAA,CAAAkH,cAAA,EAAe;EAEf,OACE,mBAAAtG,kBAAA,CAAA2B,GAAA,EAACtC,wBAAA,CAAAkH,UAAA;IACChD,OAAA,EAAO;IACPiD,IAAA,EAAI;IACJC,OAAA,EAAS1B,SAAA;IACT2B,gBAAA,EAAkBN,eAAA;IAClBO,kBAAA,EAAoB1B,gBAAA;IAEpBvE,QAAA,qBAAAV,kBAAA,CAAA2B,GAAA,EAACxC,8BAAA,CAAAyH,gBAAA;MACCrD,OAAA,EAAO;MACPyB,2BAAA;MACAgB,iBAAA;MACAK,eAAA;MACAhB,oBAAA;MACAO,cAAA;MACAiB,SAAA,EAAWA,CAAA,KAAMpE,OAAA,CAAQ3B,YAAA,CAAa,KAAK;MAE3CJ,QAAA,qBAAAV,kBAAA,CAAA2B,GAAA,EAAiBpC,eAAA,CAAA3B,OAAA,EAAhB;QACC,cAAYwF,QAAA,CAASX,OAAA,CAAQ9B,IAAI;QACjCmG,IAAA,EAAK;QACLC,EAAA,EAAItE,OAAA,CAAQZ,SAAA;QACX,GAAGb,WAAA;QACH,GAAGiD,YAAA;QACJtB,GAAA,EAAKJ,YAAA;QACLyE,KAAA,EAAO;UACL,GAAG/C,YAAA,CAAa+C,KAAA;UAAA;UAEhB,GAAG;YACD,4CAA4C;YAC5C,2CAA2C;YAC3C,4CAA4C;YAC5C,iCAAiC;YACjC,kCAAkC;UACpC;QACF;MAAA,CACF;IAAA,CACF;EAAA,CACF;AAEJ,CACF;AAMA,IAAMC,UAAA,GAAa;AAKnB,IAAMhJ,YAAA,GAAqBY,KAAA,CAAAyD,UAAA,CACzB,CAAC9B,KAAA,EAAuC+B,YAAA,KAAiB;EACvD,MAAM;IAAE9B,cAAA;IAAgB,GAAGyG;EAAW,IAAI1G,KAAA;EAC1C,MAAMiC,OAAA,GAAUlC,iBAAA,CAAkB0G,UAAA,EAAYxG,cAAc;EAC5D,OACE,mBAAAT,kBAAA,CAAA2B,GAAA,EAAChC,sBAAA,CAAAsD,SAAA,CAAUC,MAAA,EAAV;IACCC,IAAA,EAAK;IACJ,GAAG+D,UAAA;IACJvE,GAAA,EAAKJ,YAAA;IACLc,OAAA,MAASrE,gBAAA,CAAAsE,oBAAA,EAAqB9C,KAAA,CAAM6C,OAAA,EAAS,MAAMZ,OAAA,CAAQ3B,YAAA,CAAa,KAAK,CAAC;EAAA,CAChF;AAEJ,CACF;AAEA7C,YAAA,CAAamE,WAAA,GAAc6E,UAAA;AAM3B,IAAME,UAAA,GAAa;AAMnB,IAAMnJ,YAAA,GAAqBa,KAAA,CAAAyD,UAAA,CACzB,CAAC9B,KAAA,EAAuC+B,YAAA,KAAiB;EACvD,MAAM;IAAE9B,cAAA;IAAgB,GAAG2G;EAAW,IAAI5G,KAAA;EAC1C,MAAMQ,WAAA,GAAcX,cAAA,CAAeI,cAAc;EACjD,OAAO,mBAAAT,kBAAA,CAAA2B,GAAA,EAAiBpC,eAAA,CAAA9B,KAAA,EAAhB;IAAuB,GAAGuD,WAAA;IAAc,GAAGoG,UAAA;IAAYzE,GAAA,EAAKJ;EAAA,CAAc;AACpF,CACF;AAEAvE,YAAA,CAAaoE,WAAA,GAAc+E,UAAA;AAI3B,SAAS/D,SAASzC,IAAA,EAAe;EAC/B,OAAOA,IAAA,GAAO,SAAS;AACzB;AAEA,IAAMpC,KAAA,GAAOT,OAAA;AACb,IAAMN,OAAA,GAASO,aAAA;AACf,IAAMS,OAAA,GAAUJ,cAAA;AAChB,IAAMC,MAAA,GAASF,aAAA;AACf,IAAMN,QAAA,GAAUK,cAAA;AAChB,IAAMP,KAAA,GAAQM,YAAA;AACd,IAAMP,MAAA,GAAQM,YAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}