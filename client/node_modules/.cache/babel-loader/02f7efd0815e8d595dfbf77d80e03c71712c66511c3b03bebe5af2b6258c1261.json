{"ast":null,"code":"\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/accessible-icon/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AccessibleIcon: () => AccessibleIcon,\n  Root: () => Root2\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/accessible-icon/src/accessible-icon.tsx\nvar React = __toESM(require(\"react\"));\nvar VisuallyHiddenPrimitive = __toESM(require(\"@radix-ui/react-visually-hidden\"));\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar NAME = \"AccessibleIcon\";\nvar AccessibleIcon = ({\n  children,\n  label\n}) => {\n  const child = React.Children.only(children);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {\n    children: [React.cloneElement(child, {\n      // accessibility\n      \"aria-hidden\": \"true\",\n      focusable: \"false\"\n      // See: https://allyjs.io/tutorials/focusing-in-svg.html#making-svg-elements-focusable\n    }), /* @__PURE__ */(0, import_jsx_runtime.jsx)(VisuallyHiddenPrimitive.Root, {\n      children: label\n    })]\n  });\n};\nAccessibleIcon.displayName = NAME;\nvar Root2 = AccessibleIcon;","map":{"version":3,"names":["src_exports","__export","AccessibleIcon","Root","Root2","module","exports","__toCommonJS","React","__toESM","require","VisuallyHiddenPrimitive","import_jsx_runtime","NAME","children","label","child","Children","only","jsxs","Fragment","cloneElement","focusable","jsx","displayName"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-accessible-icon/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-accessible-icon/src/accessible-icon.tsx"],"sourcesContent":["export {\n  AccessibleIcon,\n  //\n  Root,\n} from './accessible-icon';\nexport type { AccessibleIconProps } from './accessible-icon';\n","import * as React from 'react';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nconst NAME = 'AccessibleIcon';\n\ninterface AccessibleIconProps {\n  children?: React.ReactNode;\n  /**\n   * The accessible label for the icon. This label will be visually hidden but announced to screen\n   * reader users, similar to `alt` text for `img` tags.\n   */\n  label: string;\n}\n\nconst AccessibleIcon: React.FC<AccessibleIconProps> = ({ children, label }) => {\n  const child = React.Children.only(children);\n  return (\n    <>\n      {React.cloneElement(child as React.ReactElement<React.SVGAttributes<SVGElement>>, {\n        // accessibility\n        'aria-hidden': 'true',\n        focusable: 'false', // See: https://allyjs.io/tutorials/focusing-in-svg.html#making-svg-elements-focusable\n      })}\n      <VisuallyHiddenPrimitive.Root>{label}</VisuallyHiddenPrimitive.Root>\n    </>\n  );\n};\n\nAccessibleIcon.displayName = NAME;\n\nconst Root = AccessibleIcon;\n\nexport {\n  AccessibleIcon,\n  //\n  Root,\n};\nexport type { AccessibleIconProps };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,cAAA,EAAAA,CAAA,KAAAA,cAAA;EAAAC,IAAA,EAAAA,CAAA,KAAAC;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAP,WAAA;;;ACAA,IAAAQ,KAAA,GAAuBC,OAAA,CAAAC,OAAA;AACvB,IAAAC,uBAAA,GAAyCF,OAAA,CAAAC,OAAA;AAgBrC,IAAAE,kBAAA,GAAAF,OAAA;AAdJ,IAAMG,IAAA,GAAO;AAWb,IAAMX,cAAA,GAAgDA,CAAC;EAAEY,QAAA;EAAUC;AAAM,MAAM;EAC7E,MAAMC,KAAA,GAAcR,KAAA,CAAAS,QAAA,CAASC,IAAA,CAAKJ,QAAQ;EAC1C,OACE,mBAAAF,kBAAA,CAAAO,IAAA,EAAAP,kBAAA,CAAAQ,QAAA;IACGN,QAAA,GAAMN,KAAA,CAAAa,YAAA,CAAaL,KAAA,EAA8D;MAAA;MAEhF,eAAe;MACfM,SAAA,EAAW;MAAA;IACb,CAAC,GACD,mBAAAV,kBAAA,CAAAW,GAAA,EAAyBZ,uBAAA,CAAAR,IAAA,EAAxB;MAA8BW,QAAA,EAAAC;IAAA,CAAM;EAAA,CACvC;AAEJ;AAEAb,cAAA,CAAesB,WAAA,GAAcX,IAAA;AAE7B,IAAMT,KAAA,GAAOF,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}