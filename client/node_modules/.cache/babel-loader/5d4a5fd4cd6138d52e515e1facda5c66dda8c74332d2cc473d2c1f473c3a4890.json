{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/popper/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  ALIGN_OPTIONS: () => ALIGN_OPTIONS,\n  Anchor: () => Anchor,\n  Arrow: () => Arrow,\n  Content: () => Content,\n  Popper: () => Popper,\n  PopperAnchor: () => PopperAnchor,\n  PopperArrow: () => PopperArrow,\n  PopperContent: () => PopperContent,\n  Root: () => Root2,\n  SIDE_OPTIONS: () => SIDE_OPTIONS,\n  createPopperScope: () => createPopperScope\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/popper/src/popper.tsx\nvar React = __toESM(require(\"react\"));\nvar import_react_dom = require(\"@floating-ui/react-dom\");\nvar ArrowPrimitive = __toESM(require(\"@radix-ui/react-arrow\"));\nvar import_react_compose_refs = require(\"@radix-ui/react-compose-refs\");\nvar import_react_context = require(\"@radix-ui/react-context\");\nvar import_react_primitive = require(\"@radix-ui/react-primitive\");\nvar import_react_use_callback_ref = require(\"@radix-ui/react-use-callback-ref\");\nvar import_react_use_layout_effect = require(\"@radix-ui/react-use-layout-effect\");\nvar import_react_use_size = require(\"@radix-ui/react-use-size\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar SIDE_OPTIONS = [\"top\", \"right\", \"bottom\", \"left\"];\nvar ALIGN_OPTIONS = [\"start\", \"center\", \"end\"];\nvar POPPER_NAME = \"Popper\";\nvar [createPopperContext, createPopperScope] = (0, import_react_context.createContextScope)(POPPER_NAME);\nvar [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);\nvar Popper = props => {\n  const {\n    __scopePopper,\n    children\n  } = props;\n  const [anchor, setAnchor] = React.useState(null);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopperProvider, {\n    scope: __scopePopper,\n    anchor,\n    onAnchorChange: setAnchor,\n    children\n  });\n};\nPopper.displayName = POPPER_NAME;\nvar ANCHOR_NAME = \"PopperAnchor\";\nvar PopperAnchor = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopePopper,\n    virtualRef,\n    ...anchorProps\n  } = props;\n  const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n  const ref = React.useRef(null);\n  const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);\n  React.useEffect(() => {\n    context.onAnchorChange(virtualRef?.current || ref.current);\n  });\n  return virtualRef ? null : /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, {\n    ...anchorProps,\n    ref: composedRefs\n  });\n});\nPopperAnchor.displayName = ANCHOR_NAME;\nvar CONTENT_NAME = \"PopperContent\";\nvar [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME);\nvar PopperContent = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopePopper,\n    side = \"bottom\",\n    sideOffset = 0,\n    align = \"center\",\n    alignOffset = 0,\n    arrowPadding = 0,\n    avoidCollisions = true,\n    collisionBoundary = [],\n    collisionPadding: collisionPaddingProp = 0,\n    sticky = \"partial\",\n    hideWhenDetached = false,\n    updatePositionStrategy = \"optimized\",\n    onPlaced,\n    ...contentProps\n  } = props;\n  const context = usePopperContext(CONTENT_NAME, __scopePopper);\n  const [content, setContent] = React.useState(null);\n  const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, node => setContent(node));\n  const [arrow, setArrow] = React.useState(null);\n  const arrowSize = (0, import_react_use_size.useSize)(arrow);\n  const arrowWidth = arrowSize?.width ?? 0;\n  const arrowHeight = arrowSize?.height ?? 0;\n  const desiredPlacement = side + (align !== \"center\" ? \"-\" + align : \"\");\n  const collisionPadding = typeof collisionPaddingProp === \"number\" ? collisionPaddingProp : {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...collisionPaddingProp\n  };\n  const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n  const hasExplicitBoundaries = boundary.length > 0;\n  const detectOverflowOptions = {\n    padding: collisionPadding,\n    boundary: boundary.filter(isNotNull),\n    // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n    altBoundary: hasExplicitBoundaries\n  };\n  const {\n    refs,\n    floatingStyles,\n    placement,\n    isPositioned,\n    middlewareData\n  } = (0, import_react_dom.useFloating)({\n    // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n    strategy: \"fixed\",\n    placement: desiredPlacement,\n    whileElementsMounted: (...args) => {\n      const cleanup = (0, import_react_dom.autoUpdate)(...args, {\n        animationFrame: updatePositionStrategy === \"always\"\n      });\n      return cleanup;\n    },\n    elements: {\n      reference: context.anchor\n    },\n    middleware: [(0, import_react_dom.offset)({\n      mainAxis: sideOffset + arrowHeight,\n      alignmentAxis: alignOffset\n    }), avoidCollisions && (0, import_react_dom.shift)({\n      mainAxis: true,\n      crossAxis: false,\n      limiter: sticky === \"partial\" ? (0, import_react_dom.limitShift)() : void 0,\n      ...detectOverflowOptions\n    }), avoidCollisions && (0, import_react_dom.flip)({\n      ...detectOverflowOptions\n    }), (0, import_react_dom.size)({\n      ...detectOverflowOptions,\n      apply: ({\n        elements,\n        rects,\n        availableWidth,\n        availableHeight\n      }) => {\n        const {\n          width: anchorWidth,\n          height: anchorHeight\n        } = rects.reference;\n        const contentStyle = elements.floating.style;\n        contentStyle.setProperty(\"--radix-popper-available-width\", `${availableWidth}px`);\n        contentStyle.setProperty(\"--radix-popper-available-height\", `${availableHeight}px`);\n        contentStyle.setProperty(\"--radix-popper-anchor-width\", `${anchorWidth}px`);\n        contentStyle.setProperty(\"--radix-popper-anchor-height\", `${anchorHeight}px`);\n      }\n    }), arrow && (0, import_react_dom.arrow)({\n      element: arrow,\n      padding: arrowPadding\n    }), transformOrigin({\n      arrowWidth,\n      arrowHeight\n    }), hideWhenDetached && (0, import_react_dom.hide)({\n      strategy: \"referenceHidden\",\n      ...detectOverflowOptions\n    })]\n  });\n  const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n  const handlePlaced = (0, import_react_use_callback_ref.useCallbackRef)(onPlaced);\n  (0, import_react_use_layout_effect.useLayoutEffect)(() => {\n    if (isPositioned) {\n      handlePlaced?.();\n    }\n  }, [isPositioned, handlePlaced]);\n  const arrowX = middlewareData.arrow?.x;\n  const arrowY = middlewareData.arrow?.y;\n  const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n  const [contentZIndex, setContentZIndex] = React.useState();\n  (0, import_react_use_layout_effect.useLayoutEffect)(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"div\", {\n    ref: refs.setFloating,\n    \"data-radix-popper-content-wrapper\": \"\",\n    style: {\n      ...floatingStyles,\n      transform: isPositioned ? floatingStyles.transform : \"translate(0, -200%)\",\n      // keep off the page when measuring\n      minWidth: \"max-content\",\n      zIndex: contentZIndex,\n      [\"--radix-popper-transform-origin\"]: [middlewareData.transformOrigin?.x, middlewareData.transformOrigin?.y].join(\" \"),\n      // hide the content if using the hide middleware and should be hidden\n      // set visibility to hidden and disable pointer events so the UI behaves\n      // as if the PopperContent isn't there at all\n      ...(middlewareData.hide?.referenceHidden && {\n        visibility: \"hidden\",\n        pointerEvents: \"none\"\n      })\n    },\n    dir: props.dir,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopperContentProvider, {\n      scope: __scopePopper,\n      placedSide,\n      onArrowChange: setArrow,\n      arrowX,\n      arrowY,\n      shouldHideArrow: cannotCenterArrow,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, {\n        \"data-side\": placedSide,\n        \"data-align\": placedAlign,\n        ...contentProps,\n        ref: composedRefs,\n        style: {\n          ...contentProps.style,\n          // if the PopperContent hasn't been placed yet (not all measurements done)\n          // we prevent animations so that users's animation don't kick in too early referring wrong sides\n          animation: !isPositioned ? \"none\" : void 0\n        }\n      })\n    })\n  });\n});\nPopperContent.displayName = CONTENT_NAME;\nvar ARROW_NAME = \"PopperArrow\";\nvar OPPOSITE_SIDE = {\n  top: \"bottom\",\n  right: \"left\",\n  bottom: \"top\",\n  left: \"right\"\n};\nvar PopperArrow = React.forwardRef(function PopperArrow2(props, forwardedRef) {\n  const {\n    __scopePopper,\n    ...arrowProps\n  } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    /* @__PURE__ */\n    (0, import_jsx_runtime.jsx)(\"span\", {\n      ref: contentContext.onArrowChange,\n      style: {\n        position: \"absolute\",\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: \"\",\n          right: \"0 0\",\n          bottom: \"center 0\",\n          left: \"100% 0\"\n        }[contentContext.placedSide],\n        transform: {\n          top: \"translateY(100%)\",\n          right: \"translateY(50%) rotate(90deg) translateX(-50%)\",\n          bottom: `rotate(180deg)`,\n          left: \"translateY(50%) rotate(-90deg) translateX(50%)\"\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? \"hidden\" : void 0\n      },\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(ArrowPrimitive.Root, {\n        ...arrowProps,\n        ref: forwardedRef,\n        style: {\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: \"block\"\n        }\n      })\n    })\n  );\n});\nPopperArrow.displayName = ARROW_NAME;\nfunction isNotNull(value) {\n  return value !== null;\n}\nvar transformOrigin = options => ({\n  name: \"transformOrigin\",\n  options,\n  fn(data) {\n    const {\n      placement,\n      rects,\n      middlewareData\n    } = data;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = {\n      start: \"0%\",\n      center: \"50%\",\n      end: \"100%\"\n    }[placedAlign];\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n    let x = \"\";\n    let y = \"\";\n    if (placedSide === \"bottom\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === \"top\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === \"right\") {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === \"left\") {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return {\n      data: {\n        x,\n        y\n      }\n    };\n  }\n});\nfunction getSideAndAlignFromPlacement(placement) {\n  const [side, align = \"center\"] = placement.split(\"-\");\n  return [side, align];\n}\nvar Root2 = Popper;\nvar Anchor = PopperAnchor;\nvar Content = PopperContent;\nvar Arrow = PopperArrow;","map":{"version":3,"names":["src_exports","__export","ALIGN_OPTIONS","Anchor","Arrow","Content","Popper","PopperAnchor","PopperArrow","PopperContent","Root","Root2","SIDE_OPTIONS","createPopperScope","module","exports","__toCommonJS","React","__toESM","require","import_react_dom","ArrowPrimitive","import_react_compose_refs","import_react_context","import_react_primitive","import_react_use_callback_ref","import_react_use_layout_effect","import_react_use_size","import_jsx_runtime","POPPER_NAME","createPopperContext","createContextScope","PopperProvider","usePopperContext","props","__scopePopper","children","anchor","setAnchor","useState","jsx","scope","onAnchorChange","displayName","ANCHOR_NAME","forwardRef","forwardedRef","virtualRef","anchorProps","context","ref","useRef","composedRefs","useComposedRefs","useEffect","current","Primitive","div","CONTENT_NAME","PopperContentProvider","useContentContext","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","collisionPaddingProp","sticky","hideWhenDetached","updatePositionStrategy","onPlaced","contentProps","content","setContent","node","arrow","setArrow","arrowSize","useSize","arrowWidth","width","arrowHeight","height","desiredPlacement","top","right","bottom","left","boundary","Array","isArray","hasExplicitBoundaries","length","detectOverflowOptions","padding","filter","isNotNull","altBoundary","refs","floatingStyles","placement","isPositioned","middlewareData","useFloating","strategy","whileElementsMounted","args","cleanup","autoUpdate","animationFrame","elements","reference","middleware","offset","mainAxis","alignmentAxis","shift","crossAxis","limiter","limitShift","flip","size","apply","rects","availableWidth","availableHeight","anchorWidth","anchorHeight","contentStyle","floating","style","setProperty","element","transformOrigin","hide","placedSide","placedAlign","getSideAndAlignFromPlacement","handlePlaced","useCallbackRef","useLayoutEffect","arrowX","x","arrowY","y","cannotCenterArrow","centerOffset","contentZIndex","setContentZIndex","window","getComputedStyle","zIndex","setFloating","transform","minWidth","join","referenceHidden","visibility","pointerEvents","dir","onArrowChange","shouldHideArrow","animation","ARROW_NAME","OPPOSITE_SIDE","PopperArrow2","arrowProps","contentContext","baseSide","position","display","value","options","name","fn","data","isArrowHidden","noArrowAlign","start","center","end","arrowXCenter","arrowYCenter","split"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-popper/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-popper/src/popper.tsx"],"sourcesContent":["'use client';\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n} from './popper';\nexport type {\n  PopperProps,\n  PopperAnchorProps,\n  PopperContentProps,\n  PopperArrowProps,\n} from './popper';\n","import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = (typeof SIDE_OPTIONS)[number];\ntype Align = (typeof ALIGN_OPTIONS)[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  avoidCollisions?: boolean;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  updatePositionStrategy?: 'optimized' | 'always';\n  onPlaced?: () => void;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      updatePositionStrategy = 'optimized',\n      onPlaced,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === 'always',\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor,\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions &&\n          shift({\n            mainAxis: true,\n            crossAxis: false,\n            limiter: sticky === 'partial' ? limitShift() : undefined,\n            ...detectOverflowOptions,\n          }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty('--radix-popper-available-width', `${availableWidth}px`);\n            contentStyle.setProperty('--radix-popper-available-height', `${availableHeight}px`);\n            contentStyle.setProperty('--radix-popper-anchor-width', `${anchorWidth}px`);\n            contentStyle.setProperty('--radix-popper-anchor-height', `${anchorHeight}px`);\n          },\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: 'referenceHidden', ...detectOverflowOptions }),\n      ],\n    });\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    return (\n      <div\n        ref={refs.setFloating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...(middlewareData.hide?.referenceHidden && {\n            visibility: 'hidden',\n            pointerEvents: 'none',\n          }),\n        }}\n        // Floating UI interally calculates logical alignment based the `dir` attribute on\n        // the reference/floating node, we must add this attribute here to ensure\n        // this is calculated when portalled as well as inline.\n        dir={props.dir}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            ref={composedRefs}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPositioned ? 'none' : undefined,\n            }}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = React.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}