{"ast":null,"code":"\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/use-controllable-state/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  useControllableState: () => useControllableState\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/use-controllable-state/src/useControllableState.tsx\nvar React = __toESM(require(\"react\"));\nvar import_react_use_callback_ref = require(\"@radix-ui/react-use-callback-ref\");\nfunction useControllableState({\n  prop,\n  defaultProp,\n  onChange = () => {}\n}) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({\n    defaultProp,\n    onChange\n  });\n  const isControlled = prop !== void 0;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = (0, import_react_use_callback_ref.useCallbackRef)(onChange);\n  const setValue = React.useCallback(nextValue => {\n    if (isControlled) {\n      const setter = nextValue;\n      const value2 = typeof nextValue === \"function\" ? setter(prop) : nextValue;\n      if (value2 !== prop) handleChange(value2);\n    } else {\n      setUncontrolledProp(nextValue);\n    }\n  }, [isControlled, prop, setUncontrolledProp, handleChange]);\n  return [value, setValue];\n}\nfunction useUncontrolledState({\n  defaultProp,\n  onChange\n}) {\n  const uncontrolledState = React.useState(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = (0, import_react_use_callback_ref.useCallbackRef)(onChange);\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n  return uncontrolledState;\n}","map":{"version":3,"names":["src_exports","__export","useControllableState","module","exports","__toCommonJS","React","__toESM","require","import_react_use_callback_ref","prop","defaultProp","onChange","uncontrolledProp","setUncontrolledProp","useUncontrolledState","isControlled","value","handleChange","useCallbackRef","setValue","useCallback","nextValue","setter","value2","uncontrolledState","useState","prevValueRef","useRef","useEffect","current"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-use-controllable-state/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-use-controllable-state/src/useControllableState.tsx"],"sourcesContent":["export { useControllableState } from './useControllableState';\n","import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,oBAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAL,WAAA;;;ACAA,IAAAM,KAAA,GAAuBC,OAAA,CAAAC,OAAA;AACvB,IAAAC,6BAAA,GAA+BD,OAAA;AAU/B,SAASN,qBAAwB;EAC/BQ,IAAA;EACAC,WAAA;EACAC,QAAA,GAAWA,CAAA,KAAM,CAAC;AACpB,GAAkC;EAChC,MAAM,CAACC,gBAAA,EAAkBC,mBAAmB,IAAIC,oBAAA,CAAqB;IAAEJ,WAAA;IAAaC;EAAS,CAAC;EAC9F,MAAMI,YAAA,GAAeN,IAAA,KAAS;EAC9B,MAAMO,KAAA,GAAQD,YAAA,GAAeN,IAAA,GAAOG,gBAAA;EACpC,MAAMK,YAAA,OAAeT,6BAAA,CAAAU,cAAA,EAAeP,QAAQ;EAE5C,MAAMQ,QAAA,GAAsEd,KAAA,CAAAe,WAAA,CACzEC,SAAA,IAAc;IACb,IAAIN,YAAA,EAAc;MAChB,MAAMO,MAAA,GAASD,SAAA;MACf,MAAME,MAAA,GAAQ,OAAOF,SAAA,KAAc,aAAaC,MAAA,CAAOb,IAAI,IAAIY,SAAA;MAC/D,IAAIE,MAAA,KAAUd,IAAA,EAAMQ,YAAA,CAAaM,MAAU;IAC7C,OAAO;MACLV,mBAAA,CAAoBQ,SAAS;IAC/B;EACF,GACA,CAACN,YAAA,EAAcN,IAAA,EAAMI,mBAAA,EAAqBI,YAAY,CACxD;EAEA,OAAO,CAACD,KAAA,EAAOG,QAAQ;AACzB;AAEA,SAASL,qBAAwB;EAC/BJ,WAAA;EACAC;AACF,GAAgD;EAC9C,MAAMa,iBAAA,GAA0BnB,KAAA,CAAAoB,QAAA,CAAwBf,WAAW;EACnE,MAAM,CAACM,KAAK,IAAIQ,iBAAA;EAChB,MAAME,YAAA,GAAqBrB,KAAA,CAAAsB,MAAA,CAAOX,KAAK;EACvC,MAAMC,YAAA,OAAeT,6BAAA,CAAAU,cAAA,EAAeP,QAAQ;EAEtCN,KAAA,CAAAuB,SAAA,CAAU,MAAM;IACpB,IAAIF,YAAA,CAAaG,OAAA,KAAYb,KAAA,EAAO;MAClCC,YAAA,CAAaD,KAAU;MACvBU,YAAA,CAAaG,OAAA,GAAUb,KAAA;IACzB;EACF,GAAG,CAACA,KAAA,EAAOU,YAAA,EAAcT,YAAY,CAAC;EAEtC,OAAOO,iBAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}