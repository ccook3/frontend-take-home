{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/context-menu/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Arrow: () => Arrow2,\n  CheckboxItem: () => CheckboxItem2,\n  Content: () => Content2,\n  ContextMenu: () => ContextMenu,\n  ContextMenuArrow: () => ContextMenuArrow,\n  ContextMenuCheckboxItem: () => ContextMenuCheckboxItem,\n  ContextMenuContent: () => ContextMenuContent,\n  ContextMenuGroup: () => ContextMenuGroup,\n  ContextMenuItem: () => ContextMenuItem,\n  ContextMenuItemIndicator: () => ContextMenuItemIndicator,\n  ContextMenuLabel: () => ContextMenuLabel,\n  ContextMenuPortal: () => ContextMenuPortal,\n  ContextMenuRadioGroup: () => ContextMenuRadioGroup,\n  ContextMenuRadioItem: () => ContextMenuRadioItem,\n  ContextMenuSeparator: () => ContextMenuSeparator,\n  ContextMenuSub: () => ContextMenuSub,\n  ContextMenuSubContent: () => ContextMenuSubContent,\n  ContextMenuSubTrigger: () => ContextMenuSubTrigger,\n  ContextMenuTrigger: () => ContextMenuTrigger,\n  Group: () => Group2,\n  Item: () => Item2,\n  ItemIndicator: () => ItemIndicator2,\n  Label: () => Label2,\n  Portal: () => Portal2,\n  RadioGroup: () => RadioGroup2,\n  RadioItem: () => RadioItem2,\n  Root: () => Root2,\n  Separator: () => Separator2,\n  Sub: () => Sub2,\n  SubContent: () => SubContent2,\n  SubTrigger: () => SubTrigger2,\n  Trigger: () => Trigger,\n  createContextMenuScope: () => createContextMenuScope\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/context-menu/src/context-menu.tsx\nvar React = __toESM(require(\"react\"));\nvar import_primitive = require(\"@radix-ui/primitive\");\nvar import_react_context = require(\"@radix-ui/react-context\");\nvar import_react_primitive = require(\"@radix-ui/react-primitive\");\nvar MenuPrimitive = __toESM(require(\"@radix-ui/react-menu\"));\nvar import_react_menu = require(\"@radix-ui/react-menu\");\nvar import_react_use_callback_ref = require(\"@radix-ui/react-use-callback-ref\");\nvar import_react_use_controllable_state = require(\"@radix-ui/react-use-controllable-state\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar CONTEXT_MENU_NAME = \"ContextMenu\";\nvar [createContextMenuContext, createContextMenuScope] = (0, import_react_context.createContextScope)(CONTEXT_MENU_NAME, [import_react_menu.createMenuScope]);\nvar useMenuScope = (0, import_react_menu.createMenuScope)();\nvar [ContextMenuProvider, useContextMenuContext] = createContextMenuContext(CONTEXT_MENU_NAME);\nvar ContextMenu = props => {\n  const {\n    __scopeContextMenu,\n    children,\n    onOpenChange,\n    dir,\n    modal = true\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const handleOpenChangeProp = (0, import_react_use_callback_ref.useCallbackRef)(onOpenChange);\n  const handleOpenChange = React.useCallback(open2 => {\n    setOpen(open2);\n    handleOpenChangeProp(open2);\n  }, [handleOpenChangeProp]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(ContextMenuProvider, {\n    scope: __scopeContextMenu,\n    open,\n    onOpenChange: handleOpenChange,\n    modal,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.Root, {\n      ...menuScope,\n      dir,\n      open,\n      onOpenChange: handleOpenChange,\n      modal,\n      children\n    })\n  });\n};\nContextMenu.displayName = CONTEXT_MENU_NAME;\nvar TRIGGER_NAME = \"ContextMenuTrigger\";\nvar ContextMenuTrigger = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    disabled = false,\n    ...triggerProps\n  } = props;\n  const context = useContextMenuContext(TRIGGER_NAME, __scopeContextMenu);\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const pointRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const virtualRef = React.useRef({\n    getBoundingClientRect: () => DOMRect.fromRect({\n      width: 0,\n      height: 0,\n      ...pointRef.current\n    })\n  });\n  const longPressTimerRef = React.useRef(0);\n  const clearLongPress = React.useCallback(() => window.clearTimeout(longPressTimerRef.current), []);\n  const handleOpen = event => {\n    pointRef.current = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    context.onOpenChange(true);\n  };\n  React.useEffect(() => clearLongPress, [clearLongPress]);\n  React.useEffect(() => void (disabled && clearLongPress()), [disabled, clearLongPress]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {\n    children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.Anchor, {\n      ...menuScope,\n      virtualRef\n    }), /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.span, {\n      \"data-state\": context.open ? \"open\" : \"closed\",\n      \"data-disabled\": disabled ? \"\" : void 0,\n      ...triggerProps,\n      ref: forwardedRef,\n      style: {\n        WebkitTouchCallout: \"none\",\n        ...props.style\n      },\n      onContextMenu: disabled ? props.onContextMenu : (0, import_primitive.composeEventHandlers)(props.onContextMenu, event => {\n        clearLongPress();\n        handleOpen(event);\n        event.preventDefault();\n      }),\n      onPointerDown: disabled ? props.onPointerDown : (0, import_primitive.composeEventHandlers)(props.onPointerDown, whenTouchOrPen(event => {\n        clearLongPress();\n        longPressTimerRef.current = window.setTimeout(() => handleOpen(event), 700);\n      })),\n      onPointerMove: disabled ? props.onPointerMove : (0, import_primitive.composeEventHandlers)(props.onPointerMove, whenTouchOrPen(clearLongPress)),\n      onPointerCancel: disabled ? props.onPointerCancel : (0, import_primitive.composeEventHandlers)(props.onPointerCancel, whenTouchOrPen(clearLongPress)),\n      onPointerUp: disabled ? props.onPointerUp : (0, import_primitive.composeEventHandlers)(props.onPointerUp, whenTouchOrPen(clearLongPress))\n    })]\n  });\n});\nContextMenuTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"ContextMenuPortal\";\nvar ContextMenuPortal = props => {\n  const {\n    __scopeContextMenu,\n    ...portalProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.Portal, {\n    ...menuScope,\n    ...portalProps\n  });\n};\nContextMenuPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"ContextMenuContent\";\nvar ContextMenuContent = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...contentProps\n  } = props;\n  const context = useContextMenuContext(CONTENT_NAME, __scopeContextMenu);\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const hasInteractedOutsideRef = React.useRef(false);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.Content, {\n    ...menuScope,\n    ...contentProps,\n    ref: forwardedRef,\n    side: \"right\",\n    sideOffset: 2,\n    align: \"start\",\n    onCloseAutoFocus: event => {\n      props.onCloseAutoFocus?.(event);\n      if (!event.defaultPrevented && hasInteractedOutsideRef.current) {\n        event.preventDefault();\n      }\n      hasInteractedOutsideRef.current = false;\n    },\n    onInteractOutside: event => {\n      props.onInteractOutside?.(event);\n      if (!event.defaultPrevented && !context.modal) hasInteractedOutsideRef.current = true;\n    },\n    style: {\n      ...props.style,\n      // re-namespace exposed content custom properties\n      ...{\n        \"--radix-context-menu-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n        \"--radix-context-menu-content-available-width\": \"var(--radix-popper-available-width)\",\n        \"--radix-context-menu-content-available-height\": \"var(--radix-popper-available-height)\",\n        \"--radix-context-menu-trigger-width\": \"var(--radix-popper-anchor-width)\",\n        \"--radix-context-menu-trigger-height\": \"var(--radix-popper-anchor-height)\"\n      }\n    }\n  });\n});\nContextMenuContent.displayName = CONTENT_NAME;\nvar GROUP_NAME = \"ContextMenuGroup\";\nvar ContextMenuGroup = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...groupProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.Group, {\n    ...menuScope,\n    ...groupProps,\n    ref: forwardedRef\n  });\n});\nContextMenuGroup.displayName = GROUP_NAME;\nvar LABEL_NAME = \"ContextMenuLabel\";\nvar ContextMenuLabel = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...labelProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.Label, {\n    ...menuScope,\n    ...labelProps,\n    ref: forwardedRef\n  });\n});\nContextMenuLabel.displayName = LABEL_NAME;\nvar ITEM_NAME = \"ContextMenuItem\";\nvar ContextMenuItem = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...itemProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.Item, {\n    ...menuScope,\n    ...itemProps,\n    ref: forwardedRef\n  });\n});\nContextMenuItem.displayName = ITEM_NAME;\nvar CHECKBOX_ITEM_NAME = \"ContextMenuCheckboxItem\";\nvar ContextMenuCheckboxItem = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...checkboxItemProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.CheckboxItem, {\n    ...menuScope,\n    ...checkboxItemProps,\n    ref: forwardedRef\n  });\n});\nContextMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\nvar RADIO_GROUP_NAME = \"ContextMenuRadioGroup\";\nvar ContextMenuRadioGroup = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...radioGroupProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.RadioGroup, {\n    ...menuScope,\n    ...radioGroupProps,\n    ref: forwardedRef\n  });\n});\nContextMenuRadioGroup.displayName = RADIO_GROUP_NAME;\nvar RADIO_ITEM_NAME = \"ContextMenuRadioItem\";\nvar ContextMenuRadioItem = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...radioItemProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.RadioItem, {\n    ...menuScope,\n    ...radioItemProps,\n    ref: forwardedRef\n  });\n});\nContextMenuRadioItem.displayName = RADIO_ITEM_NAME;\nvar INDICATOR_NAME = \"ContextMenuItemIndicator\";\nvar ContextMenuItemIndicator = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...itemIndicatorProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.ItemIndicator, {\n    ...menuScope,\n    ...itemIndicatorProps,\n    ref: forwardedRef\n  });\n});\nContextMenuItemIndicator.displayName = INDICATOR_NAME;\nvar SEPARATOR_NAME = \"ContextMenuSeparator\";\nvar ContextMenuSeparator = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...separatorProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.Separator, {\n    ...menuScope,\n    ...separatorProps,\n    ref: forwardedRef\n  });\n});\nContextMenuSeparator.displayName = SEPARATOR_NAME;\nvar ARROW_NAME = \"ContextMenuArrow\";\nvar ContextMenuArrow = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...arrowProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.Arrow, {\n    ...menuScope,\n    ...arrowProps,\n    ref: forwardedRef\n  });\n});\nContextMenuArrow.displayName = ARROW_NAME;\nvar SUB_NAME = \"ContextMenuSub\";\nvar ContextMenuSub = props => {\n  const {\n    __scopeContextMenu,\n    children,\n    onOpenChange,\n    open: openProp,\n    defaultOpen\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const [open, setOpen] = (0, import_react_use_controllable_state.useControllableState)({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.Sub, {\n    ...menuScope,\n    open,\n    onOpenChange: setOpen,\n    children\n  });\n};\nContextMenuSub.displayName = SUB_NAME;\nvar SUB_TRIGGER_NAME = \"ContextMenuSubTrigger\";\nvar ContextMenuSubTrigger = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...triggerItemProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.SubTrigger, {\n    ...menuScope,\n    ...triggerItemProps,\n    ref: forwardedRef\n  });\n});\nContextMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\nvar SUB_CONTENT_NAME = \"ContextMenuSubContent\";\nvar ContextMenuSubContent = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeContextMenu,\n    ...subContentProps\n  } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuPrimitive.SubContent, {\n    ...menuScope,\n    ...subContentProps,\n    ref: forwardedRef,\n    style: {\n      ...props.style,\n      // re-namespace exposed content custom properties\n      ...{\n        \"--radix-context-menu-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n        \"--radix-context-menu-content-available-width\": \"var(--radix-popper-available-width)\",\n        \"--radix-context-menu-content-available-height\": \"var(--radix-popper-available-height)\",\n        \"--radix-context-menu-trigger-width\": \"var(--radix-popper-anchor-width)\",\n        \"--radix-context-menu-trigger-height\": \"var(--radix-popper-anchor-height)\"\n      }\n    }\n  });\n});\nContextMenuSubContent.displayName = SUB_CONTENT_NAME;\nfunction whenTouchOrPen(handler) {\n  return event => event.pointerType !== \"mouse\" ? handler(event) : void 0;\n}\nvar Root2 = ContextMenu;\nvar Trigger = ContextMenuTrigger;\nvar Portal2 = ContextMenuPortal;\nvar Content2 = ContextMenuContent;\nvar Group2 = ContextMenuGroup;\nvar Label2 = ContextMenuLabel;\nvar Item2 = ContextMenuItem;\nvar CheckboxItem2 = ContextMenuCheckboxItem;\nvar RadioGroup2 = ContextMenuRadioGroup;\nvar RadioItem2 = ContextMenuRadioItem;\nvar ItemIndicator2 = ContextMenuItemIndicator;\nvar Separator2 = ContextMenuSeparator;\nvar Arrow2 = ContextMenuArrow;\nvar Sub2 = ContextMenuSub;\nvar SubTrigger2 = ContextMenuSubTrigger;\nvar SubContent2 = ContextMenuSubContent;","map":{"version":3,"names":["src_exports","__export","Arrow","Arrow2","CheckboxItem","CheckboxItem2","Content","Content2","ContextMenu","ContextMenuArrow","ContextMenuCheckboxItem","ContextMenuContent","ContextMenuGroup","ContextMenuItem","ContextMenuItemIndicator","ContextMenuLabel","ContextMenuPortal","ContextMenuRadioGroup","ContextMenuRadioItem","ContextMenuSeparator","ContextMenuSub","ContextMenuSubContent","ContextMenuSubTrigger","ContextMenuTrigger","Group","Group2","Item","Item2","ItemIndicator","ItemIndicator2","Label","Label2","Portal","Portal2","RadioGroup","RadioGroup2","RadioItem","RadioItem2","Root","Root2","Separator","Separator2","Sub","Sub2","SubContent","SubContent2","SubTrigger","SubTrigger2","Trigger","createContextMenuScope","module","exports","__toCommonJS","React","__toESM","require","import_primitive","import_react_context","import_react_primitive","MenuPrimitive","import_react_menu","import_react_use_callback_ref","import_react_use_controllable_state","import_jsx_runtime","CONTEXT_MENU_NAME","createContextMenuContext","createContextScope","createMenuScope","useMenuScope","ContextMenuProvider","useContextMenuContext","props","__scopeContextMenu","children","onOpenChange","dir","modal","open","setOpen","useState","menuScope","handleOpenChangeProp","useCallbackRef","handleOpenChange","useCallback","open2","jsx","scope","displayName","TRIGGER_NAME","forwardRef","forwardedRef","disabled","triggerProps","context","pointRef","useRef","x","y","virtualRef","getBoundingClientRect","DOMRect","fromRect","width","height","current","longPressTimerRef","clearLongPress","window","clearTimeout","handleOpen","event","clientX","clientY","useEffect","jsxs","Fragment","Anchor","Primitive","span","ref","style","WebkitTouchCallout","onContextMenu","composeEventHandlers","preventDefault","onPointerDown","whenTouchOrPen","setTimeout","onPointerMove","onPointerCancel","onPointerUp","PORTAL_NAME","portalProps","CONTENT_NAME","contentProps","hasInteractedOutsideRef","side","sideOffset","align","onCloseAutoFocus","defaultPrevented","onInteractOutside","GROUP_NAME","groupProps","LABEL_NAME","labelProps","ITEM_NAME","itemProps","CHECKBOX_ITEM_NAME","checkboxItemProps","RADIO_GROUP_NAME","radioGroupProps","RADIO_ITEM_NAME","radioItemProps","INDICATOR_NAME","itemIndicatorProps","SEPARATOR_NAME","separatorProps","ARROW_NAME","arrowProps","SUB_NAME","openProp","defaultOpen","useControllableState","prop","defaultProp","onChange","SUB_TRIGGER_NAME","triggerItemProps","SUB_CONTENT_NAME","subContentProps","handler","pointerType"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-context-menu/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-context-menu/src/context-menu.tsx"],"sourcesContent":["'use client';\nexport {\n  createContextMenuScope,\n  //\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuPortal,\n  ContextMenuContent,\n  ContextMenuGroup,\n  ContextMenuLabel,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuItemIndicator,\n  ContextMenuSeparator,\n  ContextMenuArrow,\n  ContextMenuSub,\n  ContextMenuSubTrigger,\n  ContextMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './context-menu';\nexport type {\n  ContextMenuProps,\n  ContextMenuTriggerProps,\n  ContextMenuPortalProps,\n  ContextMenuContentProps,\n  ContextMenuGroupProps,\n  ContextMenuLabelProps,\n  ContextMenuItemProps,\n  ContextMenuCheckboxItemProps,\n  ContextMenuRadioGroupProps,\n  ContextMenuRadioItemProps,\n  ContextMenuItemIndicatorProps,\n  ContextMenuSeparatorProps,\n  ContextMenuArrowProps,\n  ContextMenuSubProps,\n  ContextMenuSubTriggerProps,\n  ContextMenuSubContentProps,\n} from './context-menu';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\ntype Point = { x: number; y: number };\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTEXT_MENU_NAME = 'ContextMenu';\n\ntype ScopedProps<P> = P & { __scopeContextMenu?: Scope };\nconst [createContextMenuContext, createContextMenuScope] = createContextScope(CONTEXT_MENU_NAME, [\n  createMenuScope,\n]);\nconst useMenuScope = createMenuScope();\n\ntype ContextMenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  modal: boolean;\n};\n\nconst [ContextMenuProvider, useContextMenuContext] =\n  createContextMenuContext<ContextMenuContextValue>(CONTEXT_MENU_NAME);\n\ninterface ContextMenuProps {\n  children?: React.ReactNode;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst ContextMenu: React.FC<ContextMenuProps> = (props: ScopedProps<ContextMenuProps>) => {\n  const { __scopeContextMenu, children, onOpenChange, dir, modal = true } = props;\n  const [open, setOpen] = React.useState(false);\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const handleOpenChangeProp = useCallbackRef(onOpenChange);\n\n  const handleOpenChange = React.useCallback(\n    (open: boolean) => {\n      setOpen(open);\n      handleOpenChangeProp(open);\n    },\n    [handleOpenChangeProp]\n  );\n\n  return (\n    <ContextMenuProvider\n      scope={__scopeContextMenu}\n      open={open}\n      onOpenChange={handleOpenChange}\n      modal={modal}\n    >\n      <MenuPrimitive.Root\n        {...menuScope}\n        dir={dir}\n        open={open}\n        onOpenChange={handleOpenChange}\n        modal={modal}\n      >\n        {children}\n      </MenuPrimitive.Root>\n    </ContextMenuProvider>\n  );\n};\n\nContextMenu.displayName = CONTEXT_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'ContextMenuTrigger';\n\ntype ContextMenuTriggerElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface ContextMenuTriggerProps extends PrimitiveSpanProps {\n  disabled?: boolean;\n}\n\nconst ContextMenuTrigger = React.forwardRef<ContextMenuTriggerElement, ContextMenuTriggerProps>(\n  (props: ScopedProps<ContextMenuTriggerProps>, forwardedRef) => {\n    const { __scopeContextMenu, disabled = false, ...triggerProps } = props;\n    const context = useContextMenuContext(TRIGGER_NAME, __scopeContextMenu);\n    const menuScope = useMenuScope(__scopeContextMenu);\n    const pointRef = React.useRef<Point>({ x: 0, y: 0 });\n    const virtualRef = React.useRef({\n      getBoundingClientRect: () => DOMRect.fromRect({ width: 0, height: 0, ...pointRef.current }),\n    });\n    const longPressTimerRef = React.useRef(0);\n    const clearLongPress = React.useCallback(\n      () => window.clearTimeout(longPressTimerRef.current),\n      []\n    );\n    const handleOpen = (event: React.MouseEvent | React.PointerEvent) => {\n      pointRef.current = { x: event.clientX, y: event.clientY };\n      context.onOpenChange(true);\n    };\n\n    React.useEffect(() => clearLongPress, [clearLongPress]);\n    React.useEffect(() => void (disabled && clearLongPress()), [disabled, clearLongPress]);\n\n    return (\n      <>\n        <MenuPrimitive.Anchor {...menuScope} virtualRef={virtualRef} />\n        <Primitive.span\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          {...triggerProps}\n          ref={forwardedRef}\n          // prevent iOS context menu from appearing\n          style={{ WebkitTouchCallout: 'none', ...props.style }}\n          // if trigger is disabled, enable the native Context Menu\n          onContextMenu={\n            disabled\n              ? props.onContextMenu\n              : composeEventHandlers(props.onContextMenu, (event) => {\n                  // clearing the long press here because some platforms already support\n                  // long press to trigger a `contextmenu` event\n                  clearLongPress();\n                  handleOpen(event);\n                  event.preventDefault();\n                })\n          }\n          onPointerDown={\n            disabled\n              ? props.onPointerDown\n              : composeEventHandlers(\n                  props.onPointerDown,\n                  whenTouchOrPen((event) => {\n                    // clear the long press here in case there's multiple touch points\n                    clearLongPress();\n                    longPressTimerRef.current = window.setTimeout(() => handleOpen(event), 700);\n                  })\n                )\n          }\n          onPointerMove={\n            disabled\n              ? props.onPointerMove\n              : composeEventHandlers(props.onPointerMove, whenTouchOrPen(clearLongPress))\n          }\n          onPointerCancel={\n            disabled\n              ? props.onPointerCancel\n              : composeEventHandlers(props.onPointerCancel, whenTouchOrPen(clearLongPress))\n          }\n          onPointerUp={\n            disabled\n              ? props.onPointerUp\n              : composeEventHandlers(props.onPointerUp, whenTouchOrPen(clearLongPress))\n          }\n        />\n      </>\n    );\n  }\n);\n\nContextMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'ContextMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface ContextMenuPortalProps extends MenuPortalProps {}\n\nconst ContextMenuPortal: React.FC<ContextMenuPortalProps> = (\n  props: ScopedProps<ContextMenuPortalProps>\n) => {\n  const { __scopeContextMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nContextMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'ContextMenuContent';\n\ntype ContextMenuContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface ContextMenuContentProps\n  extends Omit<MenuContentProps, 'onEntryFocus' | 'side' | 'sideOffset' | 'align'> {}\n\nconst ContextMenuContent = React.forwardRef<ContextMenuContentElement, ContextMenuContentProps>(\n  (props: ScopedProps<ContextMenuContentProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...contentProps } = props;\n    const context = useContextMenuContext(CONTENT_NAME, __scopeContextMenu);\n    const menuScope = useMenuScope(__scopeContextMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        side=\"right\"\n        sideOffset={2}\n        align=\"start\"\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented && hasInteractedOutsideRef.current) {\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented && !context.modal) hasInteractedOutsideRef.current = true;\n        }}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-context-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n            '--radix-context-menu-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-context-menu-content-available-height': 'var(--radix-popper-available-height)',\n            '--radix-context-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-context-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nContextMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'ContextMenuGroup';\n\ntype ContextMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface ContextMenuGroupProps extends MenuGroupProps {}\n\nconst ContextMenuGroup = React.forwardRef<ContextMenuGroupElement, ContextMenuGroupProps>(\n  (props: ScopedProps<ContextMenuGroupProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'ContextMenuLabel';\n\ntype ContextMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface ContextMenuLabelProps extends MenuLabelProps {}\n\nconst ContextMenuLabel = React.forwardRef<ContextMenuLabelElement, ContextMenuLabelProps>(\n  (props: ScopedProps<ContextMenuLabelProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'ContextMenuItem';\n\ntype ContextMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface ContextMenuItemProps extends MenuItemProps {}\n\nconst ContextMenuItem = React.forwardRef<ContextMenuItemElement, ContextMenuItemProps>(\n  (props: ScopedProps<ContextMenuItemProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'ContextMenuCheckboxItem';\n\ntype ContextMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface ContextMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  ContextMenuCheckboxItemElement,\n  ContextMenuCheckboxItemProps\n>((props: ScopedProps<ContextMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nContextMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'ContextMenuRadioGroup';\n\ntype ContextMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface ContextMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst ContextMenuRadioGroup = React.forwardRef<\n  ContextMenuRadioGroupElement,\n  ContextMenuRadioGroupProps\n>((props: ScopedProps<ContextMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nContextMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'ContextMenuRadioItem';\n\ntype ContextMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface ContextMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst ContextMenuRadioItem = React.forwardRef<\n  ContextMenuRadioItemElement,\n  ContextMenuRadioItemProps\n>((props: ScopedProps<ContextMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nContextMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'ContextMenuItemIndicator';\n\ntype ContextMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface ContextMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst ContextMenuItemIndicator = React.forwardRef<\n  ContextMenuItemIndicatorElement,\n  ContextMenuItemIndicatorProps\n>((props: ScopedProps<ContextMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nContextMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'ContextMenuSeparator';\n\ntype ContextMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface ContextMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst ContextMenuSeparator = React.forwardRef<\n  ContextMenuSeparatorElement,\n  ContextMenuSeparatorProps\n>((props: ScopedProps<ContextMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nContextMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'ContextMenuArrow';\n\ntype ContextMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface ContextMenuArrowProps extends MenuArrowProps {}\n\nconst ContextMenuArrow = React.forwardRef<ContextMenuArrowElement, ContextMenuArrowProps>(\n  (props: ScopedProps<ContextMenuArrowProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'ContextMenuSub';\n\ninterface ContextMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst ContextMenuSub: React.FC<ContextMenuSubProps> = (props: ScopedProps<ContextMenuSubProps>) => {\n  const { __scopeContextMenu, children, onOpenChange, open: openProp, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\nContextMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'ContextMenuSubTrigger';\n\ntype ContextMenuSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface ContextMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  ContextMenuSubTriggerElement,\n  ContextMenuSubTriggerProps\n>((props: ScopedProps<ContextMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...triggerItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...triggerItemProps} ref={forwardedRef} />;\n});\n\nContextMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'ContextMenuSubContent';\n\ntype ContextMenuSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface ContextMenuSubContentProps extends MenuSubContentProps {}\n\nconst ContextMenuSubContent = React.forwardRef<\n  ContextMenuSubContentElement,\n  ContextMenuSubContentProps\n>((props: ScopedProps<ContextMenuSubContentProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-context-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-context-menu-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-context-menu-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-context-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-context-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nContextMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction whenTouchOrPen<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType !== 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = ContextMenu;\nconst Trigger = ContextMenuTrigger;\nconst Portal = ContextMenuPortal;\nconst Content = ContextMenuContent;\nconst Group = ContextMenuGroup;\nconst Label = ContextMenuLabel;\nconst Item = ContextMenuItem;\nconst CheckboxItem = ContextMenuCheckboxItem;\nconst RadioGroup = ContextMenuRadioGroup;\nconst RadioItem = ContextMenuRadioItem;\nconst ItemIndicator = ContextMenuItemIndicator;\nconst Separator = ContextMenuSeparator;\nconst Arrow = ContextMenuArrow;\nconst Sub = ContextMenuSub;\nconst SubTrigger = ContextMenuSubTrigger;\nconst SubContent = ContextMenuSubContent;\n\nexport {\n  createContextMenuScope,\n  //\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuPortal,\n  ContextMenuContent,\n  ContextMenuGroup,\n  ContextMenuLabel,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuItemIndicator,\n  ContextMenuSeparator,\n  ContextMenuArrow,\n  ContextMenuSub,\n  ContextMenuSubTrigger,\n  ContextMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  ContextMenuProps,\n  ContextMenuTriggerProps,\n  ContextMenuPortalProps,\n  ContextMenuContentProps,\n  ContextMenuGroupProps,\n  ContextMenuLabelProps,\n  ContextMenuItemProps,\n  ContextMenuCheckboxItemProps,\n  ContextMenuRadioGroupProps,\n  ContextMenuRadioItemProps,\n  ContextMenuItemIndicatorProps,\n  ContextMenuSeparatorProps,\n  ContextMenuArrowProps,\n  ContextMenuSubProps,\n  ContextMenuSubTriggerProps,\n  ContextMenuSubContentProps,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}