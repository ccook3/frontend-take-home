{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/avatar/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Avatar: () => Avatar,\n  AvatarFallback: () => AvatarFallback,\n  AvatarImage: () => AvatarImage,\n  Fallback: () => Fallback,\n  Image: () => Image,\n  Root: () => Root,\n  createAvatarScope: () => createAvatarScope\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/avatar/src/avatar.tsx\nvar React = __toESM(require(\"react\"));\nvar import_react_context = require(\"@radix-ui/react-context\");\nvar import_react_use_callback_ref = require(\"@radix-ui/react-use-callback-ref\");\nvar import_react_use_layout_effect = require(\"@radix-ui/react-use-layout-effect\");\nvar import_react_primitive = require(\"@radix-ui/react-primitive\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar AVATAR_NAME = \"Avatar\";\nvar [createAvatarContext, createAvatarScope] = (0, import_react_context.createContextScope)(AVATAR_NAME);\nvar [AvatarProvider, useAvatarContext] = createAvatarContext(AVATAR_NAME);\nvar Avatar = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeAvatar,\n    ...avatarProps\n  } = props;\n  const [imageLoadingStatus, setImageLoadingStatus] = React.useState(\"idle\");\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(AvatarProvider, {\n    scope: __scopeAvatar,\n    imageLoadingStatus,\n    onImageLoadingStatusChange: setImageLoadingStatus,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.span, {\n      ...avatarProps,\n      ref: forwardedRef\n    })\n  });\n});\nAvatar.displayName = AVATAR_NAME;\nvar IMAGE_NAME = \"AvatarImage\";\nvar AvatarImage = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeAvatar,\n    src,\n    onLoadingStatusChange = () => {},\n    ...imageProps\n  } = props;\n  const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n  const imageLoadingStatus = useImageLoadingStatus(src, imageProps.referrerPolicy);\n  const handleLoadingStatusChange = (0, import_react_use_callback_ref.useCallbackRef)(status => {\n    onLoadingStatusChange(status);\n    context.onImageLoadingStatusChange(status);\n  });\n  (0, import_react_use_layout_effect.useLayoutEffect)(() => {\n    if (imageLoadingStatus !== \"idle\") {\n      handleLoadingStatusChange(imageLoadingStatus);\n    }\n  }, [imageLoadingStatus, handleLoadingStatusChange]);\n  return imageLoadingStatus === \"loaded\" ? /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.img, {\n    ...imageProps,\n    ref: forwardedRef,\n    src\n  }) : null;\n});\nAvatarImage.displayName = IMAGE_NAME;\nvar FALLBACK_NAME = \"AvatarFallback\";\nvar AvatarFallback = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeAvatar,\n    delayMs,\n    ...fallbackProps\n  } = props;\n  const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n  const [canRender, setCanRender] = React.useState(delayMs === void 0);\n  React.useEffect(() => {\n    if (delayMs !== void 0) {\n      const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n      return () => window.clearTimeout(timerId);\n    }\n  }, [delayMs]);\n  return canRender && context.imageLoadingStatus !== \"loaded\" ? /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.span, {\n    ...fallbackProps,\n    ref: forwardedRef\n  }) : null;\n});\nAvatarFallback.displayName = FALLBACK_NAME;\nfunction useImageLoadingStatus(src, referrerPolicy) {\n  const [loadingStatus, setLoadingStatus] = React.useState(\"idle\");\n  (0, import_react_use_layout_effect.useLayoutEffect)(() => {\n    if (!src) {\n      setLoadingStatus(\"error\");\n      return;\n    }\n    let isMounted = true;\n    const image = new window.Image();\n    const updateStatus = status => () => {\n      if (!isMounted) return;\n      setLoadingStatus(status);\n    };\n    setLoadingStatus(\"loading\");\n    image.onload = updateStatus(\"loaded\");\n    image.onerror = updateStatus(\"error\");\n    image.src = src;\n    if (referrerPolicy) {\n      image.referrerPolicy = referrerPolicy;\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [src, referrerPolicy]);\n  return loadingStatus;\n}\nvar Root = Avatar;\nvar Image = AvatarImage;\nvar Fallback = AvatarFallback;","map":{"version":3,"names":["src_exports","__export","Avatar","AvatarFallback","AvatarImage","Fallback","Image","Root","createAvatarScope","module","exports","__toCommonJS","React","__toESM","require","import_react_context","import_react_use_callback_ref","import_react_use_layout_effect","import_react_primitive","import_jsx_runtime","AVATAR_NAME","createAvatarContext","createContextScope","AvatarProvider","useAvatarContext","forwardRef","props","forwardedRef","__scopeAvatar","avatarProps","imageLoadingStatus","setImageLoadingStatus","useState","jsx","scope","onImageLoadingStatusChange","children","Primitive","span","ref","displayName","IMAGE_NAME","src","onLoadingStatusChange","imageProps","context","useImageLoadingStatus","referrerPolicy","handleLoadingStatusChange","useCallbackRef","status","useLayoutEffect","img","FALLBACK_NAME","delayMs","fallbackProps","canRender","setCanRender","useEffect","timerId","window","setTimeout","clearTimeout","loadingStatus","setLoadingStatus","isMounted","image","updateStatus","onload","onerror"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-avatar/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-avatar/src/avatar.tsx"],"sourcesContent":["'use client';\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n} from './avatar';\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps } from './avatar';\n","import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Avatar\n * -----------------------------------------------------------------------------------------------*/\n\nconst AVATAR_NAME = 'Avatar';\n\ntype ScopedProps<P> = P & { __scopeAvatar?: Scope };\nconst [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\n\ntype ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error';\n\ntype AvatarContextValue = {\n  imageLoadingStatus: ImageLoadingStatus;\n  onImageLoadingStatusChange(status: ImageLoadingStatus): void;\n};\n\nconst [AvatarProvider, useAvatarContext] = createAvatarContext<AvatarContextValue>(AVATAR_NAME);\n\ntype AvatarElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface AvatarProps extends PrimitiveSpanProps {}\n\nconst Avatar = React.forwardRef<AvatarElement, AvatarProps>(\n  (props: ScopedProps<AvatarProps>, forwardedRef) => {\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n    return (\n      <AvatarProvider\n        scope={__scopeAvatar}\n        imageLoadingStatus={imageLoadingStatus}\n        onImageLoadingStatusChange={setImageLoadingStatus}\n      >\n        <Primitive.span {...avatarProps} ref={forwardedRef} />\n      </AvatarProvider>\n    );\n  }\n);\n\nAvatar.displayName = AVATAR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarImage\n * -----------------------------------------------------------------------------------------------*/\n\nconst IMAGE_NAME = 'AvatarImage';\n\ntype AvatarImageElement = React.ElementRef<typeof Primitive.img>;\ntype PrimitiveImageProps = React.ComponentPropsWithoutRef<typeof Primitive.img>;\ninterface AvatarImageProps extends PrimitiveImageProps {\n  onLoadingStatusChange?: (status: ImageLoadingStatus) => void;\n}\n\nconst AvatarImage = React.forwardRef<AvatarImageElement, AvatarImageProps>(\n  (props: ScopedProps<AvatarImageProps>, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {}, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src, imageProps.referrerPolicy);\n    const handleLoadingStatusChange = useCallbackRef((status: ImageLoadingStatus) => {\n      onLoadingStatusChange(status);\n      context.onImageLoadingStatusChange(status);\n    });\n\n    useLayoutEffect(() => {\n      if (imageLoadingStatus !== 'idle') {\n        handleLoadingStatusChange(imageLoadingStatus);\n      }\n    }, [imageLoadingStatus, handleLoadingStatusChange]);\n\n    return imageLoadingStatus === 'loaded' ? (\n      <Primitive.img {...imageProps} ref={forwardedRef} src={src} />\n    ) : null;\n  }\n);\n\nAvatarImage.displayName = IMAGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarFallback\n * -----------------------------------------------------------------------------------------------*/\n\nconst FALLBACK_NAME = 'AvatarFallback';\n\ntype AvatarFallbackElement = React.ElementRef<typeof Primitive.span>;\ninterface AvatarFallbackProps extends PrimitiveSpanProps {\n  delayMs?: number;\n}\n\nconst AvatarFallback = React.forwardRef<AvatarFallbackElement, AvatarFallbackProps>(\n  (props: ScopedProps<AvatarFallbackProps>, forwardedRef) => {\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = React.useState(delayMs === undefined);\n\n    React.useEffect(() => {\n      if (delayMs !== undefined) {\n        const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n        return () => window.clearTimeout(timerId);\n      }\n    }, [delayMs]);\n\n    return canRender && context.imageLoadingStatus !== 'loaded' ? (\n      <Primitive.span {...fallbackProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nAvatarFallback.displayName = FALLBACK_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useImageLoadingStatus(src?: string, referrerPolicy?: React.HTMLAttributeReferrerPolicy) {\n  const [loadingStatus, setLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n\n  useLayoutEffect(() => {\n    if (!src) {\n      setLoadingStatus('error');\n      return;\n    }\n\n    let isMounted = true;\n    const image = new window.Image();\n\n    const updateStatus = (status: ImageLoadingStatus) => () => {\n      if (!isMounted) return;\n      setLoadingStatus(status);\n    };\n\n    setLoadingStatus('loading');\n    image.onload = updateStatus('loaded');\n    image.onerror = updateStatus('error');\n    image.src = src;\n    if (referrerPolicy) {\n      image.referrerPolicy = referrerPolicy;\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [src, referrerPolicy]);\n\n  return loadingStatus;\n}\nconst Root = Avatar;\nconst Image = AvatarImage;\nconst Fallback = AvatarFallback;\n\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n};\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}