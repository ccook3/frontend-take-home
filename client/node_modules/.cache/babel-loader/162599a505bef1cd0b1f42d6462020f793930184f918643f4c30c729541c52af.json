{"ast":null,"code":"\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/arrow/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Arrow: () => Arrow,\n  Root: () => Root\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/arrow/src/arrow.tsx\nvar React = __toESM(require(\"react\"));\nvar import_react_primitive = require(\"@radix-ui/react-primitive\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar NAME = \"Arrow\";\nvar Arrow = React.forwardRef((props, forwardedRef) => {\n  const {\n    children,\n    width = 10,\n    height = 5,\n    ...arrowProps\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.svg, {\n    ...arrowProps,\n    ref: forwardedRef,\n    width,\n    height,\n    viewBox: \"0 0 30 10\",\n    preserveAspectRatio: \"none\",\n    children: props.asChild ? children : /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"polygon\", {\n      points: \"0,0 30,0 15,10\"\n    })\n  });\n});\nArrow.displayName = NAME;\nvar Root = Arrow;","map":{"version":3,"names":["src_exports","__export","Arrow","Root","module","exports","__toCommonJS","React","__toESM","require","import_react_primitive","import_jsx_runtime","NAME","forwardRef","props","forwardedRef","children","width","height","arrowProps","jsx","Primitive","svg","ref","viewBox","preserveAspectRatio","asChild","points","displayName"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-arrow/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-arrow/src/arrow.tsx"],"sourcesContent":["export {\n  Arrow,\n  //\n  Root,\n} from './arrow';\nexport type { ArrowProps } from './arrow';\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Arrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Arrow';\n\ntype ArrowElement = React.ElementRef<typeof Primitive.svg>;\ntype PrimitiveSvgProps = React.ComponentPropsWithoutRef<typeof Primitive.svg>;\ninterface ArrowProps extends PrimitiveSvgProps {}\n\nconst Arrow = React.forwardRef<ArrowElement, ArrowProps>((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return (\n    <Primitive.svg\n      {...arrowProps}\n      ref={forwardedRef}\n      width={width}\n      height={height}\n      viewBox=\"0 0 30 10\"\n      preserveAspectRatio=\"none\"\n    >\n      {/* We use their children if they're slotting to replace the whole svg */}\n      {props.asChild ? children : <polygon points=\"0,0 30,0 15,10\" />}\n    </Primitive.svg>\n  );\n});\n\nArrow.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Arrow;\n\nexport {\n  Arrow,\n  //\n  Root,\n};\nexport type { ArrowProps };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,KAAA,EAAAA,CAAA,KAAAA,KAAA;EAAAC,IAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAN,WAAA;;;ACAA,IAAAO,KAAA,GAAuBC,OAAA,CAAAC,OAAA;AACvB,IAAAC,sBAAA,GAA0BD,OAAA;AAwBQ,IAAAE,kBAAA,GAAAF,OAAA;AAlBlC,IAAMG,IAAA,GAAO;AAMb,IAAMV,KAAA,GAAcK,KAAA,CAAAM,UAAA,CAAqC,CAACC,KAAA,EAAOC,YAAA,KAAiB;EAChF,MAAM;IAAEC,QAAA;IAAUC,KAAA,GAAQ;IAAIC,MAAA,GAAS;IAAG,GAAGC;EAAW,IAAIL,KAAA;EAC5D,OACE,mBAAAH,kBAAA,CAAAS,GAAA,EAACV,sBAAA,CAAAW,SAAA,CAAUC,GAAA,EAAV;IACE,GAAGH,UAAA;IACJI,GAAA,EAAKR,YAAA;IACLE,KAAA;IACAC,MAAA;IACAM,OAAA,EAAQ;IACRC,mBAAA,EAAoB;IAGnBT,QAAA,EAAAF,KAAA,CAAMY,OAAA,GAAUV,QAAA,GAAW,mBAAAL,kBAAA,CAAAS,GAAA,EAAC;MAAQO,MAAA,EAAO;IAAA,CAAiB;EAAA,CAC/D;AAEJ,CAAC;AAEDzB,KAAA,CAAM0B,WAAA,GAAchB,IAAA;AAIpB,IAAMT,IAAA,GAAOD,KAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}