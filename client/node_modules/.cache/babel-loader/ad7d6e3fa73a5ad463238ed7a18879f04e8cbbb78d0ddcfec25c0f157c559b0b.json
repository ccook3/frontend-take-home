{"ast":null,"code":"\"use client\";\n\nimport * as o from \"react\";\nimport a from \"classnames\";\nimport { Context as f } from \"radix-ui/internal\";\nimport * as m from \"./checkbox-group.primitive.js\";\nimport { createCheckboxGroupScope as h } from \"./checkbox-group.primitive.js\";\nimport { checkboxCardsRootPropDefs as l } from \"./checkbox-cards.props.js\";\nimport { baseCheckboxPropDefs as R } from \"./_internal/base-checkbox.props.js\";\nimport { Grid as u } from \"./grid.js\";\nimport { ThickCheckIcon as y } from \"./icons.js\";\nimport { extractProps as n } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as I } from \"../props/margin.props.js\";\nconst x = \"CheckboxCards\",\n  [G] = f.createContextScope(x, [h]),\n  d = h(),\n  [v, N] = G(x),\n  b = o.forwardRef((e, s) => {\n    const {\n        __scopeCheckboxCards: r,\n        className: c,\n        color: p,\n        ...C\n      } = n(e, l, I),\n      t = d(r);\n    return o.createElement(v, {\n      scope: r,\n      size: e.size,\n      highContrast: e.highContrast\n    }, o.createElement(u, {\n      asChild: !0\n    }, o.createElement(m.Root, {\n      ...t,\n      \"data-accent-color\": p,\n      ...C,\n      ref: s,\n      className: a(\"rt-CheckboxCardsRoot\", c)\n    })));\n  });\nb.displayName = \"CheckboxCards.Root\";\nconst k = o.forwardRef(({\n  __scopeCheckboxCards: e,\n  children: s,\n  className: r,\n  style: c,\n  ...p\n}, C) => {\n  const t = N(\"CheckboxCardsItem\", e),\n    i = d(e),\n    {\n      className: P\n    } = n({\n      size: t?.size,\n      variant: \"surface\",\n      highContrast: t?.highContrast\n    }, R);\n  return o.createElement(\"label\", {\n    className: a(\"rt-BaseCard\", \"rt-CheckboxCardsItem\", r),\n    style: c\n  }, s, o.createElement(m.Item, {\n    ...i,\n    ...p,\n    ref: C,\n    className: a(\"rt-reset\", \"rt-BaseCheckboxRoot\", \"rt-CheckboxCardCheckbox\", P)\n  }, o.createElement(m.Indicator, {\n    ...i,\n    asChild: !0,\n    className: \"rt-BaseCheckboxIndicator\"\n  }, o.createElement(y, null))));\n});\nk.displayName = \"CheckboxCards.Item\";\nexport { k as Item, b as Root };","map":{"version":3,"names":["o","a","Context","f","m","createCheckboxGroupScope","h","checkboxCardsRootPropDefs","l","baseCheckboxPropDefs","R","Grid","u","ThickCheckIcon","y","extractProps","n","marginPropDefs","I","x","G","createContextScope","d","v","N","b","forwardRef","e","s","__scopeCheckboxCards","r","className","c","color","p","C","t","createElement","scope","size","highContrast","asChild","Root","ref","displayName","k","children","style","i","P","variant","Item","Indicator"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/themes/src/components/checkbox-cards.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Context } from 'radix-ui/internal';\n\nimport * as CheckboxGroupPrimitive from './checkbox-group.primitive.js';\nimport { createCheckboxGroupScope } from './checkbox-group.primitive.js';\nimport { checkboxCardsRootPropDefs } from './checkbox-cards.props.js';\nimport { baseCheckboxPropDefs } from './_internal/base-checkbox.props.js';\nimport { Grid } from './grid.js';\nimport { ThickCheckIcon } from './icons.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { Responsive, GetPropDefTypes } from '../props/prop-def.js';\n\nconst CHECKBOX_CARD_GROUP_NAME = 'CheckboxCards';\n\ntype ScopedProps<P> = P & { __scopeCheckboxCards?: Context.Scope };\nconst [createCheckboxCardsContext] = Context.createContextScope(CHECKBOX_CARD_GROUP_NAME, [\n  createCheckboxGroupScope,\n]);\nconst useCheckboxGroupScope = createCheckboxGroupScope();\n\ntype CheckboxCardsContextValue = {\n  size?: Responsive<(typeof checkboxCardsRootPropDefs.size.values)[number]>;\n  highContrast?: boolean;\n};\n\nconst [CheckboxCardsProvider, useCheckboxCardsContext] =\n  createCheckboxCardsContext<CheckboxCardsContextValue>(CHECKBOX_CARD_GROUP_NAME);\n\ntype CheckboxCardsRootElement = React.ElementRef<typeof CheckboxGroupPrimitive.Root>;\ntype CheckboxCardsRootOwnProps = GetPropDefTypes<typeof checkboxCardsRootPropDefs>;\ninterface CheckboxCardsRootProps\n  extends ComponentPropsWithout<\n      typeof CheckboxGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    CheckboxCardsRootOwnProps {}\nconst CheckboxCardsRoot = React.forwardRef<CheckboxCardsRootElement, CheckboxCardsRootProps>(\n  (props: ScopedProps<CheckboxCardsRootProps>, forwardedRef) => {\n    const { __scopeCheckboxCards, className, color, ...rootProps } = extractProps(\n      props,\n      checkboxCardsRootPropDefs,\n      marginPropDefs\n    );\n    const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxCards);\n    return (\n      <CheckboxCardsProvider\n        scope={__scopeCheckboxCards}\n        size={props.size}\n        highContrast={props.highContrast}\n      >\n        <Grid asChild>\n          <CheckboxGroupPrimitive.Root\n            {...checkboxGroupScope}\n            data-accent-color={color}\n            {...rootProps}\n            ref={forwardedRef}\n            className={classNames('rt-CheckboxCardsRoot', className)}\n          />\n        </Grid>\n      </CheckboxCardsProvider>\n    );\n  }\n);\nCheckboxCardsRoot.displayName = 'CheckboxCards.Root';\n\ntype CheckboxCardsItemElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxCardsItemProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps>,\n    MarginProps {}\nconst CheckboxCardsItem = React.forwardRef<\n  CheckboxCardsItemElement,\n  ScopedProps<CheckboxCardsItemProps>\n>(({ __scopeCheckboxCards, children, className, style, ...props }, forwardedRef) => {\n  const context = useCheckboxCardsContext('CheckboxCardsItem', __scopeCheckboxCards);\n  const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxCards);\n  const { className: checkboxClassName } = extractProps(\n    // Pass size / highContrast values from the context and static variant to generate styles\n    { size: context?.size, variant: 'surface', highContrast: context?.highContrast },\n    // Pass size & variant prop defs to allow it to be extracted\n    baseCheckboxPropDefs\n  );\n  return (\n    <label className={classNames('rt-BaseCard', 'rt-CheckboxCardsItem', className)} style={style}>\n      {children}\n      <CheckboxGroupPrimitive.Item\n        {...checkboxGroupScope}\n        {...props}\n        ref={forwardedRef}\n        className={classNames(\n          'rt-reset',\n          'rt-BaseCheckboxRoot',\n          'rt-CheckboxCardCheckbox',\n          checkboxClassName\n        )}\n      >\n        <CheckboxGroupPrimitive.Indicator\n          {...checkboxGroupScope}\n          asChild\n          className=\"rt-BaseCheckboxIndicator\"\n        >\n          <ThickCheckIcon />\n        </CheckboxGroupPrimitive.Indicator>\n      </CheckboxGroupPrimitive.Item>\n    </label>\n  );\n});\nCheckboxCardsItem.displayName = 'CheckboxCards.Item';\n\nexport { CheckboxCardsRoot as Root, CheckboxCardsItem as Item };\nexport type { CheckboxCardsRootProps as RootProps, CheckboxCardsItemProps as ItemProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}