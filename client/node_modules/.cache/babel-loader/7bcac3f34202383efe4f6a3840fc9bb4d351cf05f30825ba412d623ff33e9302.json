{"ast":null,"code":"var _jsxFileName = \"/Users/catiecook/Documents/workos/frontend-take-home/client/src/modals/Role/AddRoleModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Dialog, Flex, Text, TextField } from '@radix-ui/themes';\nimport { API_BASE_URL, useRoles } from '../../hooks/api';\nimport { mutate } from 'swr';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRoleModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    watch\n  } = useForm();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    data: rolesData,\n    isLoading: rolesLoading\n  } = useRoles();\n  const roleIdValue = watch('roleId');\n  const onSubmit = async data => {\n    setIsSubmitting(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/roles`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to add role');\n      }\n      mutate(key => typeof key === 'string' && key.startsWith(`${API_BASE_URL}/roles`));\n      mutate(`${API_BASE_URL}/roles`);\n      onClose();\n    } catch (err) {\n      // This seems overkill but the type checking is being very specific \n      // here so I've set the error messages accordingly\n      const errorMessage = err instanceof Error ? err.message : 'An error occurred while adding the role';\n      setError(errorMessage);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog.Root, {\n    open: isOpen,\n    onOpenChange: onClose,\n    children: /*#__PURE__*/_jsxDEV(Dialog.Content, {\n      maxWidth: \"450px\",\n      children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n        children: \"Add role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Text, {\n        color: \"red\",\n        size: \"2\",\n        mb: \"3\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          direction: \"column\",\n          gap: \"3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              as: \"div\",\n              size: \"2\",\n              mb: \"1\",\n              weight: \"bold\",\n              children: \"Role name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField.Root, {\n              ...register('name'),\n              placeholder: \"Role name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              as: \"div\",\n              size: \"2\",\n              mb: \"1\",\n              weight: \"bold\",\n              children: \"Role description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField.Root, {\n              ...register('description'),\n              placeholder: \"Role description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          gap: \"3\",\n          mt: \"4\",\n          justify: \"end\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            variant: \"soft\",\n            color: \"gray\",\n            onClick: onClose,\n            disabled: isSubmitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: isSubmitting ? 'Saving...' : 'Add role'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AddRoleModal, \"R/OmlGX5lxP1YRbmB+FslV+HFRU=\", false, function () {\n  return [useForm, useRoles];\n});\n_c = AddRoleModal;\nexport default AddRoleModal;\nvar _c;\n$RefreshReg$(_c, \"AddRoleModal\");","map":{"version":3,"names":["React","useState","Button","Dialog","Flex","Text","TextField","API_BASE_URL","useRoles","mutate","useForm","jsxDEV","_jsxDEV","AddRoleModal","isOpen","onClose","_s","register","handleSubmit","setValue","watch","isSubmitting","setIsSubmitting","error","setError","data","rolesData","isLoading","rolesLoading","roleIdValue","onSubmit","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","key","startsWith","err","errorMessage","Root","open","onOpenChange","children","Content","maxWidth","Title","fileName","_jsxFileName","lineNumber","columnNumber","color","size","mb","direction","gap","as","weight","placeholder","mt","justify","type","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/src/modals/Role/AddRoleModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Dialog, Flex, Select, Text, TextField } from '@radix-ui/themes';\nimport { User } from '../../types/User';\nimport { API_BASE_URL, useRoles } from '../../hooks/api';\nimport { mutate } from 'swr';\nimport { useForm } from 'react-hook-form';\nimport { Role } from '../../types/Role';\n\nconst AddRoleModal: React.FC<any> = ({isOpen, onClose}:{isOpen: boolean, onClose: () => void}) => {\n  const { register, handleSubmit, setValue, watch } = useForm();\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n\n  const { data: rolesData, isLoading: rolesLoading } = useRoles();\n\n  const roleIdValue = watch('roleId');\n\n  const onSubmit = async (data: Partial<Role>) => {\n    setIsSubmitting(true);\n    setError('');\n    \n    try {\n      const response = await fetch(`${API_BASE_URL}/roles`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to add role');\n      }\n\n      mutate((key) => typeof key === 'string' && key.startsWith(`${API_BASE_URL}/roles`));\n      mutate(`${API_BASE_URL}/roles`);\n    \n      onClose();\n    }  catch (err: unknown) {\n      // This seems overkill but the type checking is being very specific \n      // here so I've set the error messages accordingly\n      const errorMessage = err instanceof Error \n        ? err.message \n        : 'An error occurred while adding the role';\n      \n      setError(errorMessage);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Dialog.Root open={isOpen} onOpenChange={onClose}>\n      <Dialog.Content maxWidth=\"450px\">\n        <Dialog.Title>Add role</Dialog.Title>\n         {error && (\n          <Text color=\"red\" size=\"2\" mb=\"3\">\n            {error}\n          </Text>\n         )}\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Flex direction=\"column\" gap=\"3\">\n            <label>\n              <Text as=\"div\" size=\"2\" mb=\"1\" weight=\"bold\">\n                Role name\n              </Text>\n              <TextField.Root \n                {...register('name')}\n                placeholder=\"Role name\"\n              />\n            </label>\n            \n            <label>\n              <Text as=\"div\" size=\"2\" mb=\"1\" weight=\"bold\">\n                Role description\n              </Text>\n              <TextField.Root \n                {...register('description')}\n                placeholder=\"Role description\"\n              />\n            </label>\n          </Flex>\n          \n          <Flex gap=\"3\" mt=\"4\" justify=\"end\">\n            <Button \n              type=\"button\" \n              variant=\"soft\" \n              color=\"gray\" \n              onClick={onClose}\n              disabled={isSubmitting}\n            >\n              Cancel\n            </Button>\n            \n            <Button \n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {isSubmitting ? 'Saving...' : 'Add role'}\n            </Button>\n          </Flex>\n        </form>\n      </Dialog.Content>\n    </Dialog.Root>\n  )\n}\n\nexport default AddRoleModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}