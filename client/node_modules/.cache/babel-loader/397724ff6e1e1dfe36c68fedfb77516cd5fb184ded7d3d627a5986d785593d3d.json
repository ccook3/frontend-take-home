{"ast":null,"code":"\"use client\";\n\nimport * as o from \"react\";\nimport d from \"classnames\";\nimport { DropdownMenu as t, Slot as W } from \"radix-ui\";\nimport { ScrollArea as c } from \"./scroll-area.js\";\nimport { dropdownMenuContentPropDefs as i, dropdownMenuItemPropDefs as L, dropdownMenuCheckboxItemPropDefs as O, dropdownMenuRadioItemPropDefs as V } from \"./dropdown-menu.props.js\";\nimport { Theme as P, useThemeContext as j } from \"./theme.js\";\nimport { ChevronDownIcon as z, ThickCheckIcon as f, ThickChevronRightIcon as A } from \"./icons.js\";\nimport { extractProps as C } from \"../helpers/extract-props.js\";\nimport { requireReactElement as F } from \"../helpers/require-react-element.js\";\nconst I = e => o.createElement(t.Root, {\n  ...e\n});\nI.displayName = \"DropdownMenu.Root\";\nconst h = o.forwardRef(({\n  children: e,\n  ...n\n}, r) => o.createElement(t.Trigger, {\n  ...n,\n  ref: r,\n  asChild: !0\n}, F(e)));\nh.displayName = \"DropdownMenu.Trigger\";\nconst b = o.createContext({}),\n  g = o.forwardRef((e, n) => {\n    const r = j(),\n      {\n        size: s = i.size.default,\n        variant: p = i.variant.default,\n        highContrast: u = i.highContrast.default\n      } = e,\n      {\n        className: a,\n        children: m,\n        color: M,\n        container: w,\n        forceMount: D,\n        ...k\n      } = C(e, i),\n      l = M || r.accentColor;\n    return o.createElement(t.Portal, {\n      container: w,\n      forceMount: D\n    }, o.createElement(P, {\n      asChild: !0\n    }, o.createElement(t.Content, {\n      \"data-accent-color\": l,\n      align: \"start\",\n      sideOffset: 4,\n      collisionPadding: 10,\n      ...k,\n      asChild: !1,\n      ref: n,\n      className: d(\"rt-PopperContent\", \"rt-BaseMenuContent\", \"rt-DropdownMenuContent\", a)\n    }, o.createElement(c, {\n      type: \"auto\"\n    }, o.createElement(\"div\", {\n      className: d(\"rt-BaseMenuViewport\", \"rt-DropdownMenuViewport\")\n    }, o.createElement(b.Provider, {\n      value: o.useMemo(() => ({\n        size: s,\n        variant: p,\n        color: l,\n        highContrast: u\n      }), [s, p, l, u])\n    }, m))))));\n  });\ng.displayName = \"DropdownMenu.Content\";\nconst y = o.forwardRef(({\n  className: e,\n  ...n\n}, r) => o.createElement(t.Label, {\n  ...n,\n  asChild: !1,\n  ref: r,\n  className: d(\"rt-BaseMenuLabel\", \"rt-DropdownMenuLabel\", e)\n}));\ny.displayName = \"DropdownMenu.Label\";\nconst v = o.forwardRef((e, n) => {\n  const {\n    className: r,\n    children: s,\n    color: p = L.color.default,\n    shortcut: u,\n    ...a\n  } = e;\n  return o.createElement(t.Item, {\n    \"data-accent-color\": p,\n    ...a,\n    ref: n,\n    className: d(\"rt-reset\", \"rt-BaseMenuItem\", \"rt-DropdownMenuItem\", r)\n  }, o.createElement(W.Slottable, null, s), u && o.createElement(\"div\", {\n    className: \"rt-BaseMenuShortcut rt-DropdownMenuShortcut\"\n  }, u));\n});\nv.displayName = \"DropdownMenu.Item\";\nconst R = o.forwardRef(({\n  className: e,\n  ...n\n}, r) => o.createElement(t.Group, {\n  ...n,\n  asChild: !1,\n  ref: r,\n  className: d(\"rt-BaseMenuGroup\", \"rt-DropdownMenuGroup\", e)\n}));\nR.displayName = \"DropdownMenu.Group\";\nconst S = o.forwardRef(({\n  className: e,\n  ...n\n}, r) => o.createElement(t.RadioGroup, {\n  ...n,\n  asChild: !1,\n  ref: r,\n  className: d(\"rt-BaseMenuRadioGroup\", \"rt-DropdownMenuRadioGroup\", e)\n}));\nS.displayName = \"DropdownMenu.RadioGroup\";\nconst x = o.forwardRef((e, n) => {\n  const {\n    children: r,\n    className: s,\n    color: p = V.color.default,\n    ...u\n  } = e;\n  return o.createElement(t.RadioItem, {\n    ...u,\n    asChild: !1,\n    ref: n,\n    \"data-accent-color\": p,\n    className: d(\"rt-BaseMenuItem\", \"rt-BaseMenuRadioItem\", \"rt-DropdownMenuItem\", \"rt-DropdownMenuRadioItem\", s)\n  }, r, o.createElement(t.ItemIndicator, {\n    className: \"rt-BaseMenuItemIndicator rt-DropdownMenuItemIndicator\"\n  }, o.createElement(f, {\n    className: \"rt-BaseMenuItemIndicatorIcon rt-DropdownMenuItemIndicatorIcon\"\n  })));\n});\nx.displayName = \"DropdownMenu.RadioItem\";\nconst T = o.forwardRef((e, n) => {\n  const {\n    children: r,\n    className: s,\n    shortcut: p,\n    color: u = O.color.default,\n    ...a\n  } = e;\n  return o.createElement(t.CheckboxItem, {\n    ...a,\n    asChild: !1,\n    ref: n,\n    \"data-accent-color\": u,\n    className: d(\"rt-BaseMenuItem\", \"rt-BaseMenuCheckboxItem\", \"rt-DropdownMenuItem\", \"rt-DropdownMenuCheckboxItem\", s)\n  }, r, o.createElement(t.ItemIndicator, {\n    className: \"rt-BaseMenuItemIndicator rt-DropdownMenuItemIndicator\"\n  }, o.createElement(f, {\n    className: \"rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon\"\n  })), p && o.createElement(\"div\", {\n    className: \"rt-BaseMenuShortcut rt-DropdownMenuShortcut\"\n  }, p));\n});\nT.displayName = \"DropdownMenu.CheckboxItem\";\nconst N = e => o.createElement(t.Sub, {\n  ...e\n});\nN.displayName = \"DropdownMenu.Sub\";\nconst E = o.forwardRef((e, n) => {\n  const {\n    className: r,\n    children: s,\n    ...p\n  } = e;\n  return o.createElement(t.SubTrigger, {\n    ...p,\n    asChild: !1,\n    ref: n,\n    className: d(\"rt-BaseMenuItem\", \"rt-BaseMenuSubTrigger\", \"rt-DropdownMenuItem\", \"rt-DropdownMenuSubTrigger\", r)\n  }, s, o.createElement(\"div\", {\n    className: \"rt-BaseMenuShortcut rt-DropdownMenuShortcut\"\n  }, o.createElement(A, {\n    className: \"rt-BaseMenuSubTriggerIcon rt-DropdownMenuSubtriggerIcon\"\n  })));\n});\nE.displayName = \"DropdownMenu.SubTrigger\";\nconst G = o.forwardRef((e, n) => {\n  const {\n      size: r,\n      variant: s,\n      color: p,\n      highContrast: u\n    } = o.useContext(b),\n    {\n      className: a,\n      children: m,\n      container: M,\n      forceMount: w,\n      ...D\n    } = C({\n      size: r,\n      variant: s,\n      color: p,\n      highContrast: u,\n      ...e\n    }, i);\n  return o.createElement(t.Portal, {\n    container: M,\n    forceMount: w\n  }, o.createElement(P, {\n    asChild: !0\n  }, o.createElement(t.SubContent, {\n    \"data-accent-color\": p,\n    alignOffset: -Number(r) * 4,\n    sideOffset: 1,\n    collisionPadding: 10,\n    ...D,\n    asChild: !1,\n    ref: n,\n    className: d(\"rt-PopperContent\", \"rt-BaseMenuContent\", \"rt-BaseMenuSubContent\", \"rt-DropdownMenuContent\", \"rt-DropdownMenuSubContent\", a)\n  }, o.createElement(c, {\n    type: \"auto\"\n  }, o.createElement(\"div\", {\n    className: d(\"rt-BaseMenuViewport\", \"rt-DropdownMenuViewport\")\n  }, m)))));\n});\nG.displayName = \"DropdownMenu.SubContent\";\nconst B = o.forwardRef(({\n  className: e,\n  ...n\n}, r) => o.createElement(t.Separator, {\n  ...n,\n  asChild: !1,\n  ref: r,\n  className: d(\"rt-BaseMenuSeparator\", \"rt-DropdownMenuSeparator\", e)\n}));\nB.displayName = \"DropdownMenu.Separator\";\nexport { T as CheckboxItem, g as Content, R as Group, v as Item, y as Label, S as RadioGroup, x as RadioItem, I as Root, B as Separator, N as Sub, G as SubContent, E as SubTrigger, h as Trigger, z as TriggerIcon };","map":{"version":3,"names":["o","d","DropdownMenu","t","Slot","W","ScrollArea","c","dropdownMenuContentPropDefs","i","dropdownMenuItemPropDefs","L","dropdownMenuCheckboxItemPropDefs","O","dropdownMenuRadioItemPropDefs","V","Theme","P","useThemeContext","j","ChevronDownIcon","z","ThickCheckIcon","f","ThickChevronRightIcon","A","extractProps","C","requireReactElement","F","I","e","createElement","Root","displayName","h","forwardRef","children","n","r","Trigger","ref","asChild","b","createContext","g","size","s","default","variant","p","highContrast","u","className","a","m","color","M","container","w","forceMount","D","k","l","accentColor","Portal","Content","align","sideOffset","collisionPadding","type","Provider","value","useMemo","y","Label","v","shortcut","Item","Slottable","R","Group","S","RadioGroup","x","RadioItem","ItemIndicator","T","CheckboxItem","N","Sub","E","SubTrigger","G","useContext","SubContent","alignOffset","Number","B","Separator","TriggerIcon"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/themes/src/components/dropdown-menu.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { DropdownMenu as DropdownMenuPrimitive, Slot } from 'radix-ui';\n\nimport { ScrollArea } from './scroll-area.js';\nimport {\n  dropdownMenuContentPropDefs,\n  dropdownMenuItemPropDefs,\n  dropdownMenuCheckboxItemPropDefs,\n  dropdownMenuRadioItemPropDefs,\n} from './dropdown-menu.props.js';\nimport { Theme, useThemeContext } from './theme.js';\nimport { ChevronDownIcon, ThickCheckIcon, ThickChevronRightIcon } from './icons.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { IconProps } from './icons.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface DropdownMenuRootProps\n  extends React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Root> {}\nconst DropdownMenuRoot: React.FC<DropdownMenuRootProps> = (props) => (\n  <DropdownMenuPrimitive.Root {...props} />\n);\nDropdownMenuRoot.displayName = 'DropdownMenu.Root';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof DropdownMenuPrimitive.Trigger>;\ninterface DropdownMenuTriggerProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Trigger, RemovedProps> {}\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <DropdownMenuPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </DropdownMenuPrimitive.Trigger>\n  )\n);\nDropdownMenuTrigger.displayName = 'DropdownMenu.Trigger';\n\ntype DropdownMenuContentOwnProps = GetPropDefTypes<typeof dropdownMenuContentPropDefs>;\ntype DropdownMenuContentContextValue = DropdownMenuContentOwnProps;\nconst DropdownMenuContentContext = React.createContext<DropdownMenuContentContextValue>({});\ntype DropdownMenuContentElement = React.ElementRef<typeof DropdownMenuPrimitive.Content>;\ninterface DropdownMenuContentProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Content, RemovedProps>,\n    DropdownMenuContentContextValue {\n  container?: React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Portal>['container'];\n}\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props, forwardedRef) => {\n    const themeContext = useThemeContext();\n    const {\n      size = dropdownMenuContentPropDefs.size.default,\n      variant = dropdownMenuContentPropDefs.variant.default,\n      highContrast = dropdownMenuContentPropDefs.highContrast.default,\n    } = props;\n    const { className, children, color, container, forceMount, ...contentProps } = extractProps(\n      props,\n      dropdownMenuContentPropDefs\n    );\n    const resolvedColor = color || themeContext.accentColor;\n    return (\n      <DropdownMenuPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <DropdownMenuPrimitive.Content\n            data-accent-color={resolvedColor}\n            align=\"start\"\n            sideOffset={4}\n            collisionPadding={10}\n            {...contentProps}\n            asChild={false}\n            ref={forwardedRef}\n            className={classNames(\n              'rt-PopperContent',\n              'rt-BaseMenuContent',\n              'rt-DropdownMenuContent',\n              className\n            )}\n          >\n            <ScrollArea type=\"auto\">\n              <div className={classNames('rt-BaseMenuViewport', 'rt-DropdownMenuViewport')}>\n                <DropdownMenuContentContext.Provider\n                  value={React.useMemo(\n                    () => ({ size, variant, color: resolvedColor, highContrast }),\n                    [size, variant, resolvedColor, highContrast]\n                  )}\n                >\n                  {children}\n                </DropdownMenuContentContext.Provider>\n              </div>\n            </ScrollArea>\n          </DropdownMenuPrimitive.Content>\n        </Theme>\n      </DropdownMenuPrimitive.Portal>\n    );\n  }\n);\nDropdownMenuContent.displayName = 'DropdownMenu.Content';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof DropdownMenuPrimitive.Label>;\ninterface DropdownMenuLabelProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Label, RemovedProps> {}\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <DropdownMenuPrimitive.Label\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseMenuLabel', 'rt-DropdownMenuLabel', className)}\n    />\n  )\n);\nDropdownMenuLabel.displayName = 'DropdownMenu.Label';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof DropdownMenuPrimitive.Item>;\ntype DropdownMenuItemOwnProps = GetPropDefTypes<typeof dropdownMenuItemPropDefs>;\ninterface DropdownMenuItemProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Item, RemovedProps>,\n    DropdownMenuItemOwnProps {}\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props, forwardedRef) => {\n    const {\n      className,\n      children,\n      color = dropdownMenuItemPropDefs.color.default,\n      shortcut,\n      ...itemProps\n    } = props;\n    return (\n      <DropdownMenuPrimitive.Item\n        data-accent-color={color}\n        {...itemProps}\n        ref={forwardedRef}\n        className={classNames('rt-reset', 'rt-BaseMenuItem', 'rt-DropdownMenuItem', className)}\n      >\n        <Slot.Slottable>{children}</Slot.Slottable>\n        {shortcut && <div className=\"rt-BaseMenuShortcut rt-DropdownMenuShortcut\">{shortcut}</div>}\n      </DropdownMenuPrimitive.Item>\n    );\n  }\n);\nDropdownMenuItem.displayName = 'DropdownMenu.Item';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof DropdownMenuPrimitive.Group>;\ninterface DropdownMenuGroupProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Group, RemovedProps> {}\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <DropdownMenuPrimitive.Group\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseMenuGroup', 'rt-DropdownMenuGroup', className)}\n    />\n  )\n);\nDropdownMenuGroup.displayName = 'DropdownMenu.Group';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof DropdownMenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.RadioGroup, RemovedProps> {}\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>(({ className, ...props }, forwardedRef) => (\n  <DropdownMenuPrimitive.RadioGroup\n    {...props}\n    asChild={false}\n    ref={forwardedRef}\n    className={classNames('rt-BaseMenuRadioGroup', 'rt-DropdownMenuRadioGroup', className)}\n  />\n));\nDropdownMenuRadioGroup.displayName = 'DropdownMenu.RadioGroup';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>;\ntype DropdownMenuRadioItemOwnProps = GetPropDefTypes<typeof dropdownMenuRadioItemPropDefs>;\ninterface DropdownMenuRadioItemProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.RadioItem, RemovedProps>,\n    DropdownMenuRadioItemOwnProps {}\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    color = dropdownMenuRadioItemPropDefs.color.default,\n    ...itemProps\n  } = props;\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      data-accent-color={color}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuRadioItem',\n        'rt-DropdownMenuItem',\n        'rt-DropdownMenuRadioItem',\n        className\n      )}\n    >\n      {children}\n      <DropdownMenuPrimitive.ItemIndicator className=\"rt-BaseMenuItemIndicator rt-DropdownMenuItemIndicator\">\n        <ThickCheckIcon className=\"rt-BaseMenuItemIndicatorIcon rt-DropdownMenuItemIndicatorIcon\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </DropdownMenuPrimitive.RadioItem>\n  );\n});\nDropdownMenuRadioItem.displayName = 'DropdownMenu.RadioItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>;\ntype DropdownMenuCheckboxItemOwnProps = GetPropDefTypes<typeof dropdownMenuCheckboxItemPropDefs>;\ninterface DropdownMenuCheckboxItemProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.CheckboxItem, RemovedProps>,\n    DropdownMenuCheckboxItemOwnProps {}\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    shortcut,\n    color = dropdownMenuCheckboxItemPropDefs.color.default,\n    ...itemProps\n  } = props;\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      data-accent-color={color}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuCheckboxItem',\n        'rt-DropdownMenuItem',\n        'rt-DropdownMenuCheckboxItem',\n        className\n      )}\n    >\n      {children}\n      <DropdownMenuPrimitive.ItemIndicator className=\"rt-BaseMenuItemIndicator rt-DropdownMenuItemIndicator\">\n        <ThickCheckIcon className=\"rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n      {shortcut && <div className=\"rt-BaseMenuShortcut rt-DropdownMenuShortcut\">{shortcut}</div>}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n});\nDropdownMenuCheckboxItem.displayName = 'DropdownMenu.CheckboxItem';\n\ninterface DropdownMenuSubProps\n  extends React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Sub> {}\nconst DropdownMenuSub: React.FC<DropdownMenuSubProps> = (props) => (\n  <DropdownMenuPrimitive.Sub {...props} />\n);\nDropdownMenuSub.displayName = 'DropdownMenu.Sub';\n\ntype DropdownMenuSubTriggerElement = React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>;\ninterface DropdownMenuSubTriggerProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.SubTrigger, RemovedProps> {}\nconst DropdownMenuSubTrigger = React.forwardRef<\n  DropdownMenuSubTriggerElement,\n  DropdownMenuSubTriggerProps\n>((props, forwardedRef) => {\n  const { className, children, ...subTriggerProps } = props;\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      {...subTriggerProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuSubTrigger',\n        'rt-DropdownMenuItem',\n        'rt-DropdownMenuSubTrigger',\n        className\n      )}\n    >\n      {children}\n      <div className=\"rt-BaseMenuShortcut rt-DropdownMenuShortcut\">\n        <ThickChevronRightIcon className=\"rt-BaseMenuSubTriggerIcon rt-DropdownMenuSubtriggerIcon\" />\n      </div>\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n});\nDropdownMenuSubTrigger.displayName = 'DropdownMenu.SubTrigger';\n\ntype DropdownMenuSubContentElement = React.ElementRef<typeof DropdownMenuPrimitive.SubContent>;\ninterface DropdownMenuSubContentProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.SubContent, RemovedProps> {\n  container?: React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Portal>['container'];\n}\nconst DropdownMenuSubContent = React.forwardRef<\n  DropdownMenuSubContentElement,\n  DropdownMenuSubContentProps\n>((props, forwardedRef) => {\n  const { size, variant, color, highContrast } = React.useContext(DropdownMenuContentContext);\n  const { className, children, container, forceMount, ...subContentProps } = extractProps(\n    { size, variant, color, highContrast, ...props },\n    dropdownMenuContentPropDefs\n  );\n  return (\n    <DropdownMenuPrimitive.Portal container={container} forceMount={forceMount}>\n      <Theme asChild>\n        <DropdownMenuPrimitive.SubContent\n          data-accent-color={color}\n          alignOffset={-Number(size) * 4}\n          // Side offset accounts for the outer solid box-shadow\n          sideOffset={1}\n          collisionPadding={10}\n          {...subContentProps}\n          asChild={false}\n          ref={forwardedRef}\n          className={classNames(\n            'rt-PopperContent',\n            'rt-BaseMenuContent',\n            'rt-BaseMenuSubContent',\n            'rt-DropdownMenuContent',\n            'rt-DropdownMenuSubContent',\n            className\n          )}\n        >\n          <ScrollArea type=\"auto\">\n            <div className={classNames('rt-BaseMenuViewport', 'rt-DropdownMenuViewport')}>\n              {children}\n            </div>\n          </ScrollArea>\n        </DropdownMenuPrimitive.SubContent>\n      </Theme>\n    </DropdownMenuPrimitive.Portal>\n  );\n});\nDropdownMenuSubContent.displayName = 'DropdownMenu.SubContent';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof DropdownMenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Separator, RemovedProps> {}\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>(({ className, ...props }, forwardedRef) => (\n  <DropdownMenuPrimitive.Separator\n    {...props}\n    asChild={false}\n    ref={forwardedRef}\n    className={classNames('rt-BaseMenuSeparator', 'rt-DropdownMenuSeparator', className)}\n  />\n));\nDropdownMenuSeparator.displayName = 'DropdownMenu.Separator';\n\nexport {\n  DropdownMenuRoot as Root,\n  DropdownMenuTrigger as Trigger,\n  ChevronDownIcon as TriggerIcon,\n  DropdownMenuContent as Content,\n  DropdownMenuLabel as Label,\n  DropdownMenuItem as Item,\n  DropdownMenuGroup as Group,\n  DropdownMenuRadioGroup as RadioGroup,\n  DropdownMenuRadioItem as RadioItem,\n  DropdownMenuCheckboxItem as CheckboxItem,\n  DropdownMenuSub as Sub,\n  DropdownMenuSubTrigger as SubTrigger,\n  DropdownMenuSubContent as SubContent,\n  DropdownMenuSeparator as Separator,\n};\n\nexport type {\n  DropdownMenuRootProps as RootProps,\n  DropdownMenuTriggerProps as TriggerProps,\n  IconProps as TriggerIconProps,\n  DropdownMenuContentProps as ContentProps,\n  DropdownMenuLabelProps as LabelProps,\n  DropdownMenuItemProps as ItemProps,\n  DropdownMenuGroupProps as GroupProps,\n  DropdownMenuRadioGroupProps as RadioGroupProps,\n  DropdownMenuRadioItemProps as RadioItemProps,\n  DropdownMenuCheckboxItemProps as CheckboxItemProps,\n  DropdownMenuSubProps as SubProps,\n  DropdownMenuSubTriggerProps as SubTriggerProps,\n  DropdownMenuSubContentProps as SubContentProps,\n  DropdownMenuSeparatorProps as SeparatorProps,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}