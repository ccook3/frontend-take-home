{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// packages/react/alert-dialog/src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Action: () => Action,\n  AlertDialog: () => AlertDialog,\n  AlertDialogAction: () => AlertDialogAction,\n  AlertDialogCancel: () => AlertDialogCancel,\n  AlertDialogContent: () => AlertDialogContent,\n  AlertDialogDescription: () => AlertDialogDescription,\n  AlertDialogOverlay: () => AlertDialogOverlay,\n  AlertDialogPortal: () => AlertDialogPortal,\n  AlertDialogTitle: () => AlertDialogTitle,\n  AlertDialogTrigger: () => AlertDialogTrigger,\n  Cancel: () => Cancel,\n  Content: () => Content2,\n  Description: () => Description2,\n  Overlay: () => Overlay2,\n  Portal: () => Portal2,\n  Root: () => Root2,\n  Title: () => Title2,\n  Trigger: () => Trigger2,\n  createAlertDialogScope: () => createAlertDialogScope\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// packages/react/alert-dialog/src/alert-dialog.tsx\nvar React = __toESM(require(\"react\"));\nvar import_react_context = require(\"@radix-ui/react-context\");\nvar import_react_compose_refs = require(\"@radix-ui/react-compose-refs\");\nvar DialogPrimitive = __toESM(require(\"@radix-ui/react-dialog\"));\nvar import_react_dialog = require(\"@radix-ui/react-dialog\");\nvar import_primitive = require(\"@radix-ui/primitive\");\nvar import_react_slot = require(\"@radix-ui/react-slot\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar ROOT_NAME = \"AlertDialog\";\nvar [createAlertDialogContext, createAlertDialogScope] = (0, import_react_context.createContextScope)(ROOT_NAME, [import_react_dialog.createDialogScope]);\nvar useDialogScope = (0, import_react_dialog.createDialogScope)();\nvar AlertDialog = props => {\n  const {\n    __scopeAlertDialog,\n    ...alertDialogProps\n  } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(DialogPrimitive.Root, {\n    ...dialogScope,\n    ...alertDialogProps,\n    modal: true\n  });\n};\nAlertDialog.displayName = ROOT_NAME;\nvar TRIGGER_NAME = \"AlertDialogTrigger\";\nvar AlertDialogTrigger = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeAlertDialog,\n    ...triggerProps\n  } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(DialogPrimitive.Trigger, {\n    ...dialogScope,\n    ...triggerProps,\n    ref: forwardedRef\n  });\n});\nAlertDialogTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"AlertDialogPortal\";\nvar AlertDialogPortal = props => {\n  const {\n    __scopeAlertDialog,\n    ...portalProps\n  } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(DialogPrimitive.Portal, {\n    ...dialogScope,\n    ...portalProps\n  });\n};\nAlertDialogPortal.displayName = PORTAL_NAME;\nvar OVERLAY_NAME = \"AlertDialogOverlay\";\nvar AlertDialogOverlay = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeAlertDialog,\n    ...overlayProps\n  } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(DialogPrimitive.Overlay, {\n    ...dialogScope,\n    ...overlayProps,\n    ref: forwardedRef\n  });\n});\nAlertDialogOverlay.displayName = OVERLAY_NAME;\nvar CONTENT_NAME = \"AlertDialogContent\";\nvar [AlertDialogContentProvider, useAlertDialogContentContext] = createAlertDialogContext(CONTENT_NAME);\nvar AlertDialogContent = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeAlertDialog,\n    children,\n    ...contentProps\n  } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  const contentRef = React.useRef(null);\n  const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, contentRef);\n  const cancelRef = React.useRef(null);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(DialogPrimitive.WarningProvider, {\n    contentName: CONTENT_NAME,\n    titleName: TITLE_NAME,\n    docsSlug: \"alert-dialog\",\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(AlertDialogContentProvider, {\n      scope: __scopeAlertDialog,\n      cancelRef,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsxs)(DialogPrimitive.Content, {\n        role: \"alertdialog\",\n        ...dialogScope,\n        ...contentProps,\n        ref: composedRefs,\n        onOpenAutoFocus: (0, import_primitive.composeEventHandlers)(contentProps.onOpenAutoFocus, event => {\n          event.preventDefault();\n          cancelRef.current?.focus({\n            preventScroll: true\n          });\n        }),\n        onPointerDownOutside: event => event.preventDefault(),\n        onInteractOutside: event => event.preventDefault(),\n        children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(import_react_slot.Slottable, {\n          children\n        }), /* @__PURE__ */(0, import_jsx_runtime.jsx)(DescriptionWarning, {\n          contentRef\n        })]\n      })\n    })\n  });\n});\nAlertDialogContent.displayName = CONTENT_NAME;\nvar TITLE_NAME = \"AlertDialogTitle\";\nvar AlertDialogTitle = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeAlertDialog,\n    ...titleProps\n  } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(DialogPrimitive.Title, {\n    ...dialogScope,\n    ...titleProps,\n    ref: forwardedRef\n  });\n});\nAlertDialogTitle.displayName = TITLE_NAME;\nvar DESCRIPTION_NAME = \"AlertDialogDescription\";\nvar AlertDialogDescription = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeAlertDialog,\n    ...descriptionProps\n  } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(DialogPrimitive.Description, {\n    ...dialogScope,\n    ...descriptionProps,\n    ref: forwardedRef\n  });\n});\nAlertDialogDescription.displayName = DESCRIPTION_NAME;\nvar ACTION_NAME = \"AlertDialogAction\";\nvar AlertDialogAction = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeAlertDialog,\n    ...actionProps\n  } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(DialogPrimitive.Close, {\n    ...dialogScope,\n    ...actionProps,\n    ref: forwardedRef\n  });\n});\nAlertDialogAction.displayName = ACTION_NAME;\nvar CANCEL_NAME = \"AlertDialogCancel\";\nvar AlertDialogCancel = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeAlertDialog,\n    ...cancelProps\n  } = props;\n  const {\n    cancelRef\n  } = useAlertDialogContentContext(CANCEL_NAME, __scopeAlertDialog);\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  const ref = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, cancelRef);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(DialogPrimitive.Close, {\n    ...dialogScope,\n    ...cancelProps,\n    ref\n  });\n});\nAlertDialogCancel.displayName = CANCEL_NAME;\nvar DescriptionWarning = ({\n  contentRef\n}) => {\n  const MESSAGE = `\\`${CONTENT_NAME}\\` requires a description for the component to be accessible for screen reader users.\n\nYou can add a description to the \\`${CONTENT_NAME}\\` by passing a \\`${DESCRIPTION_NAME}\\` component as a child, which also benefits sighted users by adding visible context to the dialog.\n\nAlternatively, you can use your own component as a description by assigning it an \\`id\\` and passing the same value to the \\`aria-describedby\\` prop in \\`${CONTENT_NAME}\\`. If the description is confusing or duplicative for sighted users, you can use the \\`@radix-ui/react-visually-hidden\\` primitive as a wrapper around your description component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;\n  React.useEffect(() => {\n    const hasDescription = document.getElementById(contentRef.current?.getAttribute(\"aria-describedby\"));\n    if (!hasDescription) console.warn(MESSAGE);\n  }, [MESSAGE, contentRef]);\n  return null;\n};\nvar Root2 = AlertDialog;\nvar Trigger2 = AlertDialogTrigger;\nvar Portal2 = AlertDialogPortal;\nvar Overlay2 = AlertDialogOverlay;\nvar Content2 = AlertDialogContent;\nvar Action = AlertDialogAction;\nvar Cancel = AlertDialogCancel;\nvar Title2 = AlertDialogTitle;\nvar Description2 = AlertDialogDescription;","map":{"version":3,"names":["src_exports","__export","Action","AlertDialog","AlertDialogAction","AlertDialogCancel","AlertDialogContent","AlertDialogDescription","AlertDialogOverlay","AlertDialogPortal","AlertDialogTitle","AlertDialogTrigger","Cancel","Content","Content2","Description","Description2","Overlay","Overlay2","Portal","Portal2","Root","Root2","Title","Title2","Trigger","Trigger2","createAlertDialogScope","module","exports","__toCommonJS","React","__toESM","require","import_react_context","import_react_compose_refs","DialogPrimitive","import_react_dialog","import_primitive","import_react_slot","import_jsx_runtime","ROOT_NAME","createAlertDialogContext","createContextScope","createDialogScope","useDialogScope","props","__scopeAlertDialog","alertDialogProps","dialogScope","jsx","modal","displayName","TRIGGER_NAME","forwardRef","forwardedRef","triggerProps","ref","PORTAL_NAME","portalProps","OVERLAY_NAME","overlayProps","CONTENT_NAME","AlertDialogContentProvider","useAlertDialogContentContext","children","contentProps","contentRef","useRef","composedRefs","useComposedRefs","cancelRef","WarningProvider","contentName","titleName","TITLE_NAME","docsSlug","scope","jsxs","role","onOpenAutoFocus","composeEventHandlers","event","preventDefault","current","focus","preventScroll","onPointerDownOutside","onInteractOutside","Slottable","DescriptionWarning","titleProps","DESCRIPTION_NAME","descriptionProps","ACTION_NAME","actionProps","Close","CANCEL_NAME","cancelProps","MESSAGE","useEffect","hasDescription","document","getElementById","getAttribute","console","warn"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-alert-dialog/src/index.ts","/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/react-alert-dialog/src/alert-dialog.tsx"],"sourcesContent":["'use client';\nexport {\n  createAlertDialogScope,\n  //\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Action,\n  Cancel,\n  Title,\n  Description,\n} from './alert-dialog';\nexport type {\n  AlertDialogProps,\n  AlertDialogTriggerProps,\n  AlertDialogPortalProps,\n  AlertDialogOverlayProps,\n  AlertDialogContentProps,\n  AlertDialogActionProps,\n  AlertDialogCancelProps,\n  AlertDialogTitleProps,\n  AlertDialogDescriptionProps,\n} from './alert-dialog';\n","import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { createDialogScope } from '@radix-ui/react-dialog';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Slottable } from '@radix-ui/react-slot';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst ROOT_NAME = 'AlertDialog';\n\ntype ScopedProps<P> = P & { __scopeAlertDialog?: Scope };\nconst [createAlertDialogContext, createAlertDialogScope] = createContextScope(ROOT_NAME, [\n  createDialogScope,\n]);\nconst useDialogScope = createDialogScope();\n\ntype DialogProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Root>;\ninterface AlertDialogProps extends Omit<DialogProps, 'modal'> {}\n\nconst AlertDialog: React.FC<AlertDialogProps> = (props: ScopedProps<AlertDialogProps>) => {\n  const { __scopeAlertDialog, ...alertDialogProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Root {...dialogScope} {...alertDialogProps} modal={true} />;\n};\n\nAlertDialog.displayName = ROOT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogTrigger\n * -----------------------------------------------------------------------------------------------*/\nconst TRIGGER_NAME = 'AlertDialogTrigger';\n\ntype AlertDialogTriggerElement = React.ElementRef<typeof DialogPrimitive.Trigger>;\ntype DialogTriggerProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Trigger>;\ninterface AlertDialogTriggerProps extends DialogTriggerProps {}\n\nconst AlertDialogTrigger = React.forwardRef<AlertDialogTriggerElement, AlertDialogTriggerProps>(\n  (props: ScopedProps<AlertDialogTriggerProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...triggerProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Trigger {...dialogScope} {...triggerProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'AlertDialogPortal';\n\ntype DialogPortalProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Portal>;\ninterface AlertDialogPortalProps extends DialogPortalProps {}\n\nconst AlertDialogPortal: React.FC<AlertDialogPortalProps> = (\n  props: ScopedProps<AlertDialogPortalProps>\n) => {\n  const { __scopeAlertDialog, ...portalProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Portal {...dialogScope} {...portalProps} />;\n};\n\nAlertDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'AlertDialogOverlay';\n\ntype AlertDialogOverlayElement = React.ElementRef<typeof DialogPrimitive.Overlay>;\ntype DialogOverlayProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>;\ninterface AlertDialogOverlayProps extends DialogOverlayProps {}\n\nconst AlertDialogOverlay = React.forwardRef<AlertDialogOverlayElement, AlertDialogOverlayProps>(\n  (props: ScopedProps<AlertDialogOverlayProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...overlayProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Overlay {...dialogScope} {...overlayProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogOverlay.displayName = OVERLAY_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'AlertDialogContent';\n\ntype AlertDialogContentContextValue = {\n  cancelRef: React.MutableRefObject<AlertDialogCancelElement | null>;\n};\n\nconst [AlertDialogContentProvider, useAlertDialogContentContext] =\n  createAlertDialogContext<AlertDialogContentContextValue>(CONTENT_NAME);\n\ntype AlertDialogContentElement = React.ElementRef<typeof DialogPrimitive.Content>;\ntype DialogContentProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>;\ninterface AlertDialogContentProps\n  extends Omit<DialogContentProps, 'onPointerDownOutside' | 'onInteractOutside'> {}\n\nconst AlertDialogContent = React.forwardRef<AlertDialogContentElement, AlertDialogContentProps>(\n  (props: ScopedProps<AlertDialogContentProps>, forwardedRef) => {\n    const { __scopeAlertDialog, children, ...contentProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const contentRef = React.useRef<AlertDialogContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const cancelRef = React.useRef<AlertDialogCancelElement | null>(null);\n\n    return (\n      <DialogPrimitive.WarningProvider\n        contentName={CONTENT_NAME}\n        titleName={TITLE_NAME}\n        docsSlug=\"alert-dialog\"\n      >\n        <AlertDialogContentProvider scope={__scopeAlertDialog} cancelRef={cancelRef}>\n          <DialogPrimitive.Content\n            role=\"alertdialog\"\n            {...dialogScope}\n            {...contentProps}\n            ref={composedRefs}\n            onOpenAutoFocus={composeEventHandlers(contentProps.onOpenAutoFocus, (event) => {\n              event.preventDefault();\n              cancelRef.current?.focus({ preventScroll: true });\n            })}\n            onPointerDownOutside={(event) => event.preventDefault()}\n            onInteractOutside={(event) => event.preventDefault()}\n          >\n            {/**\n             * We have to use `Slottable` here as we cannot wrap the `AlertDialogContentProvider`\n             * around everything, otherwise the `DescriptionWarning` would be rendered straight away.\n             * This is because we want the accessibility checks to run only once the content is actually\n             * open and that behaviour is already encapsulated in `DialogContent`.\n             */}\n            <Slottable>{children}</Slottable>\n            {process.env.NODE_ENV === 'development' && (\n              <DescriptionWarning contentRef={contentRef} />\n            )}\n          </DialogPrimitive.Content>\n        </AlertDialogContentProvider>\n      </DialogPrimitive.WarningProvider>\n    );\n  }\n);\n\nAlertDialogContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'AlertDialogTitle';\n\ntype AlertDialogTitleElement = React.ElementRef<typeof DialogPrimitive.Title>;\ntype DialogTitleProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>;\ninterface AlertDialogTitleProps extends DialogTitleProps {}\n\nconst AlertDialogTitle = React.forwardRef<AlertDialogTitleElement, AlertDialogTitleProps>(\n  (props: ScopedProps<AlertDialogTitleProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...titleProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Title {...dialogScope} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'AlertDialogDescription';\n\ntype AlertDialogDescriptionElement = React.ElementRef<typeof DialogPrimitive.Description>;\ntype DialogDescriptionProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>;\ninterface AlertDialogDescriptionProps extends DialogDescriptionProps {}\n\nconst AlertDialogDescription = React.forwardRef<\n  AlertDialogDescriptionElement,\n  AlertDialogDescriptionProps\n>((props: ScopedProps<AlertDialogDescriptionProps>, forwardedRef) => {\n  const { __scopeAlertDialog, ...descriptionProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Description {...dialogScope} {...descriptionProps} ref={forwardedRef} />;\n});\n\nAlertDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogAction\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACTION_NAME = 'AlertDialogAction';\n\ntype AlertDialogActionElement = React.ElementRef<typeof DialogPrimitive.Close>;\ntype DialogCloseProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Close>;\ninterface AlertDialogActionProps extends DialogCloseProps {}\n\nconst AlertDialogAction = React.forwardRef<AlertDialogActionElement, AlertDialogActionProps>(\n  (props: ScopedProps<AlertDialogActionProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...actionProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Close {...dialogScope} {...actionProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogAction.displayName = ACTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogCancel\n * -----------------------------------------------------------------------------------------------*/\n\nconst CANCEL_NAME = 'AlertDialogCancel';\n\ntype AlertDialogCancelElement = React.ElementRef<typeof DialogPrimitive.Close>;\ninterface AlertDialogCancelProps extends DialogCloseProps {}\n\nconst AlertDialogCancel = React.forwardRef<AlertDialogCancelElement, AlertDialogCancelProps>(\n  (props: ScopedProps<AlertDialogCancelProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...cancelProps } = props;\n    const { cancelRef } = useAlertDialogContentContext(CANCEL_NAME, __scopeAlertDialog);\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const ref = useComposedRefs(forwardedRef, cancelRef);\n    return <DialogPrimitive.Close {...dialogScope} {...cancelProps} ref={ref} />;\n  }\n);\n\nAlertDialogCancel.displayName = CANCEL_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<AlertDialogContentElement | null>;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef }) => {\n  const MESSAGE = `\\`${CONTENT_NAME}\\` requires a description for the component to be accessible for screen reader users.\n\nYou can add a description to the \\`${CONTENT_NAME}\\` by passing a \\`${DESCRIPTION_NAME}\\` component as a child, which also benefits sighted users by adding visible context to the dialog.\n\nAlternatively, you can use your own component as a description by assigning it an \\`id\\` and passing the same value to the \\`aria-describedby\\` prop in \\`${CONTENT_NAME}\\`. If the description is confusing or duplicative for sighted users, you can use the \\`@radix-ui/react-visually-hidden\\` primitive as a wrapper around your description component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;\n\n  React.useEffect(() => {\n    const hasDescription = document.getElementById(\n      contentRef.current?.getAttribute('aria-describedby')!\n    );\n    if (!hasDescription) console.warn(MESSAGE);\n  }, [MESSAGE, contentRef]);\n\n  return null;\n};\n\nconst Root = AlertDialog;\nconst Trigger = AlertDialogTrigger;\nconst Portal = AlertDialogPortal;\nconst Overlay = AlertDialogOverlay;\nconst Content = AlertDialogContent;\nconst Action = AlertDialogAction;\nconst Cancel = AlertDialogCancel;\nconst Title = AlertDialogTitle;\nconst Description = AlertDialogDescription;\n\nexport {\n  createAlertDialogScope,\n  //\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Action,\n  Cancel,\n  Title,\n  Description,\n};\nexport type {\n  AlertDialogProps,\n  AlertDialogTriggerProps,\n  AlertDialogPortalProps,\n  AlertDialogOverlayProps,\n  AlertDialogContentProps,\n  AlertDialogActionProps,\n  AlertDialogCancelProps,\n  AlertDialogTitleProps,\n  AlertDialogDescriptionProps,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}