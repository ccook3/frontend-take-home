{"ast":null,"code":"import * as o from \"react\";\nimport n from \"classnames\";\nimport { Slot as u } from \"radix-ui\";\nimport { Text as f } from \"./text.js\";\nconst e = o.forwardRef((t, p) => {\n  const {\n      asChild: r,\n      children: s,\n      className: m,\n      ...l\n    } = t,\n    c = r ? u.Root : \"blockquote\";\n  return o.createElement(f, {\n    asChild: !0,\n    ...l,\n    ref: p,\n    className: n(\"rt-Blockquote\", m)\n  }, o.createElement(c, null, s));\n});\ne.displayName = \"Blockquote\";\nexport { e as Blockquote };","map":{"version":3,"names":["o","n","Slot","u","Text","f","e","forwardRef","t","p","asChild","r","children","s","className","m","l","c","Root","createElement","ref","displayName","Blockquote"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/node_modules/@radix-ui/themes/src/components/blockquote.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { Text } from './text.js';\n\nimport type { blockquotePropDefs } from './blockquote.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype BlockquoteElement = React.ElementRef<'blockquote'>;\ntype BlockQuoteOwnProps = GetPropDefTypes<typeof blockquotePropDefs>;\ninterface BlockquoteProps\n  extends ComponentPropsWithout<'blockquote', RemovedProps>,\n    MarginProps,\n    BlockQuoteOwnProps {}\nconst Blockquote = React.forwardRef<BlockquoteElement, BlockquoteProps>((props, forwardedRef) => {\n  const { asChild, children, className, ...blockquoteProps } = props;\n  const Comp = asChild ? Slot.Root : 'blockquote';\n  return (\n    <Text\n      asChild\n      {...blockquoteProps}\n      ref={forwardedRef}\n      className={classNames('rt-Blockquote', className)}\n    >\n      <Comp>{children}</Comp>\n    </Text>\n  );\n});\nBlockquote.displayName = 'Blockquote';\n\nexport { Blockquote };\nexport type { BlockquoteProps };\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AACvB,SAASC,IAAA,IAAAC,CAAA,QAAY;AAErB,SAASC,IAAA,IAAAC,CAAA,QAAY;AAarB,MAAMC,CAAA,GAAaN,CAAA,CAAMO,UAAA,CAA+C,CAACC,CAAA,EAAOC,CAAA,KAAiB;EAC/F,MAAM;MAAEC,OAAA,EAAAC,CAAA;MAASC,QAAA,EAAAC,CAAA;MAAUC,SAAA,EAAAC,CAAA;MAAW,GAAGC;IAAgB,IAAIR,CAAA;IACvDS,CAAA,GAAON,CAAA,GAAUR,CAAA,CAAKe,IAAA,GAAO;EACnC,OACElB,CAAA,CAAAmB,aAAA,CAACd,CAAA;IACCK,OAAA,EAAO;IACN,GAAGM,CAAA;IACJI,GAAA,EAAKX,CAAA;IACLK,SAAA,EAAWb,CAAA,CAAW,iBAAiBc,CAAS;EAAA,GAEhDf,CAAA,CAAAmB,aAAA,CAACF,CAAA,QAAMJ,CAAS,CAClB,CAEJ;AAAA,CAAC;AACDP,CAAA,CAAWe,WAAA,GAAc;AAAA,SAAAf,CAAA,IAAAgB,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}