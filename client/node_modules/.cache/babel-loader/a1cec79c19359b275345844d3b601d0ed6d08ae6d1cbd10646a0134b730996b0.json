{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport useSWR from 'swr';\nexport const API_BASE_URL = \"http://localhost:3002\";\nconst fetcher = async url => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(\"Error with network response\");\n  }\n  return response.json();\n};\nconst patcher = async (url, data) => {\n  const response = await fetch(url, {\n    method: 'PATCH',\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error(\"Error with network response\");\n  }\n  return response.json();\n};\nexport function useUsers(currentPage, searchText = \"\") {\n  _s();\n  const usersUrl = `${API_BASE_URL}/users?search=${searchText}&page=${currentPage}`;\n  const {\n    data: usersData,\n    error: usersError,\n    isLoading: usersLoading,\n    mutate\n  } = useSWR(usersUrl, fetcher);\n  const rolesUrl = `${API_BASE_URL}/roles`;\n  const {\n    data: rolesData,\n    error: rolesError,\n    isLoading: rolesLoading\n  } = useSWR(rolesUrl, fetcher);\n\n  // Combine users with their roles when both are available\n  const completeUsers = usersData && rolesData ? usersData.data.map(user => {\n    const role = rolesData.data.find(role => role.id === user.roleId);\n    return {\n      ...user,\n      role\n    };\n  }) : [];\n  const isLoading = usersLoading || rolesLoading;\n  const error = usersError || rolesError;\n  return {\n    data: usersData ? {\n      ...usersData,\n      completeUsers\n    } : null,\n    isLoading,\n    error,\n    mutate\n  };\n}\n_s(useUsers, \"a35JqtycXXLZoBIX7SjcOKLCUEo=\", false, function () {\n  return [useSWR, useSWR];\n});\nexport function useRoles() {\n  _s2();\n  const {\n    data,\n    isLoading,\n    error\n  } = useSWR(`${API_BASE_URL}/roles`, fetcher);\n  return {\n    data,\n    isLoading,\n    error\n  };\n}\n_s2(useRoles, \"sS6/vKJCSTNynGfmwXrkbgPofUo=\", false, function () {\n  return [useSWR];\n});\nexport function useUserRole(roleId) {\n  _s3();\n  const {\n    data,\n    isLoading,\n    error\n  } = useSWR(roleId ? `${API_BASE_URL}/roles?id=${roleId}` : null, fetcher);\n  return {\n    data,\n    isLoading,\n    error\n  };\n}\n_s3(useUserRole, \"sS6/vKJCSTNynGfmwXrkbgPofUo=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"names":["useSWR","API_BASE_URL","fetcher","url","response","fetch","ok","Error","json","patcher","data","method","body","JSON","stringify","useUsers","currentPage","searchText","_s","usersUrl","usersData","error","usersError","isLoading","usersLoading","mutate","rolesUrl","rolesData","rolesError","rolesLoading","completeUsers","map","user","role","find","id","roleId","useRoles","_s2","useUserRole","_s3"],"sources":["/Users/catiecook/Documents/workos/frontend-take-home/client/src/hooks/api.ts"],"sourcesContent":["import useSWR from 'swr';\nimport { Role } from \"../types/Role\";\nimport { User } from \"../types/User\";\n\nexport const API_BASE_URL = \"http://localhost:3002\";\n\nconst fetcher = async (url: string) => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(\"Error with network response\");\n  }\n  return response.json();\n};\n\nconst patcher = async (url: string, data: Partial<User>) => {\n  const response = await fetch(url, {\n      method: 'PATCH',\n      body: JSON.stringify(data)\n\n    });\n\n  if (!response.ok) {\n    throw new Error(\"Error with network response\");\n  }\n  return response.json();\n};\n\n\n\nexport function useUsers(currentPage: number, searchText: string = \"\") {\n\n  const usersUrl = `${API_BASE_URL}/users?search=${searchText}&page=${currentPage}`;\n  const { data: usersData, error: usersError, isLoading: usersLoading, mutate } = useSWR(usersUrl, fetcher);\n\n  const rolesUrl = `${API_BASE_URL}/roles`;\n  const { data: rolesData, error: rolesError, isLoading: rolesLoading } = useSWR(rolesUrl, fetcher);\n\n  // Combine users with their roles when both are available\n  const completeUsers = usersData && rolesData \n    ? usersData.data.map((user: User) => {\n        const role = rolesData.data.find((role: Role) => role.id === user.roleId);\n        return { ...user, role };\n      })\n    : [];\n\n  const isLoading = usersLoading || rolesLoading;\n  const error = usersError || rolesError;\n\n  return {\n    data: usersData ? { ...usersData, completeUsers } : null,\n    isLoading,\n    error,\n    mutate\n  };\n}\n\nexport function useRoles() {\n  const { data, isLoading, error, } = useSWR(`${API_BASE_URL}/roles`, fetcher);\n  \n  return {\n    data,\n    isLoading,\n    error\n  };\n}\n\nexport function useUserRole(roleId: string) {\n  const { data, isLoading, error, } = useSWR(\n    roleId ? `${API_BASE_URL}/roles?id=${roleId}` : null,\n    fetcher\n  );\n  \n  return {\n    data,\n    isLoading,\n    error\n  };\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}